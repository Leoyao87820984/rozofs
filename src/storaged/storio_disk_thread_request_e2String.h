#ifndef __storio_disk_thread_request_e2String_h__
#define __storio_disk_thread_request_e2String_h__
#ifdef __cplusplus
extern "C" {
#endif /*__cplusplus*/
#include <strings.h>

/*___________________________________________________________________
 
   Generated by enum2String.py 
   Date : Friday 2017 December 08, 15:45:38
   Command line : 
 ../../tools/enum2String.py -n storio_disk_thread_request_e -f storio_disk_thread_intf.h -c 19

  ____________________________________________________________________
*/

/*_________________________________________________________________
 * Builds a string from an integer value supposed to be within
 * the enumerated list storio_disk_thread_request_e
 *
 * @param x : value from storio_disk_thread_request_e to translate into a string
 *
 * The input value is translated into a string deduced from the enum
 * definition. When the input value do not fit any of the predefined
 * values, "??" is returned
 *
 * @return A char pointer to the constant string or "??"
 *_________________________________________________________________*/ 
static inline char * storio_disk_thread_request_e2String (const storio_disk_thread_request_e x) {
  switch(x) {
    case STORIO_DISK_THREAD_READ                 : return("READ");
    case STORIO_DISK_THREAD_RESIZE               : return("RESIZE");
    case STORIO_DISK_THREAD_WRITE                : return("WRITE");
    case STORIO_DISK_THREAD_TRUNCATE             : return("TRUNCATE");
    case STORIO_DISK_THREAD_WRITE_REPAIR3        : return("WRITE REPAIR3");
    case STORIO_DISK_THREAD_REMOVE               : return("REMOVE");
    case STORIO_DISK_THREAD_REMOVE_CHUNK         : return("REMOVE CHUNK");
    case STORIO_DISK_THREAD_REBUILD_START        : return("REBUILD START");
    case STORIO_DISK_THREAD_REBUILD_STOP         : return("REBUILD STOP");
    case STORIO_DISK_THREAD_READ_RDMA            : return("READ RDMA");
    case STORIO_DISK_THREAD_WRITE_RDMA           : return("WRITE RDMA");
    case STORIO_DISK_THREAD_FID                  : return("FID");
    case STORIO_DISK_THREAD_MAX_OPCODE           : return("MAX OPCODE");
    /* Unexpected value */
    default: return "??";
  }
}
/*_________________________________________________________________
 * Translate a string supposed to be within the enumerated list
 * storio_disk_thread_request_e to its integer value.
 *
 * @param s : the string to translate into an integer
 *
 * The input string is translated into its corresponding integer value.
 * When the input value do not fit any expected string -1 is returned.
 *
 * @return The integer value or -1
 *_________________________________________________________________*/ 
static inline int string2storio_disk_thread_request_e (const char * s) {
  if (strcasecmp(s,"READ")==0)  	return STORIO_DISK_THREAD_READ;
  if (strcasecmp(s,"RESIZE")==0)  	return STORIO_DISK_THREAD_RESIZE;
  if (strcasecmp(s,"WRITE")==0)  	return STORIO_DISK_THREAD_WRITE;
  if (strcasecmp(s,"TRUNCATE")==0)  	return STORIO_DISK_THREAD_TRUNCATE;
  if (strcasecmp(s,"WRITE REPAIR3")==0)  	return STORIO_DISK_THREAD_WRITE_REPAIR3;
  if (strcasecmp(s,"REMOVE")==0)  	return STORIO_DISK_THREAD_REMOVE;
  if (strcasecmp(s,"REMOVE CHUNK")==0)  	return STORIO_DISK_THREAD_REMOVE_CHUNK;
  if (strcasecmp(s,"REBUILD START")==0)  	return STORIO_DISK_THREAD_REBUILD_START;
  if (strcasecmp(s,"REBUILD STOP")==0)  	return STORIO_DISK_THREAD_REBUILD_STOP;
  if (strcasecmp(s,"READ RDMA")==0)  	return STORIO_DISK_THREAD_READ_RDMA;
  if (strcasecmp(s,"WRITE RDMA")==0)  	return STORIO_DISK_THREAD_WRITE_RDMA;
  if (strcasecmp(s,"FID")==0)  	return STORIO_DISK_THREAD_FID;
  if (strcasecmp(s,"MAX OPCODE")==0)  	return STORIO_DISK_THREAD_MAX_OPCODE;
  /* Unexpected value */
  return -1;
}

#ifdef	__cplusplus
}
#endif
#endif

