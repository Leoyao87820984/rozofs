
file.h,5338
#define _FILE_H_FILE_H20,674
#define FILE_CHECK_WORD FILE_CHECK_WORD27,817
  BUF_ST_EMPTY = 0,BUF_ST_EMPTY33,898
  BUF_ST_READ_BEFORE,BUF_ST_READ_BEFORE34,918
  BUF_ST_READ_INSIDE,BUF_ST_READ_INSIDE35,940
  BUF_ST_READ_AFTER,BUF_ST_READ_AFTER36,962
  BUF_ST_WRITE_BEFORE,BUF_ST_WRITE_BEFORE37,983
  BUF_ST_WRITE_INSIDE,BUF_ST_WRITE_INSIDE38,1006
  BUF_ST_WRITE_AFTER,BUF_ST_WRITE_AFTER39,1029
  BUF_ST_MAXBUF_ST_MAX40,1051
} rozofs_buf_read_write_state_e;rozofs_buf_read_write_state_e41,1064
    BUF_ACT_COPY_EMPTY = 0,BUF_ACT_COPY_EMPTY47,1120
    BUF_ACT_COPY,BUF_ACT_COPY48,1148
    BUF_ACT_COPY_OVERLAP,BUF_ACT_COPY_OVERLAP49,1166
    BUF_ACT_FLUSH_THEN_COPY_NEW,BUF_ACT_FLUSH_THEN_COPY_NEW50,1192
    BUF_ACT_FLUSH_ALIGN_THEN_COPY_NEW,BUF_ACT_FLUSH_ALIGN_THEN_COPY_NEW51,1225
    BUF_ACT_MAXBUF_ACT_MAX52,1264
 } rozofs_buf_read_write_action_e;rozofs_buf_read_write_action_e53,1280
    BUF_STATUS_DONE = 0,BUF_STATUS_DONE59,1337
    BUF_STATUS_WR_IN_PRG ,BUF_STATUS_WR_IN_PRG60,1362
    BUF_STATUS_FAILURE ,BUF_STATUS_FAILURE61,1389
    BUF_STATUS_MAXBUF_STATUS_MAX62,1414
 } rozofs_buf_read_write_status_e;rozofs_buf_read_write_status_e63,1433
typedef struct _rozo_buf_rw_status_t {_rozo_buf_rw_status_t66,1470
    int status;status67,1509
    int errcode;errcode68,1525
} rozo_buf_rw_status_t;rozo_buf_rw_status_t69,1542
typedef struct file {file73,1569
    ruc_obj_desc_t pending_rd_list;  /**< used to queue the FUSE contextr for which a read is requested  */pending_rd_list74,1591
    ruc_obj_desc_t pending_wr_list;  /**< used to queue the FUSE context waiting for flush completed  */pending_wr_list75,1699
    fid_t fid;fid76,1804
    int   chekWord;chekWord77,1819
    mode_t mode;mode78,1839
    mattr_t attrs;attrs79,1856
    exportclt_t *export;export80,1875
    char *buffer;buffer83,1964
    int closing;             /**< assert to 1 when the file has to be closed and there are some disks operation pending */closing84,1982
    int buf_write_wait;buf_write_wait85,2105
    int buf_write_pending;   /**< number of write requests that are pending */buf_write_pending86,2129
    int buf_read_pending;    /**< number of read requests that are pending */buf_read_pending87,2208
    int wr_error;            /**< last write error code                     */wr_error88,2286
    int buf_read_wait;buf_read_wait89,2365
    int rotation_counter;/**< Rotation counter on file distribution. Incremented on each rotation */rotation_counter90,2388
    int rotation_idx;    /**< Rotation index within the rozo forward distribution */ rotation_idx91,2489
    uint64_t read_pos;  /**< absolute position of the first available byte to read*/read_pos92,2575
    uint64_t read_from; /**< absolute position of the last available byte to read */read_from93,2660
    uint64_t write_pos;  /**< absolute position of the first available byte to read*/write_pos94,2745
    uint64_t write_from; /**< absolute position of the last available byte to read */write_from95,2831
    uint64_t current_pos;/**< Estimated current position in the file */current_pos96,2917
    uint64_t         lock_owner_ref; /**< Owner of the lock when a lock has been set. Used to release anylock_owner_ref100,3026
    ruc_obj_desc_t   pending_lock;   /**< To queue the context waiting for a blocking lock */pending_lock102,3220
    void           * fuse_req;       /**< Pointer to the saved fuse request when waiting for a blocking lock */fuse_req103,3314
    int              lock_type;      /**< Type of requested lock : EP_LOCK_READ or EP_LOCK_WRITE */   lock_type104,3426
    int              lock_size;      lock_size105,3529
    uint64_t         lock_start;     lock_start106,3567
    uint64_t         lock_stop;lock_stop107,3605
    int              lock_sleep;   lock_sleep108,3637
    int              lock_delay;lock_delay109,3673
    uint64_t         timeStamp;timeStamp110,3706
    uint64_t         read_consistency; /**< To check whether the buffer can be read safely */read_consistency111,3738
    void           * ie;               /**< Pointer ot the ientry in the cache */ie112,3832
    int              write_block_counter;  /**< increment each time a write block is called */write_block_counter113,3914
    int              write_block_pending;  /**< asserted when a write must be sent          */write_block_pending114,4009
    int              write_block_req;  /**< to force the write towards the metadata service (flush and close)          */write_block_req115,4104
    int              file2create;     /**< assert to one on a write when the attributes indicates a file size of 0    */file2create116,4226
    uint64_t         off_wr_start;    /**< geo replication :write offset start  */off_wr_start117,4347
    uint64_t         off_wr_end;      /**< geo replication :write offset end  */off_wr_end118,4430
} file_t;file_t126,4634
static inline void rozofs_file_working_var_init(file_t *file, void * ientry)rozofs_file_working_var_init135,4741
static inline void rozofs_geo_write_update(file_t *file,size_t size, off_t off)rozofs_geo_write_update180,5984
static inline int file_close(file_t * f) {file_close203,6370
 static inline int rozofs_is_file_closing (file_t * f) rozofs_is_file_closing234,7008

geocli_file_copy.c,478
int geo_cli_no_abort = 1;geo_cli_no_abort32,1040
void geo_cli_geo_file_sync_processing(geocli_ctx_t *p)geo_cli_geo_file_sync_processing46,1341
void geo_cli_geo_file_sync_read_end_cbk(void *param,int status)geo_cli_geo_file_sync_read_end_cbk180,4712
void geo_cli_geo_file_sync_write_end_cbk(void *param,int status)geo_cli_geo_file_sync_write_end_cbk303,8053
void geo_cli_geo_file_sync_remove_end_cbk(void *param,int status)geo_cli_geo_file_sync_remove_end_cbk389,10066

geocli_lbg.c,589
static north_remote_ip_list_t my_list[32];  /**< list of the connection for the exportd */my_list44,1288
static af_unix_socket_conf_t  af_inet_exportd_conf =af_inet_exportd_conf49,1429
static int get_service_tcp_port(char *host ,unsigned long prog, unsigned long vers) {get_service_tcp_port83,3784
static void export_lbg_periodic_ticker(void * param) {export_lbg_periodic_ticker111,4622
static void export_lbg_start_timer(exportclt_t *exportclt) {export_lbg_start_timer140,5593
int georep_lbg_initialize(exportclt_t *exportclt ,unsigned long prog,georep_lbg_initialize155,6017

geocli_read.c,276
static inline void rozofs_align_off_and_len(uint64_t off, int len, uint64_t * off_aligned, int * len_aligned) {rozofs_align_off_and_len34,1087
int geo_read_req(rzcp_copy_ctx_t * cpy_p) geo_read_req56,2053
void rzcp_read_cbk(void *this,void *param) rzcp_read_cbk130,4151

geocli_srv.c,2467
int geocli_period;  geocli_period35,1188
int geocli_slow_polling_count;geocli_slow_polling_count36,1209
int geocli_fast_polling_count;geocli_fast_polling_count37,1240
int geocli_current_count;geocli_current_count38,1271
int geocli_current_delay;geocli_current_delay39,1297
geocli_ctx_t *geocli_ctx_p= NULL;geocli_ctx_p41,1324
int geo_replica_log_enable = 0;geo_replica_log_enable42,1358
char *geocli_display_one_file_info(char *p,geo_fid_entry_t *info_p)geocli_display_one_file_info61,1762
void show_geo_current_files(char * argv[], uint32_t tcpRef, void *bufRef) {show_geo_current_files95,2701
#define DISPLAY_UINT32_CONFIG(DISPLAY_UINT32_CONFIG116,3587
#define DISPLAY_STRING_CONFIG(DISPLAY_STRING_CONFIG117,3695
void show_synchro_ctx(char * argv[], uint32_t tcpRef, void *bufRef) {show_synchro_ctx122,3917
#define SHOW_GEO_CLI_PROFILER_PROBE(SHOW_GEO_CLI_PROFILER_PROBE145,4782
#define SHOW_RZCP_PROFILER_PROBE(SHOW_RZCP_PROFILER_PROBE155,5324
char * show_geo_profiler_display(char * pChar) {show_geo_profiler_display165,5992
static char * show_geo_profiler_help(char * pChar) {show_geo_profiler_help184,6918
void show_geo_profiler(char * argv[], uint32_t tcpRef, void *bufRef) {show_geo_profiler192,7341
int geo_cli_start_timer(int period)geo_cli_start_timer245,8892
void geo_cli_sync_req_cbk(void *this,void *param) geo_cli_sync_req_cbk275,9597
void geo_cli_geo_sync_req_processing(geocli_ctx_t *p)geo_cli_geo_sync_req_processing405,13231
void geo_cli_geo_sync_get_next_req_cbk(void *this,void *param) geo_cli_geo_sync_get_next_req_cbk461,14668
void geo_cli_geo_sync_get_next_req_processing(geocli_ctx_t *p)geo_cli_geo_sync_get_next_req_processing591,18265
void geo_cli_geo_sync_delete_req_cbk(void *this,void *param) geo_cli_geo_sync_delete_req_cbk648,19802
void geo_cli_geo_sync_close_req_cbk(void *this,void *param) geo_cli_geo_sync_close_req_cbk757,22704
void geo_cli_geo_sync_close_req_processing(geocli_ctx_t *p)geo_cli_geo_sync_close_req_processing863,25525
void geo_cli_geo_sync_delete_req_processing(geocli_ctx_t *p)geo_cli_geo_sync_delete_req_processing920,26960
void geo_cli_state_idle_processing(geocli_ctx_t *p)geo_cli_state_idle_processing997,28796
static void geo_cli_periodic_ticker(void * param) {geo_cli_periodic_ticker1024,29405
int geocli_alloc_ctx(uint16_t eid,uint16_t site)geocli_alloc_ctx1054,29954
int geocli_init(int period,uint16_t eid,uint16_t site_id)geocli_init1086,30792

geocli_srv.h,2475
 #define GEOCLI_SRV_HGEOCLI_SRV_H20,681
  GEOCLI_ST_IDLE = 0,GEOCLI_ST_IDLE28,772
  GEOCLI_ST_INPRG,GEOCLI_ST_INPRG29,794
  GEOCLI_ST_MAXGEOCLI_ST_MAX30,813
} geocli_ctx_state_e;geocli_ctx_state_e31,829
  GEOSYNC_ST_IDLE = 0,GEOSYNC_ST_IDLE36,869
  GEOSYNC_ST_SYNC_FILE,GEOSYNC_ST_SYNC_FILE37,892
  GEOSYNC_ST_GETNEXT,GEOSYNC_ST_GETNEXT38,916
  GEOSYNC_ST_GETDEL,GEOSYNC_ST_GETDEL39,938
  GEOSYNC_ST_MAXGEOSYNC_ST_MAX40,959
} geocli_sync_state_e;geocli_sync_state_e41,976
typedef struct _geo_cli_profiler_t {_geo_cli_profiler_t46,1030
  uint64_t geo_sync_req[5];geo_sync_req47,1067
  uint64_t geo_sync_get_next_req[5];geo_sync_get_next_req48,1095
  uint64_t geo_sync_delete_req[5];geo_sync_delete_req49,1132
  uint64_t geo_sync_close_req[5];geo_sync_close_req50,1167
} geo_cli_profiler_t;geo_cli_profiler_t51,1201
typedef struct _geocli_ctx_t_geocli_ctx_t54,1225
   uint64_t timestamp;timestamp56,1256
   geocli_ctx_state_e state;state57,1279
   geocli_sync_state_e state_sync;state_sync58,1308
   uint64_t file_idx;file_idx59,1343
   uint16_t  eid;      /**< export identifier */eid61,1406
   uint16_t  site_id;   /**< local site identifier */site_id62,1455
   uint32_t local_ref;local_ref63,1509
   uint32_t remote_ref;remote_ref64,1532
   uint32_t last;last65,1556
   uint32_t first_record;  /**< index of the first record in data_record */first_record66,1574
   uint32_t nb_records;    /**< nb records in data record                */nb_records67,1650
   uint32_t cur_record;    /**< current index in data_record             */cur_record68,1726
   uint32_t data_record_len;data_record_len69,1802
   char     *data_record;data_record70,1831
   uint64_t status_bitmap;status_bitmap71,1857
   uint32_t delete_forbidden;  /**< asserted if there is a failure on a record */delete_forbidden72,1884
   geo_cli_profiler_t profiler;profiler73,1966
} geocli_ctx_t;   geocli_ctx_t74,1998
#define GEO_IDX_COUNT GEO_IDX_COUNT76,2018
#define GEO_IDX_TMO GEO_IDX_TMO77,2042
#define GEO_IDX_ERR GEO_IDX_ERR78,2064
#define GEO_IDX_TIME GEO_IDX_TIME79,2086
#define GEO_IDX_SAVE_TIME GEO_IDX_SAVE_TIME80,2109
#define START_GEO_CLI_PROFILING(START_GEO_CLI_PROFILING82,2138
#define STOP_GEO_CLI_PROFILING(STOP_GEO_CLI_PROFILING90,2365
 #define GEO_DEF_PERIO_MS GEO_DEF_PERIO_MS126,3333
 #define GEO_SLOW_POLL_COUNT GEO_SLOW_POLL_COUNT127,3363
 #define GEO_FAST_POLL_COUNT GEO_FAST_POLL_COUNT128,3396

rozofsmount.c,2268
#define hash_xor8(hash_xor842,1227
#define INODE_HSIZE INODE_HSIZE43,1301
#define PATH_HSIZE PATH_HSIZE44,1326
#define CACHE_TIMEOUT CACHE_TIMEOUT46,1352
#define ROZOFSMOUNT_MAX_TX ROZOFSMOUNT_MAX_TX48,1380
#define CONNECTION_THREAD_TIMESPEC CONNECTION_THREAD_TIMESPEC50,1411
#define STORCLI_STARTER STORCLI_STARTER52,1450
#define STORCLI_KILLER STORCLI_KILLER53,1496
#define STORCLI_EXEC STORCLI_EXEC54,1540
int rozofs_rotation_read_modulo = 0;rozofs_rotation_read_modulo57,1619
static char *mountpoint = NULL;mountpoint58,1656
sem_t *semForEver; /**< semaphore used for stopping rozofsmount: typically on umount */semForEver62,1736
uint64_t   rozofs_client_hash=0;rozofs_client_hash72,1921
int rozofs_site_number;  /**< site number for geo-replication */rozofs_site_number77,2002
static inline uint64_t rozofs_client_hash_compute(char * hostname, int instance) {rozofs_client_hash_compute89,2271
void rozofs_exit() {rozofs_exit116,2794
static void usage() {usage129,3120
static rozofsmnt_conf_t conf;conf144,4530
exportclt_t exportclt; exportclt147,4627
#define DISPLAY_UINT32_CONFIG(DISPLAY_UINT32_CONFIG184,5684
#define DISPLAY_INT32_CONFIG(DISPLAY_INT32_CONFIG185,5783
#define DISPLAY_STRING_CONFIG(DISPLAY_STRING_CONFIG186,5881
void show_start_config(char * argv[], uint32_t tcpRef, void *bufRef) {show_start_config190,6084
static char * show_rotate_modulo_help(char * pChar) {show_rotate_modulo_help223,7322
void show_rotate_modulo(char * argv[], uint32_t tcpRef, void *bufRef) {show_rotate_modulo229,7607
typedef struct _xmalloc_stats_t {_xmalloc_stats_t261,8640
    uint64_t count;count262,8674
    int size;size263,8694
} xmalloc_stats_t;xmalloc_stats_t264,8708
#define XMALLOC_MAX_SIZE XMALLOC_MAX_SIZE266,8728
void show_xmalloc(char * argv[], uint32_t tcpRef, void *bufRef) {show_xmalloc270,8806
void rozofs_kill_one_storcli(int instance) {rozofs_kill_one_storcli293,9452
void rozofs_start_one_storcli(int instance) {rozofs_start_one_storcli301,9644
void rozofs_kill_storcli() {rozofs_kill_storcli355,11737
void rozofs_start_storcli() {rozofs_start_storcli362,11869
int fuseloop(/*struct fuse_args *args,*/ int fg) {fuseloop374,12024
int main(int argc, char *argv[]) {main543,17319

rozofsmount.h,2633
#define ROZOFSMOUNT_HROZOFSMOUNT_H20,680
#define hash_xor8(hash_xor827,805
#define ROOT_INODE ROOT_INODE28,879
typedef struct rozofsmnt_conf {rozofsmnt_conf41,1160
    char *host;host42,1192
    char *export;export43,1208
    char *passwd;passwd44,1226
    unsigned buf_size;buf_size45,1244
    unsigned min_read_size;min_read_size46,1267
    unsigned nbstorcli;    nbstorcli47,1295
    unsigned max_retry;max_retry48,1323
    unsigned dbg_port;  /**< lnkdebug base port: rozofsmount=dbg_port, storcli(1)=dbg_port+1, ....  */dbg_port49,1347
    unsigned instance;  /**< rozofsmount instance: needed when more than 1 rozofsmount run the same server and exports the same filesystem */instance50,1450
    unsigned export_timeout;export_timeout51,1592
    unsigned storcli_timeout;storcli_timeout52,1621
    unsigned storage_timeout;storage_timeout53,1651
    unsigned fs_mode; /**< rozofs mode: 0-> file system/ 1-> block mode */fs_mode54,1681
    unsigned cache_mode;  /**< 0: no option, 1: direct_read, 2: keep_cache */cache_mode55,1756
    unsigned attr_timeout;attr_timeout56,1834
    unsigned entry_timeout;entry_timeout57,1861
    unsigned nb_cores;nb_cores58,1889
    unsigned shaper;shaper59,1912
    unsigned rotate;rotate60,1933
    unsigned posix_file_lock;    posix_file_lock61,1954
    unsigned bsd_file_lock;  bsd_file_lock62,1988
    unsigned max_write_pending ; /**< Maximum number pending write */max_write_pending63,2018
    unsigned quota; /* ignored */quota64,2088
    unsigned noXattr;noXattr65,2122
    int site;site66,2144
    int conf_site_file;conf_site_file67,2158
    unsigned running_site;running_site68,2182
} rozofsmnt_conf_t;rozofsmnt_conf_t69,2209
typedef struct _rozofs_fuse_conf_t_rozofs_fuse_conf_t72,2231
   uint16_t debug_port;   /**< port value to be used by rmonitor  */debug_port74,2268
   uint16_t instance;     /**< rozofsmount instance: needed when more than 1 rozofsmount run the same server and exports the same filesystem */instance75,2337
   uint16_t nb_cores;     /**< Number of core files */nb_cores76,2481
   void     *se;          /**< pointer to the session context     */se77,2536
   void    *ch;           /**< pointer to the channel context     */ch78,2605
   void    *exportclt;           /**< pointer to the exportd conf     */exportclt79,2674
   int      max_transactions; /**< max number of simultaneous transactions */max_transactions80,2747
   unsigned site;site81,2825
} rozofs_fuse_conf_t;rozofs_fuse_conf_t83,2844
static inline int rozofs_get_site_number()rozofs_get_site_number92,3048

rozofs_non_blocking_main.c,403
struct timeval Global_timeDay;Global_timeDay33,1191
unsigned long long Global_timeBefore, Global_timeAfter;Global_timeBefore34,1222
unsigned long long Global_timeBefore, Global_timeAfter;Global_timeAfter34,1222
static rozofs_fuse_conf_t *args_p;args_p35,1278
uint32_t ruc_init(uint32_t test, uint16_t debug_port) {ruc_init38,1315
int rozofs_stat_start(void *args) {rozofs_stat_start189,5519

rozofs_rw_load_balancing.c,1532
ruc_obj_desc_t stclbg_hash_table[STCLBG_HASH_SIZE];stclbg_hash_table28,895
int stclbg_next_idx = 0; /**< index of the next storcli to use */stclbg_next_idx30,948
int stclbg_init_done = 0;stclbg_init_done31,1014
int stclbg_storcli_count = 2;stclbg_storcli_count34,1116
uint64_t stclbg_storcli_stats[STORCLI_PER_FSMOUNT];stclbg_storcli_stats37,1148
uint64_t stclbg_hash_lookup_hit_count;stclbg_hash_lookup_hit_count38,1200
uint64_t stclbg_hash_lookup_miss_count;stclbg_hash_lookup_miss_count39,1239
uint64_t stclbg_hash_lookup_insert_count;stclbg_hash_lookup_insert_count40,1279
int stclbg_set_storcli_number (int nb) {stclbg_set_storcli_number50,1509
int stclbg_update_storcli_number (int nb) {stclbg_update_storcli_number67,1879
int stclbg_get_storcli_number (void) {stclbg_get_storcli_number96,2545
#define TRAFFIC_SHAPER_COUNTER(TRAFFIC_SHAPER_COUNTER103,2683
static char * show_stclbg_help(char * pChar) {show_stclbg_help104,2807
void show_stclbg(char * argv[], uint32_t tcpRef, void *bufRef) show_stclbg111,3134
static inline int fid_cmp(void *key1, void *key2) {fid_cmp171,5228
static unsigned int fid_hash(void *key) {fid_hash183,5498
rozofs_tx_rw_lbg_t *stclbg_hash_table_search_ctx(fid_t fid, int *storcli_idx)stclbg_hash_table_search_ctx206,6042
void stclbg_hash_table_insert_ctx(rozofs_tx_rw_lbg_t *p, fid_t fid, int storcli_idx)stclbg_hash_table_insert_ctx265,7373
int stclbg_storcli_idx_from_fid(fid_t fid)stclbg_storcli_idx_from_fid312,8700
void stclbg_init()stclbg_init340,9284

rozofs_rw_load_balancing.h,119
#define ROZOFS_RW_LOAD_BALANCING_HROZOFS_RW_LOAD_BALANCING_H20,693
#define STCLBG_HASH_SIZE STCLBG_HASH_SIZE24,777

rozofs_sharedmem.c,414
rozofs_shared_pool_t rozofs_storcli_shared_mem[SHAREMEM_PER_FSMOUNT];rozofs_storcli_shared_mem26,849
void rozofs_shared_mem_display(char * argv[], uint32_t tcpRef, void *bufRef)rozofs_shared_mem_display33,1086
int rozofs_create_shared_memory(int key_instance,int pool_idx,uint32_t buf_nb, uint32_t buf_sz)rozofs_create_shared_memory73,2696
void rozofs_init_shared_memory()rozofs_init_shared_memory103,3813

rozofs_sharedmem.h,944
#define ROZOFS_SHAREDMEM_HROZOFS_SHAREDMEM_H20,685
typedef struct _rozofs_shared_pool_t_rozofs_shared_pool_t27,848
   key_t key;           /**< key of the shared memory pool */key29,887
   void *pool_p;        /**< reference of the pool         */pool_p30,949
   uint32_t buf_sz;     /**< size of a buffer              */buf_sz31,1011
   uint32_t buf_count;  /**< number of buffer              */buf_count32,1073
   void *data_p;        /**< pointer to the beginning of the shared memory     */data_p33,1135
   uint64_t read_stats; /**< allocate statistics: incremented each time it is allocated     */read_stats34,1217
} rozofs_shared_pool_t;rozofs_shared_pool_t35,1312
static inline void  *rozofs_alloc_shared_storcli_buf(int pool_id)rozofs_alloc_shared_storcli_buf90,2969
static inline int rozofs_get_shared_storcli_payload_idx(void *ruc_buf,int pool_id,uint32_t *length_p)rozofs_get_shared_storcli_payload_idx124,3849

rozofs_tx_client_export.c,267
int rozofs_export_send_common(exportclt_t * clt,uint32_t timeout_sec,uint32_t prog,uint32_t vers,rozofs_export_send_common59,2161
int rozofs_storcli_send_common(exportclt_t * clt,uint32_t timeout_sec,uint32_t prog,uint32_t vers,rozofs_storcli_send_common233,7695

rzcp_copy.c,143
rzcp_copy_ctx_t *rzcp_copy_init(fid_t fid_s,cid_t cid_s,sid_t *sids_s,uint8_t layout_s,uint64_t off_start,uint64_t len,rzcp_copy_init57,1736

rzcp_copy.h,190
#define RZCP_COPY_HRZCP_COPY_H29,962
static inline void rzcp_align_off_and_len(uint64_t off, uint64_t len, uint64_t * off_aligned, uint64_t * len_aligned) {rzcp_align_off_and_len40,1251

rzcp_file_ctx.c,1761
rzcp_copy_ctx_t *rzcp_context_freeListHead; /**< head of list of the free context  */rzcp_context_freeListHead29,909
rzcp_copy_ctx_t rzcp_context_activeListHead; /**< list of the active context     */rzcp_context_activeListHead30,995
uint32_t rzcp_context_count; /**< Max number of contexts    */rzcp_context_count32,1080
int32_t rzcp_context_allocated; /**< current number of allocated context        */rzcp_context_allocated33,1143
rzcp_copy_ctx_t *rzcp_context_pfirst; /**< pointer to the first context of the pool */rzcp_context_pfirst34,1226
uint32_t rzcp_global_context_id = 0;rzcp_global_context_id35,1313
uint64_t rzcp_stats[RZCP_CTX_COUNTER_MAX];rzcp_stats37,1351
rzcp_profiler_t rzcp_profiler;rzcp_profiler39,1426
int rzcp_log_enable;rzcp_log_enable40,1457
#define MICROLONG(MICROLONG42,1479
#define RZCP_CTX_DEBUG_TOPIC RZCP_CTX_DEBUG_TOPIC43,1562
void rzcp_debug_show(uint32_t tcpRef, void *bufRef) {rzcp_debug_show52,1905
void rzcp_debug(char * argv[], uint32_t tcpRef, void *bufRef) {rzcp_debug78,3677
void rzcp_debug_init() {rzcp_debug_init89,4078
rzcp_copy_ctx_t *rzcp_getObjCtx_p(uint32_t context_id) {rzcp_getObjCtx_p112,4510
uint32_t rzcp_getObjCtx_ref(rzcp_copy_ctx_t *p) {rzcp_getObjCtx_ref148,5487
void rzcp_ctxInit(rzcp_copy_ctx_t *p, uint8_t creation) {rzcp_ctxInit175,6078
rzcp_copy_ctx_t *rzcp_alloc() {rzcp_alloc203,6859
uint32_t rzcp_createIndex(uint32_t context_id) {rzcp_createIndex247,7966
uint32_t rzcp_free_from_idx(uint32_t context_id) {rzcp_free_from_idx292,8916
uint32_t rzcp_free_from_ptr(rzcp_copy_ctx_t *p) {rzcp_free_from_ptr358,10365
int rzcp_module_init(uint32_t context_count) rzcp_module_init382,10871
int rzcp_get_free_ctx_number(void){rzcp_get_free_ctx_number446,12650

rzcp_file_ctx.h,4246
#define RZCP_FILE_HRZCP_FILE_H20,678
typedef struct rzcp_profiler_t {rzcp_profiler_t28,826
  uint64_t copy_file[6];copy_file29,859
  uint64_t remove_file[6];remove_file30,884
} rzcp_profiler_t;rzcp_profiler_t31,911
#define RZCP_IDX_COUNT RZCP_IDX_COUNT33,931
#define RZCP_IDX_TMO RZCP_IDX_TMO34,956
#define RZCP_IDX_ERR RZCP_IDX_ERR35,979
#define RZCP_IDX_TIME RZCP_IDX_TIME36,1002
#define RZCP_IDX_SAVE_TIME RZCP_IDX_SAVE_TIME37,1026
#define RZCP_IDX_BYTE_COUNT RZCP_IDX_BYTE_COUNT38,1055
#define START_RZCPY_PROFILING(START_RZCPY_PROFILING40,1086
#define RZCPY_PROFILING_BYTES(RZCPY_PROFILING_BYTES48,1317
#define STOP_RZCPY_PROFILING(STOP_RZCPY_PROFILING53,1431
#define RZCP_MAX_CTX RZCP_MAX_CTX75,2009
#define RZCPY_MAX_BUF_LEN RZCPY_MAX_BUF_LEN76,2085
typedef struct _rzcp_file_ctx_rzcp_file_ctx77,2122
    fid_t fid;                      /**< file identifier                                */fid79,2154
    cid_t cid;                      /**< cluster id 0 for non regular files             */cid80,2245
    int   layout;                   /**< layout of the file                             */layout81,2336
    sid_t sids[ROZOFS_SAFE_MAX];    /**< sid of storage nodes target (regular file only)*/    sids82,2427
    int rotation_counter; /**< Rotation counter on file distribution. Incremented on each rotation */rotation_counter83,2522
    int rotation_idx;     /**< Rotation index within the rozo forward distribution */ rotation_idx84,2624
    uint64_t off_start;       /**< starting offset        */off_start85,2711
    int64_t initial_len;     /**< initial length         */initial_len86,2772
    uint64_t off_cur;         /**< current read offset    */off_cur87,2832
    uint64_t len_cur;         /**< current length         */len_cur88,2893
    int      retry_cur;  retry_cur89,2954
    int      errcode;     errcode90,2980
} rzcp_file_ctx_t;  rzcp_file_ctx_t91,3007
typedef void (*rzcp_cpy_pf_t)(void*,int);rzcp_cpy_pf_t98,3149
typedef struct _rzcp_copy_ctx_rzcp_copy_ctx100,3192
   ruc_obj_desc_t    link;        /**< To be able to chain the context on any list      */link102,3224
   uint32_t            index;     /**< Index of the context                             */index103,3315
   uint32_t            free;      /**< Is the context free or allocated TRUE/FALSE      */free104,3406
   uint32_t            integrity; /**< the value of this field is incremented at  each ctx allocation */integrity105,3497
   rzcp_file_ctx_t read_ctx;read_ctx109,3647
   rzcp_file_ctx_t write_ctx;  write_ctx110,3676
   int len2read;                 /**< effective length to read */len2read111,3708
   int received_len;             /**< received length          */received_len112,3774
   int   storcli_idx;      /**< index of the strocli to use     */storcli_idx116,3880
   int   shared_buf_idx[SHAREMEM_PER_FSMOUNT];   /**< index of the shared buffer      */shared_buf_idx117,3947
   void *shared_buf_ref[SHAREMEM_PER_FSMOUNT];   /**< pointer to the shared buffer    */shared_buf_ref118,4036
   void *buffer;           /**< reference of the  buffer allocated thanks malloc */buffer119,4125
   int   errcode;          /**< operation errcode               */errcode120,4209
   uint64_t timestamp;     /**< current time for statistics     */timestamp121,4276
   rzcp_cpy_pf_t rzcp_copy_cbk;  /**< callback for end of read or write transaction*/rzcp_copy_cbk122,4343
   void *opaque;opaque126,4466
   rzcp_cpy_pf_t rzcp_caller_cbk;  /**< callback for end of copy service */     rzcp_caller_cbk127,4483
} rzcp_copy_ctx_t;rzcp_copy_ctx_t128,4564
  RZCP_CTX_TIMEOUT=0,RZCP_CTX_TIMEOUT136,4633
  RZCP_CTX_NO_CTX_ERROR,RZCP_CTX_NO_CTX_ERROR137,4655
  RZCP_CTX_CTX_MISMATCH,RZCP_CTX_CTX_MISMATCH138,4680
  RZCP_CTX_CPY_INIT_ERR,RZCP_CTX_CPY_INIT_ERR139,4705
  RZCP_CTX_CPY_BAD_READ_LEN,RZCP_CTX_CPY_BAD_READ_LEN140,4730
  RZCP_CTX_CPY_READ_ERR,RZCP_CTX_CPY_READ_ERR141,4759
  RZCP_CTX_CPY_WRITE_ERR,RZCP_CTX_CPY_WRITE_ERR142,4784
  RZCP_CTX_CPY_ABORT_ERR,RZCP_CTX_CPY_ABORT_ERR143,4810
  RZCP_CTX_COUNTER_MAX,RZCP_CTX_COUNTER_MAX144,4836
} rzcp_ctx_stats_e;rzcp_ctx_stats_e145,4860
#define RZCP_CTX_STATS(RZCP_CTX_STATS150,4977

rzcp_read.c,133
int rzcp_read_req(rzcp_copy_ctx_t * cpy_p) rzcp_read_req50,1746
void rzcp_read_cbk(void *this,void *param) rzcp_read_cbk129,4050

rzcp_remove.c,140
int rzcp_remove_req(rzcp_copy_ctx_t * cpy_p) rzcp_remove_req48,1610
void rzcp_remove_cbk(void *this,void *param) rzcp_remove_cbk89,2790

rzcp_write.c,137
int rzcp_write_req(rzcp_copy_ctx_t * cpy_p) rzcp_write_req51,1689
void rzcp_write_cbk(void *this,void *param) rzcp_write_cbk130,4068

../../rozofs/common/daemon.c,465
static char pid_file[255];pid_file37,973
static int write_pid(const char *name) {write_pid44,1135
static int read_pid(const char *name, int *pid) {read_pid67,1637
static void remove_pid_file(int sig) {remove_pid_file115,2700
void daemon_start(char * path, int nbCoreFiles, const char *name, void (*on_start) (void),daemon_start118,2761
void no_daemon_start(char * path, int nbCoreFiles, const char *name, void (*on_start) (void),no_daemon_start150,3666

../../rozofs/common/daemon.h,35
#define _DAEMON_H_DAEMON_H20,664

../../rozofs/common/dist.h,251
#define _DIST_H_DIST_H20,661
typedef uint16_t dist_t;dist_t36,1068
#define dist_is_set(dist_is_set43,1187
#define dist_set_true(dist_set_true50,1333
#define dist_set_false(dist_set_false57,1475
#define dist_set_value(dist_set_value65,1721

../../rozofs/common/export_track.h,2955
#define EXPORT_TRACK_CREATE_HEXPORT_TRACK_CREATE_H38,1007
#define EXP_TRCK_MAIN_FILENAME EXP_TRCK_MAIN_FILENAME40,1038
typedef uuid_t fid_t;fid_t44,1130
typedef struct _exp_trck_header_t _exp_trck_header_t48,1198
  uint64_t first_idx;  /**< first file index within a tracking directory */first_idx50,1235
  uint64_t last_idx; /**< last file index within a tracking directory    */last_idx51,1311
} exp_trck_header_t;exp_trck_header_t53,1388
#define GET_FILE_OFFSET(GET_FILE_OFFSET72,1737
#define EXP_TRCK_MAX_INODE_PER_FILE EXP_TRCK_MAX_INODE_PER_FILE73,1811
typedef struct _exp_trck_file_header_t_exp_trck_file_header_t74,1877
     uint64_t  creation_time;    /**< creation time of the tracking file             */creation_time76,1918
     uint16_t  inode_idx_table[EXP_TRCK_MAX_INODE_PER_FILE];  /**< table that contains the relative inode idx within the file     */inode_idx_table77,2006
} exp_trck_file_header_t;exp_trck_file_header_t78,2139
#define EXP_TRCK_MAX_RECURSE EXP_TRCK_MAX_RECURSE81,2167
#define EXP_TRCK_MAIN_REPLICA_COUNT EXP_TRCK_MAIN_REPLICA_COUNT85,2246
typedef struct _exp_trck_header_memory_t_exp_trck_header_memory_t86,2342
     uint8_t user_id;        /**< user identifier: typical the number of the directory        */user_id88,2385
     char    *root_path;     /**< root path of the tracking system for the user               */root_path89,2482
     int fd[EXP_TRCK_MAIN_REPLICA_COUNT];   /**< file descriptor of the main tracking file    */fd90,2579
     uint64_t cur_main_idx;    /**< current starting index for lookup */cur_main_idx91,2676
     exp_trck_header_t entry;  /**< tracking context entry */entry92,2749
     int index_available;      /**< 1: current tracking file is available                     */index_available93,2811
     int cur_tracking_file_fd;   /**< file descriptor associated with the current tracking file */cur_tracking_file_fd94,2908
     uint16_t max_attributes_sz;  /**< max size of the attributes :512,1024,1024+512 etc.. */max_attributes_sz95,3007
     uint16_t cur_idx;           /**< current inode index within the tracking file              */cur_idx96,3101
     exp_trck_file_header_t *tracking_file_hdr_p;  /**< pointer to the tracking file header     */tracking_file_hdr_p97,3200
} exp_trck_header_memory_t;exp_trck_header_memory_t98,3299
#define EXP_TRCK_MAX_USER_ID EXP_TRCK_MAX_USER_ID101,3329
typedef struct _exp_trck_top_header_t_exp_trck_top_header_t105,3419
   char name[256];    /**< name of the table   */name107,3461
   uint16_t max_attributes_sz;  /**< max size of the attributes :512,1024,1024+512 etc.. */max_attributes_sz108,3511
   char root_path[1024];  root_path109,3603
   int create_flag;    /**< assert to 1 when tracking main file has to be created */create_flag110,3630
   exp_trck_header_memory_t *entry_p[EXP_TRCK_MAX_USER_ID];entry_p111,3715
} exp_trck_top_header_t;exp_trck_top_header_t112,3775

../../rozofs/common/exp_trck_inode_srv_v2.c,3252
int open_count;open_count33,910
int close_count;close_count34,926
#define CLOSE_CONTROL(CLOSE_CONTROL35,943
int exp_trck_write_main_tracking_file(char * root_path,uint8_t user_id,off_t offset,size_t size,void *data_p)exp_trck_write_main_tracking_file53,1538
int exp_trck_open_and_read_main_tracking_file(char * root_path,uint8_t user_id,void *data_p,int create_flag)exp_trck_open_and_read_main_tracking_file125,3428
int exp_trck_increment_main_tracking_file(exp_trck_header_memory_t *main_trck_p)exp_trck_increment_main_tracking_file265,6833
int exp_trck_open_tracking_file(exp_trck_header_memory_t *main_trck_p, int *reloop)exp_trck_open_tracking_file287,7539
int  exp_trck_check_tracking_file_full(exp_trck_header_memory_t *main_trck_p)exp_trck_check_tracking_file_full503,13739
int exp_trck_get_relative_inode_idx(int fd,char *root_path ,rozofs_inode_t *inode)exp_trck_get_relative_inode_idx537,14591
void exp_trck_release_header_memory(exp_trck_header_memory_t *p)exp_trck_release_header_memory605,16227
exp_trck_header_memory_t *exp_trck_allocate_header_memory(exp_trck_top_header_t *top_hdr_p,int user_id,int create_flag)exp_trck_allocate_header_memory630,16918
int exp_trck_main_allocate_inode(exp_trck_header_memory_t  *main_trck_p,rozofs_inode_t *inode)exp_trck_main_allocate_inode702,18798
int exp_metadata_allocate_inode(exp_trck_top_header_t *top_hdr_p,rozofs_inode_t *inode,uint16_t key,uint8_t slice)exp_metadata_allocate_inode757,20325
int exp_metadata_release_inode(exp_trck_top_header_t *top_hdr_p,rozofs_inode_t *inode)exp_metadata_release_inode793,21162
int exp_trck_rw_attributes(char *root_path,rozofs_inode_t *inode,void *attr_p,int attr_sz,int max_attr_sz,int read)exp_trck_rw_attributes881,23706
int exp_metadata_write_attributes(exp_trck_top_header_t *top_hdr_p,rozofs_inode_t *inode,void *attr_p,int attr_sz)exp_metadata_write_attributes950,25450
int exp_metadata_read_attributes(exp_trck_top_header_t *top_hdr_p,rozofs_inode_t *inode,void *attr_p,int attr_sz)exp_metadata_read_attributes987,26410
int exp_metadata_trck_lookup_ctx_init(exp_trck_header_memory_t  *main_trck_p)exp_metadata_trck_lookup_ctx_init1019,27250
int exp_trck_get_tracking_file_header(exp_trck_header_memory_t  *main_trck_p,uint64_t file_id,exp_trck_file_header_t *buf_p,int *nb_entries_p)exp_trck_get_tracking_file_header1041,27945
int exp_metadata_get_main_tracking_file_header(exp_trck_top_header_t *top_hdr_p,exp_metadata_get_main_tracking_file_header1121,30315
int exp_metadata_update_main_tracking_file_header(exp_trck_top_header_t *top_hdr_p,exp_metadata_update_main_tracking_file_header1154,31287
int exp_metadata_get_tracking_file_header(exp_trck_top_header_t *top_hdr_p,exp_metadata_get_tracking_file_header1192,32544
uint64_t exp_metadata_get_tracking_file_count(exp_trck_file_header_t *track_hdr_p)exp_metadata_get_tracking_file_count1217,33279
int exp_trck_top_release(exp_trck_top_header_t *top_hdr_p)exp_trck_top_release1240,33823
int exp_trck_top_add_user_id(exp_trck_top_header_t *top_hdr_p,int user_id)exp_trck_top_add_user_id1270,34521
exp_trck_top_header_t *exp_trck_top_allocate(char *name,char *root_path,uint16_t max_attributes_sz,int create_flag)exp_trck_top_allocate1303,35387

../../rozofs/common/geo_replica_str.h,512
#define GEO_REPLICA_STR_HGEO_REPLICA_STR_H19,684
#define GEO_MAX_RECORDS GEO_MAX_RECORDS23,758
 typedef struct _geo_fid_entry_t_geo_fid_entry_t28,884
    fid_t fid;fid30,920
    uint64_t off_start;off_start31,935
    uint64_t off_end;off_end32,959
    cid_t cid;  /**< cluster id 0 for non regular files */cid33,981
    sid_t sids[ROZOFS_SAFE_MAX];    /**< sid of storage nodes target (regular file only)*/sids34,1040
    uint8_t layout;layout35,1131
} geo_fid_entry_t;geo_fid_entry_t36,1151

../../rozofs/common/htable.c,566
typedef struct hash_entry {hash_entry26,755
    void *key;key27,783
    void *value;value28,798
    list_t list;list29,815
} hash_entry_t;hash_entry_t30,832
inline void htable_initialize(htable_t * h, uint32_t size, uint32_t(*hash) (void *),htable_initialize32,849
inline void htable_release(htable_t * h) {htable_release45,1216
inline void htable_put(htable_t * h, void *key, void *value) {htable_put66,1668
inline void *htable_get(htable_t * h, void *key) {htable_get90,2269
inline void *htable_del(htable_t * h, void *key) {htable_del104,2642

../../rozofs/common/htable.h,250
#define _HTABLE_HTABLE20,673
typedef struct htable {htable26,730
    uint32_t(*hash) (void *);hash27,754
    int (*cmp) (void *, void *);cmp28,784
    uint32_t size;size29,817
    list_t *buckets;buckets30,836
} htable_t;htable_t31,857

../../rozofs/common/list.h,1132
#define _LIST_H_LIST_H20,674
typedef struct list {list25,732
    struct list *next, *prev;next26,754
    struct list *next, *prev;prev26,754
} list_t;list_t27,784
static inline void list_init(list_t * list) {list_init29,795
static inline void list_insert(list_t * new, list_t * prev, list_t * next) {list_insert34,890
static inline void list_push_front(list_t * head, list_t * new) {list_push_front41,1058
static inline void list_push_back(list_t * head, list_t * new) {list_push_back45,1167
static inline void list_remove(list_t * list) {list_remove49,1275
static inline int list_empty(list_t * head) {list_empty56,1460
static inline int list_size(list_t * head) {list_size60,1540
static inline void list_sort(list_t * head,list_sort68,1750
#define list_entry(list_entry147,3762
#define list_first_entry(list_first_entry150,3868
#define list_for_each_forward(list_for_each_forward153,3961
#define list_for_each_backward(list_for_each_backward156,4063
#define list_for_each_forward_safe(list_for_each_forward_safe159,4166
#define list_for_each_backward_safe(list_for_each_backward_safe163,4307

../../rozofs/common/log.h,659
#define	_LOG_H_LOG_H20,673
#define EDEBUG EDEBUG25,730
#define EINFO EINFO26,752
#define EWARNING EWARNING27,774
#define ESEVERE ESEVERE28,796
#define EFATAL EFATAL29,818
static const char *messages[] __attribute__ ((unused)) =messages32,857
static const char *messages[] =messages35,977
static const int priorities[] = {priorities39,1072
#define logmsg(logmsg43,1164
#define info(info48,1333
#define warning(warning49,1390
#define severe(severe50,1453
#define fatal(fatal51,1514
#define DEBUG(DEBUG54,1601
#define DEBUG(DEBUG56,1666
#define DEBUG_FUNCTION DEBUG_FUNCTION61,1722
#define DEBUG_FUNCTIONDEBUG_FUNCTION63,1777

../../rozofs/common/mattr.c,122
void mattr_initialize(mattr_t *mattr) {mattr_initialize24,708
void mattr_release(mattr_t *mattr) {mattr_release32,893

../../rozofs/common/mattr.h,1732
#define _MATTR_H_MATTR_H20,663
typedef struct mattr {mattr32,917
    fid_t fid;                      /**< unique file id */fid33,940
    cid_t cid;                      /**< cluster id 0 for non regular files */cid34,999
    sid_t sids[ROZOFS_SAFE_MAX];    /**< sid of storage nodes target (regular file only)*/sids35,1078
    uint32_t mode;                  /**< see stat(2) */mode36,1169
    uint32_t uid;                   /**< see stat(2) */uid37,1225
    uint32_t gid;                   /**< see stat(2) */gid38,1281
    uint16_t nlink;                 /**< see stat(2) */nlink39,1337
    uint64_t ctime;                 /**< see stat(2) */ctime40,1393
    uint64_t atime;                 /**< see stat(2) */atime41,1449
    uint64_t mtime;                 /**< see stat(2) */mtime42,1505
    uint64_t size;                  /**< see stat(2) */size43,1561
    uint32_t children;              /**< number of children (excluding . and ..) */children44,1617
} mattr_t;mattr_t45,1701
#define ROZOFS_OBJ_NAME_MAX ROZOFS_OBJ_NAME_MAX50,1753
   char inode_buf[512];inode_buf53,1800
     mattr_t attrs;  /**< standard attributes       */attrs55,1836
     fid_t   pfid;   /**< parent fid                */pfid56,1891
     uint32_t i_extra_isize;  /**< array reserved for extended attributes */i_extra_isize57,1946
     uint32_t i_state;     /**< inode state               */i_state58,2023
     uint64_t i_file_acl;  /**< extended inode */i_file_acl59,2084
     uint64_t i_link_name;  /**< symlink block */i_link_name60,2134
     char    name[ROZOFS_OBJ_NAME_MAX]; name61,2184
   } s;s62,2225
} ext_mattr_t;ext_mattr_t63,2233
#define ROZOFS_I_EXTRA_ISIZE ROZOFS_I_EXTRA_ISIZE65,2249

../../rozofs/common/profile.h,570
#define _PROFILE_H_PROFILE_H20,665
#define MICROLONG(MICROLONG29,811
#define DECLARE_PROFILING(DECLARE_PROFILING32,902
#define DEFINE_PROFILING(DEFINE_PROFILING33,964
#define P_COUNT P_COUNT36,1035
#define P_ELAPSE P_ELAPSE37,1057
#define P_BYTES P_BYTES38,1079
#define START_PROFILING(START_PROFILING42,1133
#define START_PROFILING_IO(START_PROFILING_IO53,1385
#define STOP_PROFILING(STOP_PROFILING65,1699
#define STOP_PROFILING_IO(STOP_PROFILING_IO74,1915
#define SET_PROBE_VALUE(SET_PROBE_VALUE84,2191
#define CLEAR_PROBE(CLEAR_PROBE91,2321

../../rozofs/common/rozofs_site.c,58
int rozofs_get_local_site()rozofs_get_local_site41,1137

../../rozofs/common/rozofs_site.h,45
#define _ROZOFS_SITE_H_ROZOFS_SITE_H19,680

../../rozofs/common/transform.c,435
void transform_forward(const bin_t * support, int rows, int cols, int np,transform_forward29,799
static int compare_slope(const void *e1, const void *e2) {compare_slope77,2273
static inline int max(int a, int b) {max85,2586
void transform_inverse(pxl_t * support, int rows, int cols, int np,transform_inverse89,2653
void transform_forward_one_proj(const bin_t * support, int rows, int cols,transform_forward_one_proj233,8297

../../rozofs/common/transform.h,706
#define	_TRANSFORM_H_TRANSFORM_H20,678
typedef uint64_t bin_t;         // binbin_t25,741
typedef uint64_t pxl_t;         // pixelpxl_t26,780
typedef struct angle {angle28,822
    int p;p29,845
    int q;q30,856
} angle_t;angle_t31,867
typedef struct projection {projection33,879
    angle_t angle;angle34,907
    int size;size35,926
    bin_t *bins;bins36,940
} projection_t;projection_t37,957
static inline int compare_slope_inline(const void *e1, const void *e2) {compare_slope_inline46,1350
static inline int max_inline(int a, int b) {max_inline54,1677
static inline void transform_inverse_inline(pxl_t * support, int rows, int cols, int np,transform_inverse_inline57,1750

../../rozofs/common/types.h,139
#define _TYPES_H_TYPES_H20,663
#undef  FALSEFALSE21,680
#define FALSE FALSE22,694
#undef  TRUETRUE23,712
#define TRUE TRUE24,725

../../rozofs/common/xmalloc.c,543
typedef struct _xmalloc_stats_t_xmalloc_stats_t29,800
   uint64_t  count;count31,834
   int       size;size32,854
} xmalloc_stats_t;xmalloc_stats_t33,873
#define XMALLOC_MAX_SIZE XMALLOC_MAX_SIZE35,893
xmalloc_stats_t *xmalloc_size_table_p = NULL;xmalloc_size_table_p38,925
void xmalloc_stats_insert(int n)xmalloc_stats_insert40,972
void *xmalloc(size_t n) {xmalloc63,1340
void *xcalloc(size_t n, size_t s) {xcalloc76,1686
void *xrealloc(void *p, size_t n) {xrealloc84,1800
char *xstrdup(const char *str) {xstrdup90,1897

../../rozofs/common/xmalloc.h,79
#define _XMALLOC_H_XMALLOC_H20,676
#define check_memory(check_memory26,735

../../rozofs/core/af_inet_stream_api.h,58
 #define AF_INET_STREAM_API_HAF_INET_STREAM_API_H20,688

../../rozofs/core/af_inet_tcp.c,680
uint32_t af_inet_tcp_tuneTcpSocket(int socketId,int size)af_inet_tcp_tuneTcpSocket57,1487
int af_inet_sock_stream_client_create_internal(af_unix_ctx_generic_t *sock_p,int size)af_inet_sock_stream_client_create_internal170,3934
int af_inet_sock_stream_listen_create_internal(uint32_t ipAddr,uint16_t tcpPort)af_inet_sock_stream_listen_create_internal340,7894
int af_inet_sock_listening_create(char *nickname,af_inet_sock_listening_create435,10660
int af_inet_sock_client_create(char *nickname,af_inet_sock_client_create607,15413
int af_inet_sock_client_modify_destination_port(int sockRef, uint16_t remote_port_host)af_inet_sock_client_modify_destination_port824,22075

../../rozofs/core/af_unix_ctx_mgt.c,3164
af_unix_ctx_generic_t *af_unix_context_freeListHead; /**< head of list of the free context  */af_unix_context_freeListHead34,976
af_unix_ctx_generic_t af_unix_context_activeListHead; /**< list of the active context     */af_unix_context_activeListHead35,1071
void *af_unix_buffer_pool_tb[2]; /**< xmit and receive buffer pool */af_unix_buffer_pool_tb37,1165
int af_unix_xmit_buf_count = 0;af_unix_xmit_buf_count42,1267
int af_unix_xmit_buf_size = 0;af_unix_xmit_buf_size43,1299
int af_unix_recv_buf_count = 0;af_unix_recv_buf_count44,1330
int af_unix_recv_buf_size = 0;af_unix_recv_buf_size45,1362
uint32_t af_unix_context_count; /**< Max number of contexts    */af_unix_context_count47,1394
uint32_t af_unix_context_allocated; /**< current number of allocated context        */af_unix_context_allocated48,1460
af_unix_ctx_generic_t *af_unix_context_pfirst; /**< pointer to the first context of the pool */af_unix_context_pfirst49,1547
#define MICROLONG(MICROLONG52,1645
#define af_unix_DEBUG_TOPIC af_unix_DEBUG_TOPIC53,1728
int af_unix_check_empty_stats(rozofs_socket_stats_t *stats_p) {af_unix_check_empty_stats66,2003
char *af_inet_get_tcp_state(int state) {af_inet_get_tcp_state87,3492
typedef struct my_tcp_info_t {my_tcp_info_t111,4258
  struct tcp_info tcp_info;tcp_info112,4289
  uint32_t 	  tcpi_rcv_rtt;tcpi_rcv_rtt113,4317
  uint32_t 	  tcpi_rcv_space;  tcpi_rcv_space114,4345
  uint32_t        tcpi_total_retrans;tcpi_total_retrans115,4377
} MY_TCP_INFO_T;MY_TCP_INFO_T116,4415
static MY_TCP_INFO_T tcp_info_buffer;tcp_info_buffer117,4432
MY_TCP_INFO_T * af_inet_tcp_get_tcp_info(int socket) {af_inet_tcp_get_tcp_info119,4476
void af_inet_tcp_debug_show(uint32_t tcpRef, void *bufRef) {af_inet_tcp_debug_show141,5044
char * af_unix_debug_getsockopt(int fd,char *pChar)af_unix_debug_getsockopt187,7263
void af_unix_info_getsockopt(int fd,char *file,int line)af_unix_info_getsockopt203,7682
void af_unix_debug_show(uint32_t tcpRef, void *bufRef) {af_unix_debug_show219,8101
void af_unix_debug(char * argv[], uint32_t tcpRef, void *bufRef) {af_unix_debug322,14827
void af_inet_tcp_debug(char * argv[], uint32_t tcpRef, void *bufRef) {af_inet_tcp_debug326,14937
void af_unix_debug_init() {af_unix_debug_init337,15350
af_unix_ctx_generic_t *af_unix_getObjCtx_p(uint32_t af_unix_ctx_id) {af_unix_getObjCtx_p366,15828
uint32_t af_unix_getObjCtx_ref(af_unix_ctx_generic_t *p) {af_unix_getObjCtx_ref401,16797
void af_unix_init() {af_unix_init433,17461
void af_unix_ctxInit(af_unix_ctx_generic_t *p, uint8_t creation) {af_unix_ctxInit452,17809
af_unix_ctx_generic_t *af_unix_alloc() {af_unix_alloc565,22115
uint32_t af_unix_createIndex(uint32_t af_unix_ctx_id) {af_unix_createIndex614,23432
uint32_t af_unix_free_from_idx(uint32_t af_unix_ctx_id) {af_unix_free_from_idx669,24692
uint32_t af_unix_free_from_ptr(af_unix_ctx_generic_t *p) {af_unix_free_from_ptr727,26017
void *af_unix_alloc_xmit_buf() {af_unix_alloc_xmit_buf749,26502
void *af_unix_alloc_recv_buf() {af_unix_alloc_recv_buf766,26819
uint32_t af_unix_module_init(uint32_t af_unix_ctx_count,af_unix_module_init790,27403

../../rozofs/core/af_unix_socket_client_generic.c,2015
ruc_sockCallBack_t af_unix_generic_client_callBack_sock=af_unix_generic_client_callBack_sock54,1839
uint32_t af_unix_generic_cli_rcvReadysock(void * socket_ctx_p,int socketId)af_unix_generic_cli_rcvReadysock90,2762
uint32_t af_unix_generic_cli_fake_Cbk(void * socket_ctx_p,int socketId)af_unix_generic_cli_fake_Cbk114,3360
uint32_t af_unix_generic_cli_xmitReadysock(void * socket_ctx_p,int socketId)af_unix_generic_cli_xmitReadysock141,4007
uint32_t af_unix_generic_cli_connectReply_CBK(void * socket_ctx_p,int socketId)af_unix_generic_cli_connectReply_CBK168,4614
static  int af_inet_cnx_check_expiration (af_unix_ctx_generic_t  *sock_p)af_inet_cnx_check_expiration299,8179
ruc_sockCallBack_t af_unix_generic_client_connected_callBack_sock=af_unix_generic_client_connected_callBack_sock377,10052
uint32_t af_unix_generic_cli_connected_rcvReady_cbk(void * socket_ctx_p,int socketId)af_unix_generic_cli_connected_rcvReady_cbk404,10788
uint32_t af_unix_generic_cli_connected_recv_cbk(void * socket_ctx_p,int socketId)af_unix_generic_cli_connected_recv_cbk456,12106
uint32_t af_unix_generic_cli_connected_xmitReady_cbk(void * socket_ctx_p,int socketId)af_unix_generic_cli_connected_xmitReady_cbk496,13122
uint32_t af_unix_generic_cli_connected_xmitEvt_cbk(void * socket_ctx_p,int socketId)af_unix_generic_cli_connected_xmitEvt_cbk535,14088
void af_unix_sock_stream_disconnect_internal(af_unix_ctx_generic_t *socket_p)af_unix_sock_stream_disconnect_internal575,15127
int af_unix_sock_stream_client_create_internal(char *nameOfSocket,int size)af_unix_sock_stream_client_create_internal713,19259
int af_unix_sock_client_reconnect(uint32_t af_unix_ctx_id)af_unix_sock_client_reconnect820,21898
int af_unix_sock_client_create(char *nickname,char *remote_sun_path,af_unix_socket_conf_t *conf_p)af_unix_sock_client_create983,26511
int af_unix_socket_client_family_create (char *nicknamebase_p, char *basename_p, int base_instance,int nb_instances,af_unix_socket_client_family_create1194,32988

../../rozofs/core/af_unix_socket_generic_api.h,73
#define AF_UNIX_SOCKET_GENERIC_API_HAF_UNIX_SOCKET_GENERIC_API_H21,696

../../rozofs/core/af_unix_socket_generic.c,1376
ruc_sockCallBack_t af_unix_generic_callBack_sock=af_unix_generic_callBack_sock39,1061
uint32_t af_unix_generic_rcvReadysock(void * socket_ctx_p,int socketId)af_unix_generic_rcvReadysock66,1726
uint32_t af_unix_generic_rcvMsgsock(void * socket_ctx_p,int socketId)af_unix_generic_rcvMsgsock107,2752
uint32_t af_unix_generic_xmitReadysock(void * socket_ctx_p,int socketId)af_unix_generic_xmitReadysock132,3412
void test_poll(int socket)test_poll158,3899
uint32_t af_unix_generic_xmitEvtsock(void * socket_ctx_p,int socketId)af_unix_generic_xmitEvtsock220,5164
int af_unix_sock_set_non_blocking(int fd,int size)af_unix_sock_set_non_blocking280,6708
int af_unix_sock_create_internal(char *nameOfSocket,int size)af_unix_sock_create_internal373,8780
int af_unix_sock_create(char *src_sun_path,af_unix_socket_conf_t *conf_p)af_unix_sock_create484,11590
 int af_unix_delete_socket(uint32_t socket_ctx_id)af_unix_delete_socket623,15587
 int af_unix_disconnect_from_socketCtrl(uint32_t socket_ctx_id)af_unix_disconnect_from_socketCtrl706,17693
int af_unix_socket_family_create (char *basename_p, int base_instance,int nb_instances, int *socket_ctx_tb_p,af_unix_socket_conf_t *conf_p)af_unix_socket_family_create747,18822
#define QLEN_FILE QLEN_FILE794,19961
int af_unix_socket_set_datagram_socket_len(int len) {af_unix_socket_set_datagram_socket_len795,20015

../../rozofs/core/af_unix_socket_generic.h,18074
#define AF_UNIX_SOCKET_GENERIC_HAF_UNIX_SOCKET_GENERIC_H21,692
typedef uint32_t (*generic_hdr_getsz_CBK_t)(char *bufRef);generic_hdr_getsz_CBK_t50,1410
typedef void (*generic_recv_CBK_t)(void *userRef,uint32_t socket_context_ref,void *bufRef);generic_recv_CBK_t54,1498
typedef void (*generic_disc_CBK_t)(void *userRef,uint32_t socket_context_ref,void *bufRef,int errnum);generic_disc_CBK_t58,1635
typedef void (*generic_xmit_CBK_t)(uint32_t userRef,void * buffer,uint8_t status);generic_xmit_CBK_t62,1815
typedef void* (*generic_recvBufAll_CBK_t)(void *userRef,uint32_t socket_context_ref,uint32_t len);generic_recvBufAll_CBK_t66,1991
typedef void (*generic_connect_CBK_t)(void *userRef,uint32_t socket_context_ref,int retcode,int errnum);generic_connect_CBK_t74,2262
typedef void (*generic_xmitDone_CBK_t)(void *userRef,uint32_t socket_context_ref,void * buffer);generic_xmitDone_CBK_t82,2632
typedef void (*af_stream_poll_CBK_t)(void *sock_p);af_stream_poll_CBK_t91,2860
typedef void (*af_stream_avail_CBK_t)(uint32_t param);af_stream_avail_CBK_t100,3028
typedef enum _com_stream_recv_service_e_com_stream_recv_service_e106,3128
     ROZOFS_GENERIC_SRV = 0,  /**< generic receiver  */ROZOFS_GENERIC_SRV108,3170
     ROZOFS_RPC_SRV,     /**< RPC stream receiver-> is able to deal with the record concept of rpc */ROZOFS_RPC_SRV109,3226
} com_stream_recv_service_e;com_stream_recv_service_e110,3328
typedef struct _af_unix_socket_conf_t_af_unix_socket_conf_t116,3419
  int           family;        /**< identifier of the socket family    */family118,3459
  int           instance_id;        /**< instance number within the family   */instance_id119,3533
  uint32_t        headerSize;       /* size of the header to read                 */headerSize120,3613
  uint32_t        msgLenOffset;     /* offset where the message length fits       */msgLenOffset121,3698
  uint32_t        msgLenSize;       /* size of the message length field in bytes  */msgLenSize122,3783
  uint32_t        bufSize;         /* length of buffer (xmit and received)        */bufSize123,3868
  uint32_t        so_sendbufsize;  /* length of buffer (xmit and received)        */so_sendbufsize124,3953
  generic_recvBufAll_CBK_t   userRcvAllocBufCallBack;   /* user callback for buffer allocation */userRcvAllocBufCallBack125,4038
  generic_recv_CBK_t         userRcvCallBack;   /* callback provided by the connection owner block */userRcvCallBack126,4136
  generic_disc_CBK_t         userDiscCallBack; /* callBack for TCP disconnection detection         */userDiscCallBack127,4238
  generic_connect_CBK_t      userConnectCallBack; /**< callback for client connection only         */userConnectCallBack128,4340
  generic_xmitDone_CBK_t     userXmitDoneCallBack; /**< optional call that must be set when the application when to be warned when packet has been sent */userXmitDoneCallBack129,4442
  ruc_pf_sock_t              userRcvReadyCallBack; /* NULL for default callback                    */userRcvReadyCallBack130,4597
  ruc_pf_sock_t              userXmitReadyCallBack; /* NULL for default callback                    */userXmitReadyCallBack131,4699
  ruc_pf_sock_t              userXmitEventCallBack; /* NULL for default callback                    */userXmitEventCallBack132,4802
  generic_hdr_getsz_CBK_t    userHdrAnalyzerCallBack; /* NULL by default, function that analyse the received header that returns the payload  length  */userHdrAnalyzerCallBack133,4905
  com_stream_recv_service_e  recv_srv_type;   /**< stream receiver service type: ROZOFS_GENERIC_SRV or ROZOFS_RPC_SRV */recv_srv_type134,5058
  uint32_t                   rpc_recv_max_sz; /**< rpc stream receiver max message size             */rpc_recv_max_sz135,5179
  void          *userRef;           /* user reference that must be recalled in the callbacks */userRef136,5282
  void        *xmitPool; /* user pool reference or -1 */xmitPool137,5378
  void        *recvPool; /* user pool reference or -1 */recvPool138,5435
} af_unix_socket_conf_t;af_unix_socket_conf_t139,5492
typedef enum _com_xmit_state_e_com_xmit_state_e145,5551
     XMIT_IDLE = 0,  /**< socket has not yet been created  */XMIT_IDLE147,5584
     XMIT_READY,     /**< transmitter is ready and the pending xmit is empty */XMIT_READY148,5646
     XMIT_IN_PRG,    /**< transmitter is ready and the pending xmitmight not be empty */XMIT_IN_PRG149,5726
     XMIT_CHECK_XMITQ,   /**< unstable state for check the pending transmit queue */XMIT_CHECK_XMITQ150,5815
     XMIT_CONGESTED,     /**< the transmitter is congested   */XMIT_CONGESTED151,5900
     XMIT_DEAD           /**< the destination is dead        */XMIT_DEAD152,5964
} com_xmit_state_e;com_xmit_state_e153,6028
typedef enum _com_recv_state_e_com_recv_state_e160,6080
     RECV_IDLE = 0,      /**< no reception in progress  */RECV_IDLE162,6113
     RECV_WAIT_HDR,      /**< wait for the full header message */RECV_WAIT_HDR163,6172
     RECV_ALLOC_BUF,     /**< allocate buffer for receiving message: might remain in that state if there is none available */RECV_ALLOC_BUF164,6238
     RECV_PAYLOAD,       /**< message payload reception */RECV_PAYLOAD165,6364
     RECV_DEAD,         /**< receiver is dead because of a fatal error on socket or buffer allocation   */RECV_DEAD166,6423
} com_recv_state_e;com_recv_state_e167,6530
typedef struct rozofs_socket_stats_trozofs_socket_stats_t174,6648
   uint64_t totalUpDownTransition; /**< total number of messages submitted for with EWOULDBLOCK is returned  */totalUpDownTransition176,6687
   uint64_t totalXmitBytes;         /**< total number of bytes that has been sent */totalXmitBytes180,6827
   uint64_t totalXmitAttempts;  /**< total number of messages submitted       */totalXmitAttempts181,6912
   uint64_t totalXmitAttemptsCycles;  /**< total number of messages submitted reset on show      */totalXmitAttemptsCycles182,6993
   uint64_t totalXmitCycles;    /**< number of cpu cycles       */totalXmitCycles183,7093
   uint64_t totalXmitSuccess;   /**< total number of messages submitted with success  */totalXmitSuccess184,7160
   uint64_t totalXmitCongested; /**< total number of messages submitted for with EWOULDBLOCK is returned  */totalXmitCongested185,7249
   uint64_t totalXmitError;     /**< total number of messages submitted with an error  */totalXmitError186,7358
   uint64_t totalRecvBytes;         /**< total number of bytes that has been sent */totalRecvBytes191,7477
   uint64_t totalRecv;  /**< total number of messages submitted       */totalRecv192,7562
   uint64_t totalRecvSuccess;   /**< total number of messages submitted with success  */totalRecvSuccess193,7635
   uint64_t totalRecvBadHeader;     /**< total number of messages submitted with an error  */totalRecvBadHeader194,7724
   uint64_t totalRecvBadLength;     /**< total number of messages submitted with an error  */totalRecvBadLength195,7818
   uint64_t totalRecvOutoFBuf;     /**< total number of messages submitted with an error  */totalRecvOutoFBuf196,7912
   uint64_t totalRecvError;     /**< total number of messages submitted with an error  */totalRecvError197,8005
   uint64_t partialRecv;     /**< total of partial receive  */partialRecv198,8095
   uint64_t emptyRecv;        /**< total of empty receive  */emptyRecv199,8158
} rozofs_socket_stats_t;rozofs_socket_stats_t200,8220
#define AF_UNIX_CONGESTION_DEFAULT_THRESHOLD AF_UNIX_CONGESTION_DEFAULT_THRESHOLD202,8246
#define AF_UNIX_XMIT_CREDIT_DEFAULT AF_UNIX_XMIT_CREDIT_DEFAULT204,8353
#define AF_UNIX_RECV_CREDIT_DEFAULT AF_UNIX_RECV_CREDIT_DEFAULT205,8391
typedef struct _com_xmit_template_t_com_xmit_template_t209,8466
   void         *xmitPoolOrigin;     /**<current pool reference                */xmitPoolOrigin211,8504
   void         *xmitPoolRef;        /**< head of the current xmit buffer pool */xmitPoolRef212,8586
   uint8_t       state;              /**< xmit fsm state                       */state213,8668
   uint8_t       eoc_flag:1;         /**< fin de congestion flag               */eoc_flag215,8751
   uint8_t       congested_flag:1;   /**< congested:1                          */congested_flag216,8833
   uint8_t       xmit_req_flag:1;    /**< assert to 1 when xmit ready is required */xmit_req_flag217,8915
   uint8_t       filler_flag:5;      /**< congested:1                          */filler_flag218,9000
   int           nbWrite;              /**< number of bytes that has been currently written, */nbWrite219,9082
   int           nb2Write;              /**< total number of bytes that must be written     */nb2Write220,9178
   void         *bufRefCurrent;      /**< reference of the current buffer to send or NULL if no buffer  */bufRefCurrent221,9273
   uint16_t      eoc_threshold;      /**< current EOC threshold                */eoc_threshold222,9380
   uint16_t      eoc_threshold_conf;      /**< configured EOC threshold        */eoc_threshold_conf223,9462
   uint16_t      xmit_credit;         /**< current xmit credit                 */xmit_credit224,9544
   uint16_t      xmit_credit_conf;    /**< configured xmit credit              */xmit_credit_conf225,9626
   ruc_obj_desc_t xmitList[UMA_MAX_TCP_XMIT_PRIO]; /* pending xmit list        */xmitList226,9708
} com_xmit_template_t;com_xmit_template_t228,9791
#define    ROZOFS_MAX_HEADER_SIZE ROZOFS_MAX_HEADER_SIZE230,9815
typedef struct _com_rpc_recv_template_t_com_rpc_recv_template_t233,9884
  uint32_t        receiver_active; /**< asserted to 1 when stream receiver is associated with rpc protocol */				receiver_active235,9926
  uint32_t        in_tot_len;       /**< total length of the current message: sum of all records */in_tot_len236,10040
  uint32_t        record_len;       /**< length of the current record                      */record_len237,10140
  uint32_t        last_record;      /**< asserted to 1 when last record is encountered     */last_record238,10234
  uint32_t        in_wr_offset;     /**< write offset in the receive buffer              */in_wr_offset239,10328
  uint32_t        max_receive_sz;   /**< max size of the receive buffer: need when first record has not bit 31 asserted */max_receive_sz240,10420
} com_rpc_recv_template_t;com_rpc_recv_template_t242,10544
typedef struct _com_recv_template_t_com_recv_template_t248,10607
  void         *bufRefCurrent;      /**< reference of the current buffer to send or NULL if no buffer  */bufRefCurrent250,10645
  void          *rcvPoolOrigin;     /**<current pool reference */rcvPoolOrigin251,10751
  void          *rcvPoolRef;        /* it could be either the reference ofrcvPoolRef252,10817
  uint8_t       state;               /**< state of the receiver fsm                    */state256,11065
  uint16_t      recv_credit_conf;    /**< configured receive  credit                   */recv_credit_conf257,11155
  int           nbread;              /**< number of bytes that has been currently read */nbread258,11245
  int           nb2read;              /**< total number of bytes that must be read     */nb2read259,11335
  uint32_t        headerSize;       /**<size of the header to read                  */headerSize263,11466
  uint32_t        msgLenOffset;     /**< offset where the message length fits       */msgLenOffset264,11553
  uint32_t        msgLenSize;       /**< size of the message length field in bytes  */msgLenSize265,11640
  uint32_t        bufSize;         /**< length of buffer (xmit and received)        */bufSize266,11727
  uint8_t       buffer_header[ROZOFS_MAX_HEADER_SIZE]; /**< array used for receiving the header of a message */buffer_header267,11814
  com_rpc_recv_template_t rpc;    /**< just to address the case of the rpc reception with multiple records */rpc271,11967
} com_recv_template_t;com_recv_template_t273,12078
#define ROZOFS_SOCK_EXTNAME_SIZE ROZOFS_SOCK_EXTNAME_SIZE275,12102
#define AF_UNIX_SOCKET_NAME_SIZE AF_UNIX_SOCKET_NAME_SIZE276,12138
#define AF_UNIX_CNX_AVAILABLE AF_UNIX_CNX_AVAILABLE278,12175
#define AF_UNIX_CNX_UNAVAILABLE AF_UNIX_CNX_UNAVAILABLE279,12208
   uint64_t u64;u64285,12330
   uint64_t check_cnx_enabled:1 ; /**< assert to one if enabled */check_cnx_enabled287,12359
   uint64_t check_cnx_rq:1 ;      /**< assert to one when there is a buffer submitted */check_cnx_rq288,12426
   uint64_t timestamp:62 ;        /**< expiration date */timestamp289,12515
   } s;s290,12573
} af_inet_check_cnx_t;af_inet_check_cnx_t291,12581
typedef struct _af_unix_ctx_generic_t_af_unix_ctx_generic_t295,12637
  ruc_obj_desc_t    link;          /**< To be able to chain the MS context on any list */link297,12677
  uint32_t            index;         /**<Index of the MS */index298,12767
  uint32_t            free;          /**< Is the context free or allocated TRUE/FALSE */free299,12827
  int           family;        /**< identifier of the socket family    */family303,12945
  int           instance_id;        /**< instance number within the family   */instance_id304,13019
  char          nickname[ROZOFS_SOCK_EXTNAME_SIZE]; /**< name of the socket for socket controller display name */nickname305,13099
  int           af_family;        /**< either AF_INET or AF_UNIX   */af_family309,13246
  char          src_sun_path[AF_UNIX_SOCKET_NAME_SIZE]; /**< basename+instance id  */src_sun_path313,13344
  char          remote_sun_path[AF_UNIX_SOCKET_NAME_SIZE]; /**< basename+instance id  */remote_sun_path314,13430
  uint32_t      src_ipaddr_host;    /**< IP address in host format */src_ipaddr_host318,13547
  uint32_t      src_port_host;      /**< source port in host format */src_port_host319,13617
  uint32_t      remote_ipaddr_host;    /**< remote IP address in host format */remote_ipaddr_host320,13688
  uint32_t      remote_port_host;      /**< remote port in host format */remote_port_host321,13768
  int           socketRef;socketRef323,13843
  uint32_t        so_sendbufsize;  /* length of buffer (xmit and received): extracted from conf_p        */so_sendbufsize324,13870
  void         *connectionId;   /* reference of the socket controller */connectionId325,13978
  generic_recv_CBK_t         userRcvCallBack;   /* callback provided by the connection owner block */userRcvCallBack326,14051
  generic_recvBufAll_CBK_t   userRcvAllocBufCallBack;   /**< user callback for buffer allocation     */userRcvAllocBufCallBack327,14153
  generic_disc_CBK_t         userDiscCallBack; /**< callBack for TCP disconnection detection         */userDiscCallBack328,14257
  ruc_pf_sock_t              userRcvReadyCallBack; /**< callBack for receiver ready                  */userRcvReadyCallBack329,14361
  ruc_pf_sock_t              userXmitReadyCallBack; /**< default or application                      */userXmitReadyCallBack330,14465
  ruc_pf_sock_t              userXmitEventCallBack; /**< default or application                      */userXmitEventCallBack331,14569
  generic_connect_CBK_t      userConnectCallBack; /**< callback for client connection only         */userConnectCallBack332,14673
  generic_xmitDone_CBK_t     userXmitDoneCallBack; /**< optional call that must be set when the application when to be warned when packet has been sent */userXmitDoneCallBack333,14775
  generic_hdr_getsz_CBK_t    userHdrAnalyzerCallBack; /* NULL by default, function that analyse the received header that returns the payload  length  */userHdrAnalyzerCallBack334,14930
  af_stream_poll_CBK_t       userPollingCallBack;    /**< call that permits polling at application level */userPollingCallBack335,15083
  af_stream_avail_CBK_t      userAvailabilityCallBack;userAvailabilityCallBack336,15191
  uint32_t                   availability_param;availability_param337,15246
  void          *userRef;           /**< user reference that must be recalled in the callbacks */userRef338,15295
  af_unix_socket_conf_t *conf_p;  /**< for listening socket only */conf_p339,15393
  com_xmit_template_t   xmit;xmit340,15461
  com_recv_template_t   recv;recv341,15491
  rozofs_socket_stats_t stats;stats342,15521
  af_inet_check_cnx_t   cnx_supevision; /**< supervision context */cnx_supevision343,15552
  uint8_t               cnx_availability_state;  /**< operational state of the connection */cnx_availability_state344,15620
} af_unix_ctx_generic_t;af_unix_ctx_generic_t347,15717
 static inline void com_xmit_pendingQueue_insert(com_xmit_template_t *this,com_xmit_pendingQueue_insert366,16408
 static inline void com_xmit_pendingQueue_buffer_insert(com_xmit_template_t *this,void *buf_p,uint8_t prio)com_xmit_pendingQueue_buffer_insert385,17004
 static inline void com_xmit_pendingQueue_bufferReq_insert(com_xmit_template_t *this,void *buf_p,uint8_t prio)com_xmit_pendingQueue_bufferReq_insert402,17603
static inline void * com_xmit_pendingQueue_get(com_xmit_template_t *this,uint8_t prio)com_xmit_pendingQueue_get422,18159
static inline void com_xmit_pendingQueue_purge(af_unix_ctx_generic_t *socket_p,uint8_t prio)com_xmit_pendingQueue_purge490,19861
static inline uint32_t com_sock_extract_length_from_header_host_format(char *pbuf,uint32_t offset,uint32_t fieldLen)com_sock_extract_length_from_header_host_format769,27931
static inline void af_inet_cnx_ok (af_unix_ctx_generic_t *sock_p)af_inet_cnx_ok829,29715
static inline void af_inet_set_cnx_tmo (af_unix_ctx_generic_t  *sock_p, int tmo)af_inet_set_cnx_tmo855,30439
static inline void af_inet_enable_cnx_supervision(af_unix_ctx_generic_t  *sock_p)af_inet_enable_cnx_supervision876,30986
static inline void af_inet_attach_application_supervision_callback(af_unix_ctx_generic_t  *sock_p,af_stream_poll_CBK_t supervision_callback)af_inet_attach_application_supervision_callback893,31412
static inline void af_inet_attach_application_availability_callback(af_unix_ctx_generic_t  *sock_p,af_stream_avail_CBK_t available_callback,uint32_t param)af_inet_attach_application_availability_callback914,32035

../../rozofs/core/af_unix_socket_recv.c,103
uint32_t af_unix_recv_generic_cbk(void * socket_pointer,int socketId)af_unix_recv_generic_cbk43,1205

../../rozofs/core/af_unix_socket_send.c,379
uint32_t af_unix_send_generic(int fd,af_unix_send_generic56,1472
void af_unix_send_fsm(af_unix_ctx_generic_t *socket_p,com_xmit_template_t *xmit_p)af_unix_send_fsm132,2983
int af_unix_generic_send(af_unix_ctx_generic_t *this,void *buf_p)af_unix_generic_send409,10697
int af_unix_generic_send_with_idx(int  socket_ctx_id,void *buf_p)af_unix_generic_send_with_idx470,12189

../../rozofs/core/af_unix_socket_server_generic.c,1812
ruc_sockCallBack_t af_unix_generic_listening_callBack_sock=af_unix_generic_listening_callBack_sock68,2201
uint32_t af_unix_generic_srv_rcvReadysock(void * socket_ctx_p,int socketId)af_unix_generic_srv_rcvReadysock94,2823
uint32_t af_unix_generic_srv_acceptIn_Cbk(void * socket_ctx_p,int socketId)af_unix_generic_srv_acceptIn_Cbk118,3388
uint32_t af_unix_generic_srv_xmitReadysock(void * socket_ctx_p,int socketId)af_unix_generic_srv_xmitReadysock165,4572
uint32_t af_unix_generic_srv_xmitEvtsock(void * socket_ctx_p,int socketId)af_unix_generic_srv_xmitEvtsock192,5185
ruc_sockCallBack_t af_unix_generic_server_accepted_callBack_sock=af_unix_generic_server_accepted_callBack_sock209,5546
uint32_t af_unix_generic_srv_connected_rcvReady_cbk(void * socket_ctx_p,int socketId)af_unix_generic_srv_connected_rcvReady_cbk236,6281
uint32_t af_unix_generic_srv_connected_recv_cbk(void * socket_ctx_p,int socketId)af_unix_generic_srv_connected_recv_cbk277,7321
uint32_t af_unix_generic_srv_connected_xmitReady_cbk(void * socket_ctx_p,int socketId)af_unix_generic_srv_connected_xmitReady_cbk313,8254
uint32_t af_unix_generic_srv_connected_xmitEvt_cbk(void * socket_ctx_p,int socketId)af_unix_generic_srv_connected_xmitEvt_cbk352,9220
int af_unix_sock_stream_create_internal(char *nameOfSocket,int size)af_unix_sock_stream_create_internal414,10759
int af_unix_sock_accept_create(int socketRef,int af_family, char *nickname,af_unix_socket_conf_t *conf_p)af_unix_sock_accept_create525,13308
int af_unix_sock_listening_create(char *nickname,char *remote_sun_path,af_unix_socket_conf_t *conf_p)af_unix_sock_listening_create718,19213
int af_unix_socket_listening_family_create (char *nicknamebase_p,char *basename_p, int base_instance,int nb_instances,af_unix_socket_listening_family_create870,22983

../../rozofs/core/af_unix_socket_stream_recv.c,398
uint32_t af_unix_recv_stream_sock_recv(af_unix_ctx_generic_t  *sock_p, void *buf,int len, int flags,int *len_read)af_unix_recv_stream_sock_recv50,1664
uint32_t af_unix_recv_stream_generic_cbk(void * socket_pointer,int socketId)af_unix_recv_stream_generic_cbk129,3487
uint32_t af_unix_recv_rpc_stream_generic_cbk(void * socket_pointer,int socketId)af_unix_recv_rpc_stream_generic_cbk404,12779

../../rozofs/core/af_unix_socket_stream_send.c,471
uint32_t af_unix_send_stream_generic(int fd,char *pMsg,int lgth,int *len_sent_p)af_unix_send_stream_generic57,1536
void af_unix_send_stream_fsm(af_unix_ctx_generic_t *socket_p,com_xmit_template_t *xmit_p)af_unix_send_stream_fsm117,2623
int af_unix_generic_stream_send(af_unix_ctx_generic_t *this,void *buf_p)af_unix_generic_stream_send409,11705
int af_unix_generic_send_stream_with_idx(int  socket_ctx_id,void *buf_p)af_unix_generic_send_stream_with_idx478,13603

../../rozofs/core/af_unix_test.h,1937
#define AF_UNIX_TEST_HAF_UNIX_TEST_H20,681
#define ROZOFS_TEST_SND_REQ ROZOFS_TEST_SND_REQ44,1102
#define ROZOFS_TEST_SND_CNF ROZOFS_TEST_SND_CNF45,1133
typedef struct _af_unix_test_hdr_t_af_unix_test_hdr_t47,1165
  uint32_t opcode;opcode49,1202
  uint32_t msg_len;msg_len50,1221
  uint32_t  transaction_id;transaction_id51,1241
  void     *bufref_origin;bufref_origin52,1269
  void     *socket_ref;     /**< reference of the socket on which the request has been received -> used by server */socket_ref53,1296
} af_unix_test_hdr_t;af_unix_test_hdr_t54,1413
typedef struct _af_unix_wqe_payload_t_af_unix_wqe_payload_t59,1490
  void     *buf_req_ref;   /**< reference of the ruc_buffer containing the request  */buf_req_ref61,1530
  void     *buf_rsp_ref;   /**< reference of the ruc_buffer containing the response */buf_rsp_ref62,1617
} af_unix_wqe_payload_t;af_unix_wqe_payload_t63,1704
#define TEST_DISK_READ TEST_DISK_READ66,1731
#define TEST_DISK_WRITE TEST_DISK_WRITE67,1757
#define DISK_READ_WRITE_MAX_SIZE DISK_READ_WRITE_MAX_SIZE69,1784
#define DISK_MAX_BUFFER DISK_MAX_BUFFER70,1830
typedef struct _test_disk_req_t_test_disk_req_t72,1869
    char     pathname[1024];  /**< patbname and file name  */pathname74,1903
    int      fd;          /**< file descriptor if known or -1 if unknown  */fd75,1965
    int      count;       /**< number of bytes to read                 */count76,2042
    off_t    offset;      /**< offset within the file                  */offset77,2116
} test_disk_req_t;test_disk_req_t79,2191
typedef struct _test_disk_rsp_t_test_disk_rsp_t83,2213
    size_t      count;       /**< number of bytes read                */count85,2247
    int         status;      /**< 0 -> OK , -1 error                  */status86,2320
    int         errno_val;      /**< errno value                      */errno_val87,2393
} test_disk_rsp_t;test_disk_rsp_t89,2467

../../rozofs/core/com_cache.c,1113
#define _XOPEN_SOURCE _XOPEN_SOURCE19,646
static inline int check_bytes_val(uint8_t *p, int first_chunk, int last_chunk,check_bytes_val59,1802
static inline void com_clear_chunk_bit(int start_chunk, uint8_t *p) {com_clear_chunk_bit163,4746
static inline void com_set_chunk_bit(int start_chunk, uint8_t *p) {com_set_chunk_bit179,5114
static inline uint32_t com_cache_bucket_hash_fnv(uint32_t h, void *key1, uint16_t *key2) {com_cache_bucket_hash_fnv195,5533
com_cache_main_t *com_cache_create(uint32_t level0_sz, uint32_t max,com_cache_usr_fct_t  *usr_fct) com_cache_create234,6444
int com_cache_bucket_insert_entry(com_cache_main_t *cache, com_cache_entry_t *entry) {com_cache_bucket_insert_entry294,8420
void *com_cache_bucket_search_entry(com_cache_main_t *cache, void *key_p) {com_cache_bucket_search_entry457,14062
int com_cache_bucket_remove_entry(com_cache_main_t *cache, void *key_p) {com_cache_bucket_remove_entry606,19213
void com_cache_dirty_bucket_update(com_cache_main_t *cache,uint32_t bucket_first_idx,uint32_t nb_entries,uint8_t *bitmap_p)com_cache_dirty_bucket_update757,24223

../../rozofs/core/com_cache.h,5955
#define COM_CACHE_HCOM_CACHE_H19,665
#define COM_BUCKET_DEPTH_IN_BIT COM_BUCKET_DEPTH_IN_BIT70,2231
#define COM_BUCKET_MAX_ROOT_DIRENT COM_BUCKET_MAX_ROOT_DIRENT72,2269
#define COM_BUCKET_MAX_COLLISIONS COM_BUCKET_MAX_COLLISIONS75,2355
#define COM_BUCKET_MAX_COLLISIONS_BYTES COM_BUCKET_MAX_COLLISIONS_BYTES76,2459
#define COM_BUCKET_NB_ENTRY_PER_ARRAY COM_BUCKET_NB_ENTRY_PER_ARRAY77,2595
#define COM_BUCKET_ENTRY_MAX_ARRAY COM_BUCKET_ENTRY_MAX_ARRAY78,2707
typedef struct _com_cache_lru_t_com_cache_lru_t82,2899
    list_t global_lru_link; /**< linked list of the main cache entries                   */global_lru_link84,2933
    list_t bucket_lru_link; /**< linked list of the collision entries within a bucket     */bucket_lru_link85,3025
    void   *usr_entry_p;  /**< pointer to the user entry context                    */usr_entry_p86,3118
    void   *usr_key_p;    /**< pointer to the user key context                      */usr_key_p87,3205
    uint64_t dirty_main_counter;dirty_main_counter88,3292
    uint64_t dirty_bucket_counter;dirty_bucket_counter89,3325
} com_cache_entry_t;com_cache_entry_t90,3360
typedef uint32_t (*com_cache_usr_exact_match_fct)(void *in_cache_entry,void *usr_key);com_cache_usr_exact_match_fct101,3621
typedef uint32_t (*com_cache_usr_hash_fct)(void *usr_key);com_cache_usr_hash_fct110,3867
typedef void (*com_cache_usr_delete_fct)(void *in_cache_entry);com_cache_usr_delete_fct119,4053
typedef struct _com_cache_usr_fct_t_com_cache_usr_fct_t124,4151
   com_cache_usr_exact_match_fct  usr_exact_match_fct;  /**< callback for exact match            */usr_exact_match_fct126,4189
   com_cache_usr_hash_fct         usr_hash_fct;         /**< callback for hash value computation */usr_hash_fct127,4289
   com_cache_usr_delete_fct       usr_delete_fct;       /**< callback for user context deletion  */usr_delete_fct128,4389
} com_cache_usr_fct_t;com_cache_usr_fct_t129,4489
typedef struct _com_cache_bucket_entry_t {_com_cache_bucket_entry_t132,4514
    uint16_t hash_value_table[COM_BUCKET_NB_ENTRY_PER_ARRAY]; /**< table of the hash value applied to the parent_fid and index */hash_value_table133,4557
    void *entry_ptr_table[COM_BUCKET_NB_ENTRY_PER_ARRAY]; /**< table of the dirent cache entries: used for doing the exact match */entry_ptr_table134,4687
} com_cache_bucket_entry_t;com_cache_bucket_entry_t135,4819
typedef struct _com_cache_bucket_t {_com_cache_bucket_t140,4883
    list_t bucket_lru_link; /**< link list for bucket LRU  */bucket_lru_link141,4920
    uint64_t  dirty_bucket_counter;  /**< used as a dirty bit: that counter is incremented each time the dirty bit of the entry is asserted */dirty_bucket_counter142,4982
    uint8_t bucket_free_bitmap[COM_BUCKET_MAX_COLLISIONS_BYTES]; /**< bitmap of the free entries  */bucket_free_bitmap143,5125
    com_cache_bucket_entry_t * entry_tb[COM_BUCKET_ENTRY_MAX_ARRAY]; /**< pointer to the memory array that contains the entries */entry_tb144,5226
} com_cache_bucket_t;com_cache_bucket_t145,5357
typedef struct _com_cache_stats_t_com_cache_stats_t150,5406
 uint64_t com_bucket_cache_hit_counter ;com_bucket_cache_hit_counter152,5442
 uint64_t com_bucket_cache_miss_counter ;com_bucket_cache_miss_counter153,5483
 uint64_t com_bucket_cache_collision_counter ;com_bucket_cache_collision_counter154,5525
 uint64_t com_bucket_cache_lru_counter_global ;com_bucket_cache_lru_counter_global155,5572
 uint64_t com_bucket_cache_lru_counter_coll ;com_bucket_cache_lru_counter_coll156,5620
 uint64_t com_bucket_cache_lru_global_error ;com_bucket_cache_lru_global_error157,5666
 uint64_t com_bucket_cache_lru_coll_error ;com_bucket_cache_lru_coll_error158,5712
 uint64_t com_bucket_cache_collision_level0_counter ;com_bucket_cache_collision_level0_counter159,5756
 uint64_t com_bucket_cache_max_level0_collisions ; /**< max number of collision at level 0  */com_bucket_cache_max_level0_collisions160,5810
 uint64_t com_bucket_cache_max_level1_collisions ; /**< max number of collision at level 1  */com_bucket_cache_max_level1_collisions161,5905
 uint64_t com_bucket_cache_dirty_counter;com_bucket_cache_dirty_counter162,6000
 uint64_t com_bucket_cache_dirty_bucket_update;com_bucket_cache_dirty_bucket_update163,6042
} com_cache_stats_t;com_cache_stats_t164,6090
typedef struct _com_cache_main_t {_com_cache_main_t169,6147
    uint32_t level0_sz;   /**< size of the level 0 in power of 2         */level0_sz170,6182
    uint32_t level0_mask; /**< mask to applied to the primary hash value */level0_mask171,6258
    uint32_t max;       /**< maximum number of entries in the cache */max172,6334
    uint32_t size;      /**< current number of entries in the cache */size173,6405
    uint64_t  dirty_main_counter;  /**< used as a dirty bit: that counter is incremented each time the dirty bit of the entry is asserted */dirty_main_counter174,6476
    list_t global_lru_link;     /**< entries cached: used for LRU             */global_lru_link175,6617
    com_cache_stats_t stats;    /**< cache statistics                         */stats176,6698
    com_cache_bucket_t *htable; /**< pointer to the bucket array of the cache */htable177,6779
    com_cache_usr_exact_match_fct  usr_exact_match_fct;  /**< callback for exact match            */usr_exact_match_fct178,6860
    com_cache_usr_hash_fct         usr_hash_fct;         /**< callback for hash value computation */usr_hash_fct179,6961
    com_cache_usr_delete_fct       usr_delete_fct;       /**< callback for user context deletion  */usr_delete_fct180,7062
} com_cache_main_t;com_cache_main_t181,7163
#define SHOW_STAT_CACHE(SHOW_STAT_CACHE184,7185
static inline char *com_cache_show_cache_stats(char *buffer,com_cache_main_t *p, char *cache_name)com_cache_show_cache_stats195,7538
static inline void com_cache_dirty_main_update(com_cache_main_t *cache)com_cache_dirty_main_update296,10679

../../rozofs/core/com_tx_timer_api.h,1008
#define com_tx_tmr_APIHcom_tx_tmr_APIH19,681
#define  COM_TX_TMR_SLOT0 COM_TX_TMR_SLOT027,803
#define  COM_TX_TMR_SLOT1 COM_TX_TMR_SLOT128,839
#define  COM_TX_TMR_SLOT2 COM_TX_TMR_SLOT229,875
#define COM_TX_TMR_SLOT_MAX COM_TX_TMR_SLOT_MAX30,911
typedef void (*com_tx_tmr_callBack_t)(void*) ; /* call back type */com_tx_tmr_callBack_t36,1058
typedef struct _com_tx_tmr_cell_t {_com_tx_tmr_cell_t43,1237
    ruc_obj_desc_t         listHead;    /* header used by list service for queing */listHead44,1273
    uint32_t                 date_s;      /* time out date in system milliseconds */date_s45,1358
    uint32_t                 delay;      /* delay requested in ms      */delay46,1443
    com_tx_tmr_callBack_t p_callBack;  /* call back to be used at time out */p_callBack47,1517
    void                 *cBParam;     /* parameter to be provided at time out */cBParam48,1595
} com_tx_tmr_cell_t;com_tx_tmr_cell_t49,1677
#define com_tx_tmr_CELL_LGTH	com_tx_tmr_CELL_LGTH51,1699

../../rozofs/core/com_tx_timer.c,576
#define COM_TX_TIMER_MAX_DATE COM_TX_TIMER_MAX_DATE33,940
com_tx_tmr_var_t com_tx_tmr={FALSE}; com_tx_tmr44,1062
#define MILLISECLONG(MILLISECLONG46,1101
uint32_t  com_tx_time()com_tx_time53,1278
void com_tx_tmr_periodic(void *ns) com_tx_tmr_periodic85,1985
void com_tx_tmr_processSlot(ruc_obj_desc_t* pTmrQueue) com_tx_tmr_processSlot110,2388
uint32_t  com_tx_tmr_start (uint8_t   tmr_slot,com_tx_tmr_start225,4876
uint32_t com_tx_tmr_stop (com_tx_tmr_cell_t *p_refTim){com_tx_tmr_stop280,6321
int com_tx_tmr_init(uint32_t period_ms,com_tx_tmr_init305,6872

../../rozofs/core/com_tx_timer.h,599
#define com_tx_tmr_Hcom_tx_tmr_H19,678
typedef struct _com_tx_tmr_var_t {_com_tx_tmr_var_t37,954
    uint32_t         trace;trace39,1020
    uint32_t         period_ms;                      /* period between two lookup */period_ms40,1048
    uint32_t         credit;                         /* nb of element processed   */credit42,1216
    ruc_obj_desc_t queue[COM_TX_TMR_SLOT_MAX];	   /* queue                     */queue45,1422
    struct timer_cell * p_periodic_timCell;        /* periodic timer cell       */	 p_periodic_timCell46,1504
} com_tx_tmr_var_t;com_tx_tmr_var_t47,1589

../../rozofs/core/dbgScript_api.h,53
#define __dbgScript_api__H__dbgScript_api__H20,685

../../rozofs/core/expgw_common.c,1886
expgw_eid_ctx_t      expgw_eid_table[EXPGW_EID_MAX_IDX];expgw_eid_table31,907
expgw_exportd_ctx_t  expgw_exportd_table[EXPGW_EXPORTD_MAX_IDX];expgw_exportd_table32,964
static north_remote_ip_list_t my_list[32];  /**< list of the connection for the exportd */my_list35,1031
static af_unix_socket_conf_t  af_inet_exportd_conf =af_inet_exportd_conf40,1172
int expgw_host2ip(char *host,uint32_t *ipaddr_p)expgw_host2ip78,3548
static char bufname[NORTH_LBG_MAX_NAME];bufname108,4210
int expgw_expgateway_lbg_initialize(expgw_expgw_ctx_t *exportclt) expgw_expgateway_lbg_initialize110,4252
static int get_service_tcp_port(char *host ,unsigned long prog, unsigned long vers) {get_service_tcp_port155,5557
static void export_lbg_periodic_ticker(void * param) {export_lbg_periodic_ticker183,6395
static void export_lbg_start_timer(expgw_exportd_ctx_t *exportclt) {export_lbg_start_timer212,7394
int expgw_export_lbg_initialize(expgw_exportd_ctx_t *exportclt ,unsigned long prog,expgw_export_lbg_initialize241,8190
void expgw_export_tableInit()expgw_export_tableInit305,10144
int expgw_set_exportd_table_dirty(uint32_t exportd_id)expgw_set_exportd_table_dirty336,10918
int expgw_clean_up_exportd_table_dirty(uint32_t exportd_id)expgw_clean_up_exportd_table_dirty382,12207
int expgw_export_add_eid(uint16_t exportd_id, uint16_t eid, char *hostname, expgw_export_add_eid434,13534
int expgw_add_export_gateway(uint16_t exportd_id, char *hostname, expgw_add_export_gateway497,15278
int expgw_check_local(uint16_t eid,fid_t fid)expgw_check_local602,17879
int expgw_get_exportd_lbg(uint16_t eid)expgw_get_exportd_lbg649,18891
int expgw_get_export_gateway_lbg(uint16_t eid,fid_t fid)expgw_get_export_gateway_lbg691,19866
int expgw_get_export_routing_lbg_info(uint16_t eid,fid_t fid,expgw_tx_routing_ctx_t *routing_ctx_p)expgw_get_export_routing_lbg_info762,22050

../../rozofs/core/expgw_common.h,5270
#define EXPGW_COMMON_HEXPGW_COMMON_H20,671
   EXPGW_PORT_ROZOFSMOUNT_IDX= 0,EXPGW_PORT_ROZOFSMOUNT_IDX46,1161
   EXPGW_PORT_EXPORTD_IDX,EXPGW_PORT_EXPORTD_IDX47,1195
   EXPGW_PORT_DEBUG_IDX,EXPGW_PORT_DEBUG_IDX48,1222
   EXPGW_PORT_MAX_IDX,  EXPGW_PORT_MAX_IDX49,1247
} expgw_listening_ports_e;expgw_listening_ports_e50,1272
   EXPGW_STATE_EMPTY= 0,EXPGW_STATE_EMPTY57,1365
   EXPGW_STATE_SYNCED,EXPGW_STATE_SYNCED58,1390
   EXPGW_STATE_DIRTY,EXPGW_STATE_DIRTY59,1413
} expgw_exportd_entry_state_e;expgw_exportd_entry_state_e60,1435
#define EXPGW_MAX_ROUTING_LBG EXPGW_MAX_ROUTING_LBG67,1787
typedef struct _expgw_tx_routing_ctx_t_expgw_tx_routing_ctx_t68,1819
   int gw_rank;             /**<index of the gateway in the eid/fid routing table                           */gw_rank70,1860
   int eid;                 /**<index of the gateway in the eid/fid routing table                           */eid71,1971
   int cur_lbg;             /**< current lbg idx in the table                                               */cur_lbg72,2082
   int nb_lbg;              /**< number of lbg in the table                                                 */nb_lbg73,2193
   int lbg_id[EXPGW_MAX_ROUTING_LBG];           /**< reference of the load balancing group of the master Exportd : default route */lbg_id74,2304
   int lbg_type[EXPGW_MAX_ROUTING_LBG];           /**< reference of the load balancing group of the master Exportd : default route */lbg_type75,2436
   int keep_xmit_buf_flag;  /**< assert to one if the requester wants to keep the rpc xmit buffer            */keep_xmit_buf_flag76,2570
   void *xmit_buf;          /**< pointer to xmit_buffer when keep_xmit_buf_flag is asserted                  */xmit_buf77,2682
} expgw_tx_routing_ctx_t;expgw_tx_routing_ctx_t78,2794
typedef struct _expgw_eid_ctx_t_expgw_eid_ctx_t89,3267
   uint16_t  eid;      /**< eid value  */ eid91,3301
   uint16_t  exportd_id ; /**< index of the parent exportd  */   exportd_id92,3344
   uint32_t  exp_gateway_bitmap_status; /**< a 1 indicates that the gateway cannot provide the service this eid  */exp_gateway_bitmap_status93,3410
   uint64_t  gateway_send_counters[EXPGW_EXPGW_MAX_IDX+1];gateway_send_counters94,3526
}  expgw_eid_ctx_t;expgw_eid_ctx_t96,3586
typedef struct _expgw_expgw_ctx_t_expgw_expgw_ctx_t102,3724
   uint16_t  entry_state;  /**< config state see expgw_exportd_entry_state_e */entry_state104,3760
   uint16_t  port;     /**< tcp port in host format   */port105,3840
   uint32_t  ipaddr;   /**< IP address in host format */ipaddr106,3897
   char      hostname[ROZOFS_HOSTNAME_MAX];hostname107,3954
   int       gateway_lbg_id;        /**< reference of the load balancing group for reach the master exportd (default route) */gateway_lbg_id108,3998
} expgw_expgw_ctx_t;expgw_expgw_ctx_t109,4125
typedef struct _expgw_exportd_ctx_t_expgw_exportd_ctx_t113,4183
   uint32_t  hash_config;   /**< hash configuretion of the export file    */hash_config115,4221
   uint16_t  exportd_id ;   /**< index of the parent exportd              */   exportd_id116,4298
   uint16_t  port;          /**< tcp port in host format                  */port117,4378
   uint32_t  ipaddr;        /**< IP address in host format                */ipaddr118,4455
   char      hostname[ROZOFS_HOSTNAME_MAX];hostname119,4532
   uint16_t  nb_gateways;  /**< number of gateay for export caching        */nb_gateways120,4576
   uint16_t  gateway_rank;  /**< rank of the gateway  */gateway_rank121,4654
   int       export_lbg_id;        /**< reference of the load balancing group for reach the master exportd (default route) */export_lbg_id122,4711
   expgw_expgw_ctx_t expgw_list[EXPGW_EXPGW_MAX_IDX];expgw_list123,4837
} expgw_exportd_ctx_t;expgw_exportd_ctx_t124,4891
static inline void expgw_routing_ctx_init(expgw_tx_routing_ctx_t *p)expgw_routing_ctx_init139,5235
static inline uint32_t expgw_get_exportd_hash_config(uint32_t exportd_id)expgw_get_exportd_hash_config166,5885
static inline int expgw_set_exportd_hash_config(uint32_t exportd_id,uint32_t hash_config)expgw_set_exportd_hash_config193,6603
static inline void expgw_routing_update_stats(int eid,int lbg_type,int gateway_rank)expgw_routing_update_stats219,7316
static inline int expgw_routing_get_next(expgw_tx_routing_ctx_t *p,void *xmit_buf)expgw_routing_get_next241,7981
#define EXPGW_SUPPORTS_EID EXPGW_SUPPORTS_EID285,9153
#define EXPGW_DOES_NOT_SUPPORT_EID EXPGW_DOES_NOT_SUPPORT_EID286,9182
static inline int expgw_routing_expgw_for_eid(expgw_tx_routing_ctx_t *p, int eid, int action)expgw_routing_expgw_for_eid287,9219
static inline int expgw_routing_insert_lbg(expgw_tx_routing_ctx_t *p,int lbg_id,int eid,int lbg_type)expgw_routing_insert_lbg339,10485
static inline void expgw_routing_release_buffer(expgw_tx_routing_ctx_t *p)expgw_routing_release_buffer363,11091
static inline char *expgw_display_one_exportd_routing_table(char *buffer,expgw_exportd_ctx_t *p)expgw_display_one_exportd_routing_table561,16355
static inline char *expgw_display_all_exportd_routing_table(char *buffer)expgw_display_all_exportd_routing_table591,17452
static inline char *expgw_display_all_eid(char *buffer)expgw_display_all_eid614,18007

../../rozofs/core/monitoring.c,88
int monitoring_initialize(uint32_t test, uint16_t port) {monitoring_initialize34,1008

../../rozofs/core/monitoring.h,43
#define _MONITORING_H_MONITORING_H27,759

../../rozofs/core/norh_lbg_timer.c,625
#define NORTH_LBG_TIMER_MAX_DATE NORTH_LBG_TIMER_MAX_DATE34,975
north_lbg_tmr_var_t north_lbg_tmr={FALSE};north_lbg_tmr45,1099
#define MILLISECLONG(MILLISECLONG47,1143
uint32_t north_lbg_time()north_lbg_time54,1320
void north_lbg_tmr_periodic(void *ns)north_lbg_tmr_periodic86,2029
void north_lbg_tmr_processSlot(ruc_obj_desc_t* pTmrQueue)north_lbg_tmr_processSlot112,2481
uint32_t north_lbg_tmr_start (uint8_t   tmr_slot,north_lbg_tmr_start228,5004
uint32_t north_lbg_tmr_stop (north_lbg_tmr_cell_t *p_refTim){north_lbg_tmr_stop283,6452
int north_lbg_tmr_init(uint32_t period_ms,north_lbg_tmr_init308,7007

../../rozofs/core/north_lbg_api.h,367
#define NORTH_LBG_API_HNORTH_LBG_API_H21,683
typedef struct _north_remote_ip_list_t_north_remote_ip_list_t124,3444
   uint32_t  remote_ipaddr_host; /**< IP address in host format  */remote_ipaddr_host126,3485
   uint16_t  remote_port_host;   /**< port in  host format       */remote_port_host127,3553
} north_remote_ip_list_t;north_remote_ip_list_t128,3621

../../rozofs/core/north_lbg.h,6445
#define NORTH_LBG_HNORTH_LBG_H21,679
#define NORTH__LBG_MAX_ENTRY NORTH__LBG_MAX_ENTRY43,1165
#define NORTH__LBG_TB_MAX_ENTRY NORTH__LBG_TB_MAX_ENTRY44,1260
typedef enum _north_lbg_entry_state_e_north_lbg_entry_state_e48,1370
   NORTH_LBG_DEPENDENCY = 0,NORTH_LBG_DEPENDENCY50,1410
   NORTH_LBG_UP,NORTH_LBG_UP51,1439
   NORTH_LBG_DOWN,NORTH_LBG_DOWN52,1456
   NORTH_LBG_SHUTTING_DOWN,NORTH_LBG_SHUTTING_DOWN53,1475
} north_lbg_entry_state_e;north_lbg_entry_state_e55,1504
#define NORTH_LBG_MAX_NAME NORTH_LBG_MAX_NAME58,1533
#define NORTH_LBG_MAX_XMIT_ON_UP_TRANSITION NORTH_LBG_MAX_XMIT_ON_UP_TRANSITION59,1607
#define NORTH_LBG_MAX_RETRY NORTH_LBG_MAX_RETRY61,1654
#define NORTH_LBG_MICROLONG(NORTH_LBG_MICROLONG63,1742
#define NORTH_LBG_START_PROF(NORTH_LBG_START_PROF65,1836
#define NORTH_LBG_STOP_PROF(NORTH_LBG_STOP_PROF75,2091
typedef struct _north_lbg_stats_t_north_lbg_stats_t87,2462
   uint64_t timestamp;     /**< timestamp for service measure */   timestamp89,2498
   uint64_t timestampCount;     /**< number of time service is called */   timestampCount90,2566
   uint64_t timestampElasped;     /**< elapsed time */   timestampElasped91,2642
   uint64_t xmitQueuelen;     /**< global xmit queue len */xmitQueuelen92,2700
   uint64_t totalXmitBytes;     /**< total number of bytes that has been sent */totalXmitBytes93,2760
   uint64_t totalXmitRetries;             /**< total number of messages that have been retransmiited    */totalXmitRetries94,2841
   uint64_t totalXmitAborts;             /**< total number of messages that have been retransmiited    */totalXmitAborts95,2948
   uint64_t totalXmitError;             /**< direct error on message send after entry selection    */totalXmitError96,3054
   uint64_t totalXmit;             /**< total number of messages submitted       */totalXmit97,3156
   uint64_t totalConnectAttempts;      /**< total number of connect request  */totalConnectAttempts98,3240
   uint64_t totalUpDownTransition; /**< total number of messages submitted for with EWOULDBLOCK is returned  */totalUpDownTransition99,3320
   uint64_t totalRecv;             /**< total number of messages received       */totalRecv100,3432
} north_lbg_stats_t;north_lbg_stats_t102,3516
typedef struct _north_lbg_entry_ctx_t_north_lbg_entry_ctx_t108,3601
  ruc_obj_desc_t    link;          /**< To be able to chain the MS context on any list */link110,3641
  uint32_t            index;         /**<Index of the entry within the load balancer     */index111,3731
  uint32_t            free;          /**< Is the context free or allocated TRUE/FALSE    */free112,3823
  int               sock_ctx_ref;  /**< socket contex reference                        */sock_ctx_ref116,3944
  int               state;         /**< see north_lbg_entry_state_e                    */state117,4034
  north_lbg_stats_t stats;         /**< entry statistics                               */stats118,4124
  void              *parent;       /**< pointer to the parent load balancer context    */parent119,4214
  north_lbg_tmr_cell_t  rpc_guard_timer;   /**< guard timer associated with a pending connect */rpc_guard_timer120,4304
  ruc_obj_desc_t xmitList;       /**< link list of the xmit buffer that have been sent on that interface  */xmitList121,4401
} north_lbg_entry_ctx_t;north_lbg_entry_ctx_t123,4511
#define NORTH_LBG_MAX_PRIO NORTH_LBG_MAX_PRIO126,4538
typedef struct _north_lbg_ctx_t_north_lbg_ctx_t130,4599
  ruc_obj_desc_t    link;          /**< To be able to chain the MS context on any list */link132,4633
  uint32_t            index;         /**<Index of the MS */index133,4723
  uint32_t            free;          /**< Is the context free or allocated TRUE/FALSE */free134,4783
  int               state;                   /**< aggregator state: see north_lbg_entry_state_e */state138,4901
  int               family;                   /**< load balancer family            */family139,5000
  char              name[NORTH_LBG_MAX_NAME];  /**< name of the load balancer       */name140,5086
  int               nb_entries_conf;          /**< number of configured entries      */nb_entries_conf141,5173
  int               nb_active_entries;        /**< number of active entries          */nb_active_entries142,5261
  int               next_entry_idx;           /**< index of the next enry to select  */next_entry_idx143,5349
  int             * next_global_entry_idx_p;  /**< index of the next entry in case it is shared between several lbg */next_global_entry_idx_p144,5437
  generic_disc_CBK_t  userDiscCallBack;    /**< user disconnect call back (optional)        */userDiscCallBack145,5556
  generic_recv_CBK_t  userRcvCallBack;    /**< user receive call back (mandatory)        */userRcvCallBack146,5651
  uint8_t           entry_bitmap_state[NORTH__LBG_TB_MAX_ENTRY];entry_bitmap_state147,5743
  ruc_obj_desc_t xmitList[NORTH_LBG_MAX_PRIO]; /* pending xmit list        */xmitList148,5808
  north_lbg_stats_t stats;                     /**< load balancing group statistics  */stats149,5886
  north_lbg_entry_ctx_t entry_tb[NORTH__LBG_MAX_ENTRY];entry_tb150,5974
  af_unix_socket_conf_t  lbg_conf;lbg_conf151,6030
  int                    rechain_when_lbg_gets_down;rechain_when_lbg_gets_down157,6428
  af_stream_poll_CBK_t       userPollingCallBack;    /**< call that permits polling at application level */userPollingCallBack158,6481
  int                        tmo_supervision_in_sec;tmo_supervision_in_sec159,6589
  int                        available_state;      /**< 0: unavailable/ 1 available */available_state160,6642
  int                        local; /**< 1 when the destination is local. 0 else */local161,6729
} north_lbg_ctx_t;north_lbg_ctx_t162,6813
static inline void north_lbg_set_bit(int entry_idx,uint8_t *p)north_lbg_set_bit196,7910
static inline void north_lbg_clear_bit(int entry_idx,uint8_t *p)north_lbg_clear_bit210,8250
static inline int north_lbg_test_bit(int entry_idx,uint8_t *p)north_lbg_test_bit226,8642
static inline int north_lbg_eval_global_state(north_lbg_ctx_t *lbg_p)north_lbg_eval_global_state243,8994
static inline void north_lbg_entry_state_change(north_lbg_entry_ctx_t *entry_p,int new_state)north_lbg_entry_state_change279,9766
static inline int north_lbg_get_next_valid_entry(north_lbg_ctx_t *lbg_p)north_lbg_get_next_valid_entry327,11247

../../rozofs/core/north_lbg_timer_api.h,1065
#define north_lbg_tmr_APIHnorth_lbg_tmr_APIH19,684
#define  NORTH_LBG_TMR_SLOT0 NORTH_LBG_TMR_SLOT027,809
#define  NORTH_LBG_TMR_SLOT1 NORTH_LBG_TMR_SLOT128,848
#define  NORTH_LBG_TMR_SLOT2 NORTH_LBG_TMR_SLOT229,887
#define NORTH_LBG_TMR_SLOT_MAX NORTH_LBG_TMR_SLOT_MAX30,926
typedef void (*north_lbg_tmr_callBack_t)(void*) ; /* call back type */north_lbg_tmr_callBack_t36,1076
typedef struct _north_lbg_tmr_cell_t {_north_lbg_tmr_cell_t43,1258
    ruc_obj_desc_t         listHead;    /* header used by list service for queing */listHead44,1297
    uint32_t                 date_s;      /* time out date in system milliseconds */date_s45,1382
    uint32_t                 delay;      /* delay requested in ms      */delay46,1467
    north_lbg_tmr_callBack_t p_callBack;  /* call back to be used at time out */p_callBack47,1541
    void                 *cBParam;     /* parameter to be provided at time out */cBParam48,1622
} north_lbg_tmr_cell_t;north_lbg_tmr_cell_t49,1704
#define north_lbg_tmr_CELL_LGTH	north_lbg_tmr_CELL_LGTH51,1729

../../rozofs/core/north_lbg_timer.h,618
#define north_lbg_tmr_Hnorth_lbg_tmr_H19,681
typedef struct _north_lbg_tmr_var_t {_north_lbg_tmr_var_t38,968
    uint32_t         trace;trace40,1037
    uint32_t         period_ms;                      /* period between two lookup */period_ms41,1065
    uint32_t         credit;                         /* nb of element processed   */credit43,1233
    ruc_obj_desc_t queue[NORTH_LBG_TMR_SLOT_MAX];	   /* queue                     */queue46,1426
    struct timer_cell * p_periodic_timCell;        /* periodic timer cell       */p_periodic_timCell47,1511
} north_lbg_tmr_var_t;north_lbg_tmr_var_t48,1594

../../rozofs/core/north_load_balancer_api.c,2976
char *north_lbg_display_lbg_id_and_state(char * pchar,int lbg_id)north_lbg_display_lbg_id_and_state59,1834
char *north_lbg_display_lbg_state(char * pchar,int lbg_id)north_lbg_display_lbg_state96,2698
void north_lbg_poll_xmit_queue(north_lbg_ctx_t  *lbg_p, north_lbg_entry_ctx_t  *entry_p,int xmit_credit)north_lbg_poll_xmit_queue134,3583
void  north_lbg_userRecvCallBack(void *userRef,uint32_t  socket_ctx_idx, void *bufRef)north_lbg_userRecvCallBack184,5067
void  north_lbg_userDiscCallBack(void *userRef,uint32_t socket_context_ref,void *bufRef,int err_no)north_lbg_userDiscCallBack222,6309
int  north_lbg_delete(int lbg_id)north_lbg_delete397,11887
void  north_lbg_userXmiDoneCallBack(void *userRef,uint32_t socket_context_ref,void *bufRef)north_lbg_userXmiDoneCallBack515,15312
void north_lbg_connect_cbk (void *userRef,uint32_t socket_context_ref,int retcode,int errnum)north_lbg_connect_cbk560,16598
void north_lbg_entry_timeout_CBK (void *opaque)north_lbg_entry_timeout_CBK621,18411
void north_lbg_entry_stop_timer(north_lbg_entry_ctx_t *pObj)north_lbg_entry_stop_timer648,19115
void north_lbg_entry_start_timer(north_lbg_entry_ctx_t *entry_p,uint32_t time_ms) north_lbg_entry_start_timer665,19515
int north_lbg_create_af_unix(char *name,char *basename_p,int family,int first_instance,int  nb_instances,af_unix_socket_conf_t *usr_conf_p)north_lbg_create_af_unix698,20411
int north_lbg_create_af_inet(char *name,north_lbg_create_af_inet794,23140
int north_lbg_get_state(int lbg_idx)north_lbg_get_state896,26205
int north_lbg_is_available(int lbg_idx)north_lbg_is_available922,26652
void north_lbg_update_available_state(uint32_t lbg_idx)north_lbg_update_available_state947,27107
int north_lbg_create_no_conf()north_lbg_create_no_conf1000,28501
int north_lbg_configure_af_inet(int lbg_idx,char *name,north_lbg_configure_af_inet1033,29204
int north_lbg_set_next_global_entry_idx_p(int lbg_idx, int * next_global_entry_idx_p)north_lbg_set_next_global_entry_idx_p1140,32614
int north_lbg_re_configure_af_inet_destination_port(int lbg_idx,north_remote_ip_list_t *remote_ip_p, int  nb_instances)north_lbg_re_configure_af_inet_destination_port1171,33509
int north_lbg_attach_app_sup_cbk_on_entries(north_lbg_ctx_t  *lbg_p)north_lbg_attach_app_sup_cbk_on_entries1213,34768
int  north_lbg_attach_application_supervision_callback(int lbg_idx,af_stream_poll_CBK_t supervision_callback)north_lbg_attach_application_supervision_callback1259,36096
int  north_lbg_set_application_tmo4supervision(int lbg_idx,int tmo_sec)north_lbg_set_application_tmo4supervision1292,36960
int north_lbg_send(int  lbg_idx,void *buf_p)north_lbg_send1321,37650
int north_lbg_send_from_shaper(int  lbg_idx,void *buf_p)north_lbg_send_from_shaper1417,40215
int north_lbg_send_with_shaping(int  lbg_idx,void *buf_p,uint32_t rsp_size,uint32_t disk_time)north_lbg_send_with_shaping1490,42138
int north_lbg_is_local(int  lbg_idx)north_lbg_is_local1553,43798

../../rozofs/core/north_load_balancer.c,2338
north_lbg_ctx_t *north_lbg_context_freeListHead; /**< head of list of the free context  */north_lbg_context_freeListHead39,1109
north_lbg_ctx_t north_lbg_context_activeListHead; /**< list of the active context     */north_lbg_context_activeListHead40,1200
void *north_lbg_buffer_pool_tb[2]; /**< xmit and receive buffer pool */north_lbg_buffer_pool_tb42,1290
uint32_t north_lbg_context_count; /**< Max number of contexts    */north_lbg_context_count44,1363
uint32_t north_lbg_context_allocated; /**< current number of allocated context        */north_lbg_context_allocated45,1431
north_lbg_ctx_t *north_lbg_context_pfirst; /**< pointer to the first context of the pool */north_lbg_context_pfirst46,1520
#define MICROLONG(MICROLONG49,1614
#define NORTH_LBG_DEBUG_TOPIC NORTH_LBG_DEBUG_TOPIC50,1697
char * lbg_north_state2String(int x) {lbg_north_state2String52,1739
void north_lbg_debug_show(char * argv[],uint32_t tcpRef, void *bufRef) {north_lbg_debug_show71,2327
void north_lbg_entries_debug_show(uint32_t tcpRef, void *bufRef) {north_lbg_entries_debug_show133,6332
void north_lbg_debug(char * argv[], uint32_t tcpRef, void *bufRef) {north_lbg_debug179,8599
void north_lbg_entries_debug(char * argv[], uint32_t tcpRef, void *bufRef) {north_lbg_entries_debug183,8718
void north_lbg_debug_init() {north_lbg_debug_init194,9145
north_lbg_ctx_t *north_lbg_getObjCtx_p(uint32_t north_lbg_ctx_id) {north_lbg_getObjCtx_p221,9636
void north_lbg_rechain_when_lbg_gets_down(int idx) {north_lbg_rechain_when_lbg_gets_down245,10401
uint32_t north_lbg_getObjCtx_ref(north_lbg_ctx_t *p) {north_lbg_getObjCtx_ref268,10896
void north_lbg_init() {north_lbg_init300,11560
void north_lbg_entry_init(void *parent, north_lbg_entry_ctx_t *entry_p, uint32_t index) {north_lbg_entry_init316,11949
void north_lbg_ctxInit(north_lbg_ctx_t *p, uint8_t creation) {north_lbg_ctxInit342,12638
north_lbg_ctx_t *north_lbg_alloc() {north_lbg_alloc389,13954
uint32_t north_lbg_createIndex(uint32_t north_lbg_ctx_id) {north_lbg_createIndex438,15263
uint32_t north_lbg_free_from_idx(uint32_t north_lbg_ctx_id) {north_lbg_free_from_idx493,16553
uint32_t north_lbg_free_from_ptr(north_lbg_ctx_t *p) {north_lbg_free_from_ptr545,17626
uint32_t north_lbg_module_init(uint32_t north_lbg_ctx_count) {north_lbg_module_init574,18175

../../rozofs/core/rozofs_core_files.c,1782
#define ROZOFS_CORE_CROZOFS_CORE_C22,832
#define ROZOFS_CORE_BASE_PATH ROZOFS_CORE_BASE_PATH37,1133
volatile sig_atomic_t     rozofs_fatal_error_processing = 0;rozofs_fatal_error_processing38,1187
char                      rozofs_core_file_path[256] = {0};           rozofs_core_file_path39,1248
int                       rozofs_max_core_files         = 0;rozofs_max_core_files40,1319
rozofs_attach_crash_cbk_t rozofs_crash_cbk[]= {rozofs_crash_cbk42,1381
#define ROZFS_MAX_CRASH_CBK ROZFS_MAX_CRASH_CBK46,1517
int rozofs_crash_cbk_nb   = 0;rozofs_crash_cbk_nb48,1607
rozofs_attach_crash_cbk_t rozofs_hgup_cbk[]= {rozofs_hgup_cbk50,1639
#define ROZFS_MAX_HGUP_CBK ROZFS_MAX_HGUP_CBK54,1774
int rozofs_hgup_cbk_nb = 0;rozofs_hgup_cbk_nb55,1861
void rozofs_attach_crash_cbk(rozofs_attach_crash_cbk_t entryPoint) {rozofs_attach_crash_cbk63,2229
void rozofs_attach_hgup_cbk(rozofs_attach_crash_cbk_t entryPoint) {rozofs_attach_hgup_cbk82,2890
char * rozofs_signal(int sig) {rozofs_signal101,3600
int rozofs_mkdir(char * path) {rozofs_mkdir143,6918
typedef struct rozofs_my_file_s {    rozofs_my_file_s166,7605
  char          name[256];  name167,7643
  uint32_t      ctime;ctime168,7672
} ROZOFS_MY_FILE_S;ROZOFS_MY_FILE_S169,7695
#define ROZOFS_MAX_CORE ROZOFS_MAX_CORE171,7716
static ROZOFS_MY_FILE_S directories[ROZOFS_MAX_CORE];directories172,7745
static char buff [1024];buff173,7799
void rozofs_clean_core(void) {rozofs_clean_core175,7825
void rozofs_catch_error(int sig){rozofs_catch_error249,9995
void rozofs_catch_hangup(int sig){rozofs_catch_hangup283,11017
void rozofs_catch_sigpipe(int s){rozofs_catch_sigpipe304,11700
void rozofs_signals_declare(char * application, int max_core_files) {rozofs_signals_declare315,12320

../../rozofs/core/rozofs_core_files.h,129
#define ROZOFS_CORE_HROZOFS_CORE_H21,681
typedef void (*rozofs_attach_crash_cbk_t) (int sig);rozofs_attach_crash_cbk_t23,704

../../rozofs/core/rozofs_host2ip.h,0

../../rozofs/core/rozofs_ip_utilities.c,414
#define MAX_IP_LIST MAX_IP_LIST31,959
static uint32_t nb_local_ip_addresses = 0;nb_local_ip_addresses32,984
static uint32_t local_ip_addresses_list[MAX_IP_LIST];local_ip_addresses_list33,1028
void get_local_ip_addresse_list() {get_local_ip_addresse_list40,1215
int is_this_ipV4_local(uint32_t ipv4) {is_this_ipV4_local83,2351
int is_this_ipV4_configured(uint32_t ipv4) {is_this_ipV4_configured104,2822

../../rozofs/core/rozofs_ip_utilities.h,362
#define ROZOFS_IP_UTILITIES_HROZOFS_IP_UTILITIES_H20,677
static inline int rozofs_host2ip(char *host, uint32_t *ipaddr_p) {rozofs_host2ip44,1145
static inline char * rozofs_ip2string(char *p, uint32_t ipAddr) {rozofs_ip2string72,1915
static inline uint16_t get_service_port(char *serviceName, char * proto, uint16_t defaultPort){get_service_port117,3055

../../rozofs/core/rozofs_north_sock.h,198
  int family;  /**< north ;family index  */family20,695
  char basename[128];  /**< base name for the family  */basename21,739
  int  max_instances;max_instances22,796
  int mode;mode23,818

../../rozofs/core/rozofs_rpc_non_blocking_generic.c,1995
rozofs_rpc_ctx_t *rozofs_rpc_ctx_freeListHead;  /**< head of list of the free context  */rozofs_rpc_ctx_freeListHead33,1015
rozofs_rpc_ctx_t rozofs_rpc_ctx_activeListHead;  /**< list of the active context     */rozofs_rpc_ctx_activeListHead34,1105
uint32_t    rozofs_rpc_ctx_count;           /**< Max number of contexts    */rozofs_rpc_ctx_count36,1194
uint32_t    rozofs_rpc_ctx_allocated;      /**< current number of allocated context        */rozofs_rpc_ctx_allocated37,1272
rozofs_rpc_ctx_t *rozofs_rpc_ctx_pfirst;  /**< pointer to the first context of the pool */rozofs_rpc_ctx_pfirst38,1366
uint64_t  rozofs_rpc_global_object_index = 0;rozofs_rpc_global_object_index39,1457
#define MICROLONG(MICROLONG47,1568
#define EXPGW_DEBUG_TOPIC EXPGW_DEBUG_TOPIC48,1651
static char    myBuf[UMA_DBG_MAX_SEND_SIZE];myBuf49,1700
#define MICROLONG(MICROLONG51,1746
#define EXPGW_DEBUG_TOPIC EXPGW_DEBUG_TOPIC52,1829
static char    myBuf[UMA_DBG_MAX_SEND_SIZE];myBuf53,1878
void rozofs_rpc_debug_show(uint32_t tcpRef, void *bufRef) {rozofs_rpc_debug_show62,2221
void rozofs_rpc_debug(char * argv[], uint32_t tcpRef, void *bufRef) {rozofs_rpc_debug78,2839
void rozofs_rpc_debug_init() {rozofs_rpc_debug_init90,3250
rozofs_rpc_ctx_t *rozofs_rpc_getObjCtx_p(uint32_t object_index)rozofs_rpc_getObjCtx_p114,3676
uint32_t rozofs_rpc_getObjCtx_ref(rozofs_rpc_ctx_t *p)rozofs_rpc_getObjCtx_ref150,4635
void rozofs_rpc_init()rozofs_rpc_init182,5253
void  rozofs_rpc_ctxInit(rozofs_rpc_ctx_t *p,uint8_t creation)rozofs_rpc_ctxInit201,5594
rozofs_rpc_ctx_t *rozofs_rpc_req_alloc()rozofs_rpc_req_alloc227,6258
void rozofs_rpc_req_free(rozofs_rpc_ctx_t *ctx_p)rozofs_rpc_req_free271,7246
int rozofs_rpc_non_blocking_req_send (int lbg_id,uint32_t prog,uint32_t vers,rozofs_rpc_non_blocking_req_send326,9305
void rozofs_rpc_generic_reply_cbk(void *this,void *param) rozofs_rpc_generic_reply_cbk504,14549
uint32_t rozofs_rpc_module_init()rozofs_rpc_module_init640,18074

../../rozofs/core/rozofs_rpc_non_blocking_generic.h,1678
#define ROZOFS_RPC_NON_BLOCKING_GENERIC_HROZOFS_RPC_NON_BLOCKING_GENERIC_H21,691
#define ROZOFS_RPC_GENERIC_MAX_REQ_CTX ROZOFS_RPC_GENERIC_MAX_REQ_CTX40,1093
#define DEFINE_RPC_GENERIC_PROBE(DEFINE_RPC_GENERIC_PROBE46,1229
#define START_PROFILING_RPC_GENERIC(START_PROFILING_RPC_GENERIC52,1355
#define STOP_PROFILING_RPC_GENERIC(STOP_PROFILING_RPC_GENERIC73,1803
typedef struct _rozofs_rpc_ctx_t_rozofs_rpc_ctx_t90,2259
  ruc_obj_desc_t link;link92,2294
  uint32_t            index;         /**< Index of the MS */index93,2317
  uint32_t            free;          /**< Is the context free or allocated TRUE/FALSE */free94,2378
  uint32_t            integrity;     /**< the value of this field is incremented at  each MS ctx allocation  */integrity95,2467
  sys_recv_pf_t    response_cbk;     /**< callback function associated with the response of the root transaction */response_cbk97,2582
  xdrproc_t        xdr_result;       /**< rpc decoding procedure                                                 */xdr_result98,2698
  void             *user_ref;        /**< object index                                                           */user_ref99,2814
  int              ret_len;          /**< length of the structure for decoding the returned parameters           */ret_len100,2930
  void            *ret_p;            /**< pointer to the structure used for storing the decoded response         */ret_p101,3046
  uint64_t *profiler_probe;          /**< pointer to the profiler counter */profiler_probe102,3162
  uint64_t profiler_time;            /**< profiler timestamp */profiler_time103,3239
} rozofs_rpc_ctx_t;rozofs_rpc_ctx_t104,3303

../../rozofs/core/rozofs_rpc_non_blocking_generic_srv.c,3154
typedef struct _rozorpc_profiler_t_rozorpc_profiler_t27,1011
     uint64_t forward_reply[2];forward_reply29,1048
} rozorpc_profiler_t;rozorpc_profiler_t30,1080
rozorpc_srv_ctx_t *rozorpc_srv_ctx_freeListHead;  /**< head of list of the free context  */rozorpc_srv_ctx_freeListHead33,1104
rozorpc_srv_ctx_t rozorpc_srv_ctx_activeListHead;  /**< list of the active context     */rozorpc_srv_ctx_activeListHead34,1196
uint32_t    rozorpc_srv_ctx_count;           /**< Max number of contexts    */rozorpc_srv_ctx_count36,1287
uint32_t    rozorpc_srv_ctx_allocated;      /**< current number of allocated context        */rozorpc_srv_ctx_allocated37,1366
rozorpc_srv_ctx_t *rozorpc_srv_ctx_pfirst;  /**< pointer to the first context of the pool */rozorpc_srv_ctx_pfirst38,1461
uint64_t  rozorpc_srv_global_object_index = 0;rozorpc_srv_global_object_index39,1554
uint64_t rozorpc_srv_stats[ROZORPC_SRV_COUNTER_MAX];rozorpc_srv_stats44,1649
int rozorpc_srv_north_small_buf_count= 0;rozorpc_srv_north_small_buf_count50,1733
int rozorpc_srv_north_small_buf_sz= 0;rozorpc_srv_north_small_buf_sz51,1775
int rozorpc_srv_north_large_buf_count= 0;rozorpc_srv_north_large_buf_count52,1814
int rozorpc_srv_north_large_buf_sz= 0;rozorpc_srv_north_large_buf_sz53,1856
int rozorpc_srv_south_small_buf_count= 0;rozorpc_srv_south_small_buf_count54,1895
int rozorpc_srv_south_small_buf_sz= 0;rozorpc_srv_south_small_buf_sz55,1937
int rozorpc_srv_south_large_buf_count= 0;rozorpc_srv_south_large_buf_count56,1976
int rozorpc_srv_south_large_buf_sz= 0;rozorpc_srv_south_large_buf_sz57,2018
void *rozorpc_srv_pool[_ROZORPC_SRV_MAX_POOL];rozorpc_srv_pool59,2058
uint32_t rozorpc_srv_seqnum = 1;rozorpc_srv_seqnum61,2106
#define MICROLONG(MICROLONG64,2141
#define ROZORPC_SRV_DEBUG_TOPIC ROZORPC_SRV_DEBUG_TOPIC65,2224
static char    myBuf[UMA_DBG_MAX_SEND_SIZE];myBuf66,2277
#define SHOW_PROFILER_PROBE(SHOW_PROFILER_PROBE70,2325
void rozorpc_srv_debug_show(uint32_t tcpRef, void *bufRef) {rozorpc_srv_debug_show83,3020
void rozorpc_srv_debug(char * argv[], uint32_t tcpRef, void *bufRef) {rozorpc_srv_debug126,6191
void rozorpc_srv_debug_init() {rozorpc_srv_debug_init138,6604
rozorpc_srv_ctx_t *rozorpc_srv_getObjCtx_p(uint32_t object_index)rozorpc_srv_getObjCtx_p163,7044
uint32_t rozorpc_srv_getObjCtx_ref(rozorpc_srv_ctx_t *p)rozorpc_srv_getObjCtx_ref199,8014
void rozorpc_srv_init()rozorpc_srv_init231,8640
void  rozorpc_srv_ctxInit(rozorpc_srv_ctx_t *p,uint8_t creation)rozorpc_srv_ctxInit250,8987
rozorpc_srv_ctx_t *rozorpc_srv_alloc_context()rozorpc_srv_alloc_context278,9687
void rozorpc_srv_release_context(rozorpc_srv_ctx_t *ctx_p)rozorpc_srv_release_context323,10737
int rozorpc_srv_getargs (void *recv_buf,xdrproc_t xdr_argument, void *argument)rozorpc_srv_getargs385,12255
int rozorpc_srv_getargs_with_position (void *recv_buf,xdrproc_t xdr_argument, void *argument,int *position)rozorpc_srv_getargs_with_position443,14136
void rozorpc_srv_forward_reply (rozorpc_srv_ctx_t *p,char * arg_ret)rozorpc_srv_forward_reply507,16345
uint32_t rozorpc_srv_module_init()rozorpc_srv_module_init587,18700

../../rozofs/core/rozofs_rpc_non_blocking_generic_srv.h,5427
#define ROZORPC_SRV_EXPORT_HROZORPC_SRV_EXPORT_H20,675
#define ROZORPC_SRV_CNF_NO_BUF_CNT ROZORPC_SRV_CNF_NO_BUF_CNT41,1086
#define ROZORPC_SRV_CNF_NO_BUF_SZ ROZORPC_SRV_CNF_NO_BUF_SZ42,1132
#define START_PROFILING_ROZORPC_SRV(START_PROFILING_ROZORPC_SRV47,1225
#define STOP_PROFILING_ROZORPC_SRV(STOP_PROFILING_ROZORPC_SRV64,1645
#define ROZORPC_SRV_CTX_CNT ROZORPC_SRV_CTX_CNT80,2041
#define ROZORPC_SRV_CTX_MIN_CNT ROZORPC_SRV_CTX_MIN_CNT81,2175
#define ROZORPC_SRV_NORTH_LBG_BUF_RECV_CNT ROZORPC_SRV_NORTH_LBG_BUF_RECV_CNT85,2364
#define ROZORPC_SRV_NORTH_LBG_BUF_RECV_SZ ROZORPC_SRV_NORTH_LBG_BUF_RECV_SZ86,2493
#define ROZORPC_SRV_NORTH_MOD_INTERNAL_READ_BUF_CNT ROZORPC_SRV_NORTH_MOD_INTERNAL_READ_BUF_CNT91,2753
#define ROZORPC_SRV_NORTH_MOD_INTERNAL_READ_BUF_SZ ROZORPC_SRV_NORTH_MOD_INTERNAL_READ_BUF_SZ92,2871
#define ROZORPC_SRV_NORTH_MOD_XMIT_BUF_CNT ROZORPC_SRV_NORTH_MOD_XMIT_BUF_CNT94,2971
#define ROZORPC_SRV_NORTH_MOD_XMIT_BUF_SZ ROZORPC_SRV_NORTH_MOD_XMIT_BUF_SZ95,3080
#define ROZORPC_SRV_SOUTH_TX_XMIT_BUF_CNT ROZORPC_SRV_SOUTH_TX_XMIT_BUF_CNT97,3201
#define ROZORPC_SRV_SOUTH_TX_XMIT_BUF_SZ ROZORPC_SRV_SOUTH_TX_XMIT_BUF_SZ98,3311
#define ROZORPC_SRV_SOUTH_TX_CNT ROZORPC_SRV_SOUTH_TX_CNT106,3562
#define ROZORPC_SRV_SOUTH_TX_RECV_BUF_CNT ROZORPC_SRV_SOUTH_TX_RECV_BUF_CNT107,3669
#define ROZORPC_SRV_SOUTH_TX_RECV_BUF_SZ ROZORPC_SRV_SOUTH_TX_RECV_BUF_SZ108,3775
#define ROZORPC_SRV_NORTH_TX_BUF_CNT ROZORPC_SRV_NORTH_TX_BUF_CNT110,3875
#define ROZORPC_SRV_NORTH_TX_BUF_SZ ROZORPC_SRV_NORTH_TX_BUF_SZ111,3961
#define ROZORPC_SRV_MAX_RETRY ROZORPC_SRV_MAX_RETRY114,4026
typedef struct _rozorpc_srv_ctx_t_rozorpc_srv_ctx_t122,4185
  ruc_obj_desc_t link;link124,4221
  uint32_t            index;         /**< Index of the MS */index125,4244
  uint32_t            free;          /**< Is the context free or allocated TRUE/FALSE */free126,4305
  uint32_t            integrity;     /**< the value of this field is incremented at  each MS ctx allocation  */integrity127,4394
  uint32_t            opcode;      /**< opcode associated with the request, when the key is not used the value is ROZORPC_SRV_NULL */opcode128,4506
  uint32_t   src_transaction_id;  /**< transaction id of the source request                                       */src_transaction_id129,4640
  uint64_t            timestamp;timestamp130,4757
  int                 position;  /**< position of the last decoded arg in the request                 */position131,4790
  void      *recv_buf;             /**< pointer to the receive buffer that carries the request        */recv_buf132,4895
  uint32_t   socketRef;            /**< reference of the socket on which the answser must be sent     */socketRef133,5000
  sys_recv_pf_t    response_cbk;  /**< callback function associated with the response of the root transaction */response_cbk134,5105
  xdrproc_t        xdr_result;xdr_result135,5218
  xdrproc_t        xdr_result_internal;xdr_result_internal136,5249
  int        xdr_offset_in_req;   /**< offset oif the first applicative byte in a request -> in recv_buf  */  xdr_offset_in_req137,5289
  void      *xmitBuf;             /**< reference of the xmit buffer that will use for sending the response with an errcode       */xmitBuf138,5400
  void      *decoded_arg;          /**< buffer of the decoded argument */decoded_arg139,5532
  xdrproc_t  arg_decoder;          /**< procedure for decoding/freeing arguments */arg_decoder140,5606
  uint64_t *profiler_probe;       /**< pointer to the profiler counter */profiler_probe141,5690
  uint64_t profiler_time;        /**< profiler timestamp */profiler_time142,5764
} rozorpc_srv_ctx_t;rozorpc_srv_ctx_t144,5825
#define ROZORPC_SRV_START_NORTH_PROF(ROZORPC_SRV_START_NORTH_PROF146,5847
#define ROZORPC_SRV_STOP_NORTH_PROF(ROZORPC_SRV_STOP_NORTH_PROF163,6309
#define ROZORPC_SRV_ERR_PROF(ROZORPC_SRV_ERR_PROF179,6726
  ROZORPC_SRV_SEND =0 ,ROZORPC_SRV_SEND193,6862
  ROZORPC_SRV_SEND_ERROR,ROZORPC_SRV_SEND_ERROR194,6886
  ROZORPC_SRV_RECV_OK, ROZORPC_SRV_RECV_OK195,6912
  ROZORPC_SRV_RECV_OUT_SEQ,ROZORPC_SRV_RECV_OUT_SEQ196,6936
  ROZORPC_SRV_ENCODING_ERROR,ROZORPC_SRV_ENCODING_ERROR197,6964
  ROZORPC_SRV_DECODING_ERROR,ROZORPC_SRV_DECODING_ERROR198,6994
  ROZORPC_SRV_NO_CTX_ERROR,ROZORPC_SRV_NO_CTX_ERROR199,7024
  ROZORPC_SRV_NO_BUFFER_ERROR,ROZORPC_SRV_NO_BUFFER_ERROR200,7052
  ROZORPC_SRV_COUNTER_MAXROZORPC_SRV_COUNTER_MAX201,7083
}rozorpc_srv_tx_stats_e;rozorpc_srv_tx_stats_e202,7109
#define ROZORPC_SRV_STATS(ROZORPC_SRV_STATS206,7173
  _ROZORPC_SRV_NORTH_SMALL_POOL =0 ,_ROZORPC_SRV_NORTH_SMALL_POOL230,7698
  _ROZORPC_SRV_NORTH_LARGE_POOL, _ROZORPC_SRV_NORTH_LARGE_POOL231,7735
  _ROZORPC_SRV_SOUTH_SMALL_POOL,_ROZORPC_SRV_SOUTH_SMALL_POOL232,7769
  _ROZORPC_SRV_SOUTH_LARGE_POOL,_ROZORPC_SRV_SOUTH_LARGE_POOL233,7802
  _ROZORPC_SRV_MAX_POOL_ROZORPC_SRV_MAX_POOL234,7835
} rozorpc_srv_buffer_pool_e;rozorpc_srv_buffer_pool_e235,7859
#define ROZORPC_SRV_NORTH_SMALL_POOL ROZORPC_SRV_NORTH_SMALL_POOL240,7924
#define ROZORPC_SRV_NORTH_LARGE_POOL ROZORPC_SRV_NORTH_LARGE_POOL241,8009
#define ROZORPC_SRV_SOUTH_SMALL_POOL ROZORPC_SRV_SOUTH_SMALL_POOL242,8094
#define ROZORPC_SRV_SOUTH_LARGE_POOL ROZORPC_SRV_SOUTH_LARGE_POOL243,8179
static inline uint32_t rozorpc_srv_get_free_transaction_context()rozorpc_srv_get_free_transaction_context283,9311

../../rozofs/core/rozofs_socket_family.h,2587
#define RZOFS_SOCKET_FAMILY_HRZOFS_SOCKET_FAMILY_H21,691
typedef enum _rozofs_socket_family_e_rozofs_socket_family_e23,722
  ROZOFS_SOCK_FAMILY_TEST_NORTH = 0,ROZOFS_SOCK_FAMILY_TEST_NORTH25,761
  ROZOFS_SOCK_FAMILY_TEST_SOUTH,ROZOFS_SOCK_FAMILY_TEST_SOUTH26,798
  ROZOFS_SOCK_FAMILY_STORAGE_NORTH,ROZOFS_SOCK_FAMILY_STORAGE_NORTH27,831
  ROZOFS_SOCK_FAMILY_STORAGE_SOUTH,ROZOFS_SOCK_FAMILY_STORAGE_SOUTH28,867
  ROZOFS_SOCK_FAMILY_EXPORT_NORTH,ROZOFS_SOCK_FAMILY_EXPORT_NORTH29,903
  ROZOFS_SOCK_FAMILY_EXPORT_SOUTH,ROZOFS_SOCK_FAMILY_EXPORT_SOUTH30,938
  ROZOFS_SOCK_FAMILY_MAXROZOFS_SOCK_FAMILY_MAX31,973
} rozofs_socket_family_e;rozofs_socket_family_e32,998
#define ROZOFS_SOCK_FAMILY_TEST_NORTH_SUNPATH ROZOFS_SOCK_FAMILY_TEST_NORTH_SUNPATH38,1072
#define ROZOFS_SOCK_FAMILY_TEST_SOUTH_SUNPATH ROZOFS_SOCK_FAMILY_TEST_SOUTH_SUNPATH39,1144
#define ROZOFS_SOCK_FAMILY_STORCLI_NORTH_SUNPATH ROZOFS_SOCK_FAMILY_STORCLI_NORTH_SUNPATH40,1216
#define ROZOFS_SOCK_FAMILY_STORCLI_MOJETTE_NORTH_SUNPATH ROZOFS_SOCK_FAMILY_STORCLI_MOJETTE_NORTH_SUNPATH41,1298
#define ROZOFS_SOCK_FAMILY_STORCLI_MOJETTE_SOUTH_SUNPATH ROZOFS_SOCK_FAMILY_STORCLI_MOJETTE_SOUTH_SUNPATH42,1387
#define ROZOFS_SOCK_FAMILY_EXPORT_NORTH_SUNPATH ROZOFS_SOCK_FAMILY_EXPORT_NORTH_SUNPATH43,1476
#define ROZOFS_SOCK_FAMILY_EXPORT_SOUTH ROZOFS_SOCK_FAMILY_EXPORT_SOUTH44,1551
#define ROZOFS_SOCK_FAMILY_DISK_SOUTH ROZOFS_SOCK_FAMILY_DISK_SOUTH45,1618
#define ROZOFS_SOCK_FAMILY_DISK_NORTH ROZOFS_SOCK_FAMILY_DISK_NORTH46,1681
typedef enum _rozofs_socket_family_type_e_rozofs_socket_family_type_e50,1765
  ROZOFS_SOCK_TYPE_NORTH = 0,ROZOFS_SOCK_TYPE_NORTH52,1809
  ROZOFS_SOCK_TYPE_SOUTH,ROZOFS_SOCK_TYPE_SOUTH53,1839
   ROZOFS_SOCK_TYPE_MAXROZOFS_SOCK_TYPE_MAX54,1865
} rozofs_socket_family_type_e;rozofs_socket_family_type_e55,1889
typedef struct _rozofs_family_north_conf_rozofs_family_north_conf61,1931
  rozofs_socket_family_e family;  /**< family id  */family63,1974
  int nb_instances;nb_instances64,2027
} rozofs_family_north_conf;rozofs_family_north_conf65,2047
typedef struct _rozofs_socket_any_family_conf_rozofs_socket_any_family_conf68,2077
  rozofs_socket_family_e type;    /**< north or south  */type70,2125
  rozofs_socket_family_e family;  /**< family id  */family71,2183
  int first_instance;             /**< index of the first instance -> NS for south socket */  first_instance72,2236
  int nb_instances;               /**< number of instances */nb_instances73,2331
} rozofs_socket_any_family_conf;rozofs_socket_any_family_conf74,2393

../../rozofs/core/rozofs_timer_conf_dbg.c,501
void dbg_show_tmr(char * argv[], uint32_t tcpRef, void *bufRef) dbg_show_tmr33,953
static char * dbg_set_tmr_help(char * pChar) {dbg_set_tmr_help42,1211
void dbg_set_tmr(char * argv[], uint32_t tcpRef, void *bufRef) dbg_set_tmr48,1503
static char * dbg_set_tmr_default_help(char * pChar) {dbg_set_tmr_default_help100,3053
void dbg_set_tmr_default(char * argv[], uint32_t tcpRef, void *bufRef) dbg_set_tmr_default107,3449
void rozofs_timer_conf_dbg_init()rozofs_timer_conf_dbg_init154,4742

../../rozofs/core/rozofs_timer_conf_dbg.h,63
#define ROZOFS_TIMER_CONF_DBG_HROZOFS_TIMER_CONF_DBG_H19,677

../../rozofs/core/rozofs_tx_api.h,2485
 #define ROZOFS_TX_API_HROZOFS_TX_API_H20,683
  ROZOFS_TX_SEND =0 ,ROZOFS_TX_SEND31,856
  ROZOFS_TX_SEND_ERROR,ROZOFS_TX_SEND_ERROR32,878
  ROZOFS_TX_RECV_OK, ROZOFS_TX_RECV_OK33,902
  ROZOFS_TX_RECV_OUT_SEQ,ROZOFS_TX_RECV_OUT_SEQ34,924
  ROZOFS_TX_TIMEOUT,ROZOFS_TX_TIMEOUT35,950
  ROZOFS_TX_ENCODING_ERROR,ROZOFS_TX_ENCODING_ERROR36,971
  ROZOFS_TX_DECODING_ERROR,ROZOFS_TX_DECODING_ERROR37,999
  ROZOFS_TX_NO_CTX_ERROR,ROZOFS_TX_NO_CTX_ERROR38,1027
  ROZOFS_TX_CTX_MISMATCH,ROZOFS_TX_CTX_MISMATCH39,1053
  ROZOFS_TX_NO_BUFFER_ERROR,ROZOFS_TX_NO_BUFFER_ERROR40,1079
  ROZOFS_TX_COUNTER_MAXROZOFS_TX_COUNTER_MAX41,1108
}rozofs_tx_stats_e;rozofs_tx_stats_e42,1132
#define TX_STATS(TX_STATS46,1189
  _ROZOFS_TX_SMALL_TX_POOL =0 ,_ROZOFS_TX_SMALL_TX_POOL65,1620
  _ROZOFS_TX_LARGE_TX_POOL, _ROZOFS_TX_LARGE_TX_POOL66,1652
  _ROZOFS_TX_SMALL_RX_POOL,_ROZOFS_TX_SMALL_RX_POOL67,1681
  _ROZOFS_TX_LARGE_RX_POOL,_ROZOFS_TX_LARGE_RX_POOL68,1709
  _ROZOFS_TX_MAX_POOL_ROZOFS_TX_MAX_POOL69,1737
}rozofs_tx_buffer_pool_e;rozofs_tx_buffer_pool_e70,1759
#define ROZOFS_TX_SMALL_TX_POOL ROZOFS_TX_SMALL_TX_POOL75,1819
#define ROZOFS_TX_LARGE_TX_POOL ROZOFS_TX_LARGE_TX_POOL76,1892
#define ROZOFS_TX_SMALL_RX_POOL ROZOFS_TX_SMALL_RX_POOL77,1965
#define ROZOFS_TX_LARGE_RX_POOL ROZOFS_TX_LARGE_RX_POOL78,2038
static inline void *rozofs_tx_get_recvBuf(rozofs_tx_ctx_t *this)rozofs_tx_get_recvBuf99,2647
static inline void *rozofs_tx_clear_recvBuf_ref(rozofs_tx_ctx_t *this)rozofs_tx_clear_recvBuf_ref118,2978
static inline int rozofs_tx_get_status(rozofs_tx_ctx_t *this)rozofs_tx_get_status192,4931
static inline int rozofs_tx_get_errno(rozofs_tx_ctx_t *this)rozofs_tx_get_errno207,5220
static inline uint32_t rozofs_tx_alloc_xid(rozofs_tx_ctx_t *tx_p)rozofs_tx_alloc_xid266,6928
static inline uint32_t rozofs_tx_get_tx_idx_from_xid(uint32_t xid )rozofs_tx_get_tx_idx_from_xid287,7355
static inline int rozofs_tx_get_small_buffer_size()rozofs_tx_get_small_buffer_size300,7565
static inline int rozofs_tx_write_opaque_data(rozofs_tx_ctx_t *p,uint8_t idx,uint32_t data)rozofs_tx_write_opaque_data316,7856
static inline int rozofs_tx_read_opaque_data(rozofs_tx_ctx_t *p,uint8_t idx,uint32_t *data_p)rozofs_tx_read_opaque_data334,8269
static inline void rozofs_tx_save_xmitBuf(rozofs_tx_ctx_t *p,void *xmit_buf)rozofs_tx_save_xmitBuf353,8819
static inline uint32_t  rozofs_tx_get_transaction_id( )rozofs_tx_get_transaction_id446,11778

../../rozofs/core/rozofs_tx_common.h,6545
#define ROZOFS_TX_COMMON_HROZOFS_TX_COMMON_H20,685
typedef struct _rozofs_com_hdr_t_rozofs_com_hdr_t33,971
   uint32_t msg_len; /**< message length including the common header  */msg_len35,1006
   uint16_t family;  /**< nothbound family                            */family36,1079
   uint16_t opcode;  /**< operating opcode                            */opcode37,1152
   uint64_t transaction_id; /**< transaction reference                */transaction_id38,1225
   uint64_t sender_reference;  /**< opaque valeur, owner is sender    */sender_reference39,1298
   uint64_t receiver_reference;receiver_reference40,1371
} rozofs_com_hdr_t;rozofs_com_hdr_t42,1404
typedef struct _rozofs_tx_rw_lbg_t_rozofs_tx_rw_lbg_t44,1425
   ruc_obj_desc_t    link;          /* link to the r/w load balancing hash table */link46,1462
   fid_t             fid;                  /**< key for load balancing                 */fid47,1546
   int               storcli_idx;          /**< index of the storcli associated with the entry */   storcli_idx48,1636
} rozofs_tx_rw_lbg_t;rozofs_tx_rw_lbg_t49,1737
 #define ROZOFS_TX_OPAQUE_MAX ROZOFS_TX_OPAQUE_MAX52,1762
 typedef void (*sys_recv_pf_t)(void *tx_ctx,void *usr_param);sys_recv_pf_t54,1836
typedef struct _rozofs_tx_ctx_p_t_rozofs_tx_ctx_p_t58,1970
  ruc_obj_desc_t    link;          /* To be able to chain the MS context on any list */link60,2006
  uint32_t            index;         /* Index of the MS */index61,2094
  uint32_t            free;          /* Is the context free or allocated TRUE/FALSE */free62,2153
  uint32_t            integrity;     /* the value of this field is incremented at  each MS ctx allocation */integrity63,2240
  uint32_t       rpc_guard_timer_flg:1;  /**< assert to 1 when there is a time-out */rpc_guard_timer_flg71,2513
  uint32_t       rpc_recv_flg:1;         /**< assert to 1 when a message has been received for the context */rpc_recv_flg72,2599
  uint32_t         flag0_02:1;flag0_0274,2710
  uint32_t         flag0_03:1;flag0_0375,2741
  uint32_t         flag0_04:1;flag0_0476,2772
  uint32_t         flag0_05:1;flag0_0577,2803
  uint32_t         flag0_06:1;flag0_0678,2834
  uint32_t         flag0_07:1;flag0_0779,2865
  uint32_t         flag0_08:1;		      flag0_0880,2896
  uint32_t         flag0_09:1;flag0_0981,2935
  uint32_t         flag0_10:1;flag0_1082,2966
  uint32_t         flag0_11:1;flag0_1183,2997
  uint32_t         flag0_12:1;flag0_1284,3028
  uint32_t         flag0_13:1;flag0_1385,3059
  uint32_t         flag0_14:1;flag0_1486,3090
  uint32_t         flag0_15:1;flag0_1587,3121
  uint32_t         flag0_16:1;flag0_1688,3152
  uint32_t         flag0_17:1;flag0_1789,3183
  uint32_t         flag0_18:1;flag0_1890,3214
  uint32_t         flag0_19:1;flag0_1991,3245
  uint32_t         flag0_20:1;flag0_2092,3276
  uint32_t         flag0_21:1;flag0_2193,3307
  uint32_t         flag0_22:1;flag0_2294,3338
  uint32_t         flag0_23:1;flag0_2395,3369
  uint32_t         flag0_24:1;flag0_2496,3400
  uint32_t         flag0_25:1;flag0_2597,3431
  uint32_t         flag0_26:1;flag0_2698,3462
  uint32_t         flag0_27:1;flag0_2799,3493
  uint32_t         flag0_28:1;flag0_28100,3524
  uint32_t         flag0_29:1;flag0_29101,3555
  uint32_t         flag0_30:1;flag0_30102,3586
  uint32_t         flag0_31:1;flag0_31103,3617
  uint32_t         flag0_32:1;flag0_32104,3648
  uint32_t         flag1_01:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_01106,3680
  uint32_t         flag1_02:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_02107,3756
  uint32_t         flag1_03:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_03108,3832
  uint32_t         flag1_04:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_04109,3908
  uint32_t         flag1_05:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_05110,3984
  uint32_t         flag1_06:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_06111,4060
  uint32_t         flag1_07:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_07112,4136
  uint32_t         flag1_08:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */				      flag1_08113,4212
  uint32_t         flag1_09:1;flag1_09114,4298
  uint32_t         flag1_10:1;flag1_10115,4329
  uint32_t         flag1_11:1;flag1_11116,4360
  uint32_t         flag1_12:1;flag1_12117,4391
  uint32_t         flag1_13:1;flag1_13118,4422
  uint32_t         flag1_14:1;flag1_14119,4453
  uint32_t         flag1_15:1;flag1_15120,4484
  uint32_t         flag1_16:1;flag1_16121,4515
  uint32_t         flag1_17:1;flag1_17122,4546
  uint32_t         flag1_18:1;flag1_18123,4577
  uint32_t         flag1_19:1;flag1_19124,4608
  uint32_t         flag1_20:1;flag1_20125,4639
  uint32_t         flag1_21:1;flag1_21126,4670
  uint32_t         flag1_22:1;flag1_22127,4701
  uint32_t         flag1_23:1;flag1_23128,4732
  uint32_t         flag1_24:1;flag1_24129,4763
  uint32_t         flag1_25:1;flag1_25130,4794
  uint32_t         flag1_26:1;flag1_26131,4825
  uint32_t         flag1_27:1;flag1_27132,4856
  uint32_t         flag1_28:1; 				      flag1_28133,4887
  uint32_t         flag1_29:1;flag1_29134,4929
  uint32_t         flag1_30:1;flag1_30135,4960
  uint32_t         flag1_31:1;flag1_31136,4991
  uint32_t         flag1_32:1;flag1_32137,5022
    uint32_t       xid;           /**< current transaction ID, 0 when the context is free  */xid143,5284
    uint32_t       xid_low;       /**< lower 16 bits part of the XID, the 16 MSB context the reference of the transaction context */ xid_low144,5378
    void   *xmit_buf;      xmit_buf148,5587
    void *recv_buf;    /**< allocated by the receiver -> no to be release by the application */recv_buf152,5650
    int status;        /**< status of the operation */status153,5746
    int tx_errno;        /**< status of the operation */tx_errno154,5801
    sys_recv_pf_t  recv_cbk;   /**< receive callback */recv_cbk156,5945
    void *user_param;         /**< user param to provide upon reception */user_param157,6001
    com_tx_tmr_cell_t  rpc_guard_timer;   /**< guard timer associated with the transaction */rpc_guard_timer158,6076
    uint64_t timeStamp;timeStamp163,6299
    uint32_t opaque_usr[ROZOFS_TX_OPAQUE_MAX];   /**< opaque usr data array   */opaque_usr164,6323
   rozofs_tx_rw_lbg_t  rw_lbg;      /**< context used for r/w load balancing   */rw_lbg166,6409
} rozofs_tx_ctx_t;rozofs_tx_ctx_t167,6491

../../rozofs/core/rozofs_tx_engine.c,3627
rozofs_tx_ctx_t *rozofs_tx_context_freeListHead; /**< head of list of the free context  */rozofs_tx_context_freeListHead31,897
rozofs_tx_ctx_t rozofs_tx_context_activeListHead; /**< list of the active context     */rozofs_tx_context_activeListHead32,988
uint32_t rozofs_tx_context_count; /**< Max number of contexts    */rozofs_tx_context_count34,1078
uint32_t rozofs_tx_context_allocated; /**< current number of allocated context        */rozofs_tx_context_allocated35,1146
rozofs_tx_ctx_t *rozofs_tx_context_pfirst; /**< pointer to the first context of the pool */rozofs_tx_context_pfirst36,1235
uint32_t rozofs_tx_global_transaction_id = 0;rozofs_tx_global_transaction_id37,1327
uint64_t rozofs_tx_stats[ROZOFS_TX_COUNTER_MAX];rozofs_tx_stats39,1374
int rozofs_small_tx_xmit_count = 0;rozofs_small_tx_xmit_count43,1454
int rozofs_small_tx_xmit_size = 0;rozofs_small_tx_xmit_size44,1490
int rozofs_large_tx_xmit_count = 0;rozofs_large_tx_xmit_count45,1525
int rozofs_large_tx_xmit_size = 0;rozofs_large_tx_xmit_size46,1561
int rozofs_small_tx_recv_count = 0;rozofs_small_tx_recv_count47,1596
int rozofs_small_tx_recv_size = 0;rozofs_small_tx_recv_size48,1632
int rozofs_large_tx_recv_count = 0;rozofs_large_tx_recv_count49,1667
int rozofs_large_tx_recv_size = 0;rozofs_large_tx_recv_size50,1703
void *rozofs_tx_pool[_ROZOFS_TX_MAX_POOL];rozofs_tx_pool52,1739
#define MICROLONG(MICROLONG55,1784
#define ROZOFS_TX_DEBUG_TOPIC ROZOFS_TX_DEBUG_TOPIC56,1867
#define ROZOFS_TX_DEBUG_TOPIC2 ROZOFS_TX_DEBUG_TOPIC257,1908
void rozofs_tx_debug_show(uint32_t tcpRef, void *bufRef) {rozofs_tx_debug_show66,2252
void rozofs_tx_debug(char * argv[], uint32_t tcpRef, void *bufRef) {rozofs_tx_debug108,5398
void rozofs_tx_debug_init() {rozofs_tx_debug_init119,5809
rozofs_tx_ctx_t *rozofs_tx_getObjCtx_p(uint32_t transaction_id) {rozofs_tx_getObjCtx_p144,6252
uint32_t rozofs_tx_getObjCtx_ref(rozofs_tx_ctx_t *p) {rozofs_tx_getObjCtx_ref178,7220
void rozofs_tx_init() {rozofs_tx_init209,7837
void rozofs_tx_ctxInit(rozofs_tx_ctx_t *p, uint8_t creation) {rozofs_tx_ctxInit228,8189
rozofs_tx_ctx_t *rozofs_tx_alloc() {rozofs_tx_alloc286,9800
uint32_t rozofs_tx_createIndex(uint32_t transaction_id) {rozofs_tx_createIndex332,10935
uint32_t rozofs_tx_free_from_idx(uint32_t transaction_id) {rozofs_tx_free_from_idx387,12205
uint32_t rozofs_tx_free_from_ptr(rozofs_tx_ctx_t *p) {rozofs_tx_free_from_ptr472,14217
void rozofs_tx_timeout_CBK(void *opaque) {rozofs_tx_timeout_CBK496,14667
void rozofs_tx_stop_timer(rozofs_tx_ctx_t *pObj) {rozofs_tx_stop_timer545,16095
void rozofs_tx_start_timer(rozofs_tx_ctx_t *tx_p, uint32_t time_ms) {rozofs_tx_start_timer562,16481
typedef struct _rozofs_rpc_common_t {_rozofs_rpc_common_t695,20382
    uint32_t msg_sz; /**< size of the rpc message */msg_sz696,20420
    uint32_t xid; /**< transaction identifier */xid697,20473
} rozofs_rpc_common_t;rozofs_rpc_common_t698,20522
void rozofs_tx_recv_rpc_cbk(void *userRef, uint32_t lbg_id, void *recv_buf) {rozofs_tx_recv_rpc_cbk700,20546
void rozofs_tx_xmit_abort_rpc_cbk(void *userRef, uint32_t lbg_id, void *xmit_buf, int errcode) {rozofs_tx_xmit_abort_rpc_cbk802,23730
uint32_t rozofs_tx_get_rpc_msg_len_cbk(char *hdr_p) {rozofs_tx_get_rpc_msg_len_cbk904,26872
void * rozofs_tx_userRcvAllocBufCallBack(void *userRef, uint32_t socket_context_ref, uint32_t len) {rozofs_tx_userRcvAllocBufCallBack939,27739
uint32_t rozofs_tx_module_init(uint32_t transaction_count,rozofs_tx_module_init963,28359
int rozofs_tx_get_free_ctx_number(void){rozofs_tx_get_free_ctx_number1076,32808

../../rozofs/core/ruc_buffer_api.h,2397
#define RUC_BUFFER_API_HRUC_BUFFER_API_H20,684
#define RUC_BUF_TRC(RUC_BUF_TRC32,891
static inline uint32_t ruc_buf_poolRecover(void * poolRef)ruc_buf_poolRecover72,2904
static inline void * ruc_buf_poolCreate(uint32_t nbBuf,uint32_t bufsize)ruc_buf_poolCreate119,3835
static inline uint32_t ruc_buf_poolDelete(void * poolRef)ruc_buf_poolDelete227,6297
static inline uint32_t ruc_buf_isPoolEmpty(void * poolRef)ruc_buf_isPoolEmpty255,6829
static inline void *ruc_buf_get_pool_base_data(void * poolRef)ruc_buf_get_pool_base_data282,7411
static inline void * ruc_buf_getBuffer(void * poolRef)ruc_buf_getBuffer301,7730
static inline uint32_t ruc_buf_freeBuffer(void * bufRef)ruc_buf_freeBuffer346,8750
static inline char * ruc_buf_getPayload(void * bufRef)ruc_buf_getPayload428,10435
static inline uint32_t ruc_buf_getPayloadLen(void * bufRef)ruc_buf_getPayloadLen457,10911
static inline uint32_t ruc_buf_getMaxPayloadLen(void * bufRef)ruc_buf_getMaxPayloadLen488,11391
static inline uint32_t ruc_buf_setPayloadLen(void * bufRef,uint32_t len)ruc_buf_setPayloadLen515,11848
static inline uint32_t ruc_buf_setCallBack(void * bufRef,ruc_pf_buf_t pfct, void * par)ruc_buf_setCallBack555,12626
static inline uint32_t ruc_buf_getFreeBufferCount(void * poolRef)ruc_buf_getFreeBufferCount589,13262
static inline uint32_t ruc_buf_getInitBufferCount(void * poolRef)ruc_buf_getInitBufferCount612,13703
static inline void * ruc_buf_get_usrDestInfo(void * bufRef)ruc_buf_get_usrDestInfo646,14471
static inline void * ruc_buf_get_usrSrcInfo(void * bufRef)ruc_buf_get_usrSrcInfo687,15357
static inline uint8_t ruc_buf_get_retryCounter(void * bufRef)ruc_buf_get_retryCounter724,16005
static inline void ruc_buf_set_retryCounter(void * bufRef,uint8_t retry_counter)ruc_buf_set_retryCounter741,16410
static inline void * ruc_buf_get_opaque_ref(void * bufRef)ruc_buf_get_opaque_ref759,16826
static inline void ruc_buf_set_opaque_ref(void * bufRef,void * opaque_ref)ruc_buf_set_opaque_ref776,17236
static inline int ruc_buf_inuse_increment(void * bufRef)ruc_buf_inuse_increment792,17552
static inline int ruc_buf_inuse_decrement(void * bufRef)ruc_buf_inuse_decrement831,18202
static inline int ruc_buf_inuse_get(void * bufRef)ruc_buf_inuse_get878,18941
static inline ruc_buf_shaping_ctx_t * ruc_buffer_get_shaping_ctx(void * bufRef)ruc_buffer_get_shaping_ctx899,19306

../../rozofs/core/ruc_buffer.c,261
uint32_t ruc_buffer_trace = FALSE;ruc_buffer_trace39,994
void ruc_buf_set_trace(uint32_t flag)ruc_buf_set_trace47,1135
void * ruc_buf_poolCreate_shared(uint32_t nbBuf, uint32_t bufsize, key_t key/*,ruc_pf_buf_t init_fct*/)ruc_buf_poolCreate_shared57,1274

../../rozofs/core/ruc_buffer_debug.c,1422
#define RUC_BUFFER_DEBUG_2ND_ENTRIES_NB RUC_BUFFER_DEBUG_2ND_ENTRIES_NB23,770
#define RUC_BUFFER_DEBUG_1RST_ENTRIES_NB RUC_BUFFER_DEBUG_1RST_ENTRIES_NB24,815
typedef struct _ruc_registered_buffer_pool_t {_ruc_registered_buffer_pool_t27,862
  char *      name;name28,909
  ruc_buf_t * poolRef;poolRef29,929
} ruc_registered_buffer_pool_t;ruc_registered_buffer_pool_t30,952
ruc_registered_buffer_pool_t ** ruc_registered_buffer_pool = NULL;ruc_registered_buffer_pool32,985
static int                      ruc_registered_buffer_pool_entries=0;ruc_registered_buffer_pool_entries33,1052
static inline char * ruc_buf_poolDisplay(ruc_buf_t* poolRef, char * displayName, char * p)ruc_buf_poolDisplay43,1399
static inline char * ruc_buf_poolContentDisplay(ruc_buf_t* poolRef, char * p)ruc_buf_poolContentDisplay57,1955
#define MAX_LEN MAX_LEN78,2634
static inline char * ruc_buf_bufferContentDisplay(ruc_buf_t* poolRef, int buffIdx, char * p)ruc_buf_bufferContentDisplay79,2690
static inline ruc_buf_t * ruc_buffer_debug_get_pool_from_name(char * name) {ruc_buffer_debug_get_pool_from_name102,3433
static char * show_ruc_buffer_debug_help(char * pChar) {show_ruc_buffer_debug_help127,4186
void show_ruc_buffer_debug(char * argv[], uint32_t tcpRef, void *bufRef) {show_ruc_buffer_debug134,4589
void ruc_buffer_debug_register_pool(char * name , void * poolRef) {ruc_buffer_debug_register_pool206,7027

../../rozofs/core/ruc_buffer_debug.h,53
#define RUC_BUFFER_DEBUG_HRUC_BUFFER_DEBUG_H20,686

../../rozofs/core/ruc_buffer.h,2335
#define RUC_BUFFER_HRUC_BUFFER_H19,678
#define BUF_ALLOC BUF_ALLOC31,822
#define BUF_FREE BUF_FREE32,845
#define BUF_POOL_HEAD BUF_POOL_HEAD37,892
#define BUF_ELEM BUF_ELEM38,919
#define RUC_BUFFER_USER_ARRAY_SIZE RUC_BUFFER_USER_ARRAY_SIZE61,1558
typedef void (*ruc_pf_buf_t)(void*);ruc_pf_buf_t62,1645
typedef int (*sched_pf_buf_t)(int,void*);sched_pf_buf_t63,1682
typedef struct _ruc_buf_sched_t_ruc_buf_sched_t67,1768
   uint32_t            rsp_time;      /**< time of the tcp response */rsp_time69,1802
   uint32_t            disk_time;     /**< time of the disk */disk_time70,1873
   uint64_t            lbg_id:16;        /**< reference of the load balancing group    */lbg_id71,1936
   uint64_t            filler:48;        /**< for future usage                         */filler72,2026
   sched_pf_buf_t      sched_callBackFct;   /**< called upon buffer release      */sched_callBackFct73,2116
} ruc_buf_shaping_ctx_t;ruc_buf_shaping_ctx_t75,2201
typedef struct _ruc_buf_t_ruc_buf_t77,2227
   ruc_obj_desc_t    obj;          /**< link used for queueing the buffer on any kind of queue */obj79,2255
   uint32_t            len;          /**< max length of the payload     */len80,2353
   uint8_t             *ptr;         /**< pointer to the payload of the buffer  */ptr81,2428
   void *              opaque_ref;    /**< opaque user reference     */opaque_ref82,2511
   ruc_buf_shaping_ctx_t     shaping_ctx;  /**< traffic shaping context    */shaping_ctx83,2583
   uint32_t            retry_counter:8;  /**<buffer retry counter    */retry_counter84,2661
   uint32_t            usrLen:24;  /**< user length occupied in the payload  */usrLen85,2733
   uint32_t            bufCount;   /**< BUF_ELEM-> max payload len           */bufCount86,2813
   uint8_t             inuse;        /**< that counter permit to prevent a buffer release */inuse87,2893
   uint8_t             state;state88,2986
   uint8_t             type;type89,3016
   uint8_t           usrDestInfo[RUC_BUFFER_USER_ARRAY_SIZE];usrDestInfo90,3045
   uint8_t           usrSrcInfo[RUC_BUFFER_USER_ARRAY_SIZE];usrSrcInfo91,3107
   ruc_pf_buf_t      callBackFct;   /**< called upon buffer release      */callBackFct92,3168
  void            * callBackParam;callBackParam94,3291
} ruc_buf_t;ruc_buf_t95,3326

../../rozofs/core/ruc_common.h,1031
#define RUC_COMMON_HRUC_COMMON_H20,679
#define STARTTIMESTARTTIME40,1367
#define STOPTIMESTOPTIME42,1386
#define RUC_OK RUC_OK46,1412
#define RUC_NOK RUC_NOK47,1429
#define RUC_OBJ_SHIFT_OBJ_TYPE RUC_OBJ_SHIFT_OBJ_TYPE59,1660
#define RUC_OBJ_MASK_OBJ_IDX RUC_OBJ_MASK_OBJ_IDX60,1694
#define RUC_PDP_MASK_OBJ_IDX RUC_PDP_MASK_OBJ_IDX62,1735
#define RUC_PDP_TEID_TYPE_GGSN RUC_PDP_TEID_TYPE_GGSN63,1777
#define RUC_ALLOCATED RUC_ALLOCATED65,1820
#define RUC_FREE RUC_FREE66,1845
#define UMA_TCP_CTX_TYPE UMA_TCP_CTX_TYPE70,1898
#define RUC_TCP_SERVER_CTX_TYPE RUC_TCP_SERVER_CTX_TYPE73,1996
#define RUC_SOC_SEND RUC_SOC_SEND80,2107
#define RUC_SOC_RECV RUC_SOC_RECV81,2131
#define RUC_WOULDBLOCK RUC_WOULDBLOCK86,2199
#define RUC_DISC RUC_DISC87,2241
#define RUC_PARTIAL RUC_PARTIAL88,2303
#define UMA_AGING_IDLE UMA_AGING_IDLE93,2388
#define UMA_AGING_RUN UMA_AGING_RUN94,2414
#define UMA_AGING_AGED UMA_AGING_AGED95,2440
static inline unsigned long long ruc_rdtsc(void)ruc_rdtsc104,2597

../../rozofs/core/ruc_list.c,442
uint32_t ruc_curListIdentifier= 0;ruc_curListIdentifier32,842
uint32_t ruc_list_trace = TRUE;ruc_list_trace33,877
int ruc_list_shmid_table[4096];ruc_list_shmid_table34,909
void ruc_list_set_trace(uint32_t flag)ruc_list_set_trace41,1057
ruc_obj_desc_t *ruc_listCreate_shared(uint32_t nbElements,uint32_t size,key_t key)ruc_listCreate_shared70,1839
uint32_t ruc_listDelete_shared(ruc_obj_desc_t *phead)ruc_listDelete_shared215,5170

../../rozofs/core/ruc_list.h,3380
#define VSTK_OBJ_HVSTK_OBJ_H19,676
#define iPPU iPPU32,866
#define RUC_LIST_HEAD RUC_LIST_HEAD43,1042
#define RUC_LIST_HEAD_VD RUC_LIST_HEAD_VD44,1112
#define RUC_LIST_ELEM RUC_LIST_ELEM45,1186
typedef struct _ruc_obj_desc_t_ruc_obj_desc_t72,1871
  struct _ruc_obj_desc_t		*ps;ps74,1904
  struct _ruc_obj_desc_t		*pp;pp75,1935
  uint16_t 				eltSize;eltSize76,1966
  uint8_t		                        type;type77,1990
  uint8_t                                 usrEvtCode;usrEvtCode78,2031
  void *			        sysRef;sysRef80,2097
  uint32_t			        sysRef;sysRef82,2130
  uint32_t 				countOrObjId;countOrObjId84,2166
  uint32_t                                listId;listId85,2195
  char                  *filename;filename87,2272
ruc_obj_desc_t;ruc_obj_desc_t90,2316
#define RUC_LIST_TRC(RUC_LIST_TRC93,2334
static inline uint32_t ruc_listRecover(ruc_obj_desc_t *phead, uint32_t ReinitFlag)ruc_listRecover163,5088
static inline uint32_t ruc_listCheckHeader(ruc_obj_desc_t *phead)ruc_listCheckHeader260,7168
static inline uint32_t ruc_listCheck(ruc_obj_desc_t *phead)ruc_listCheck287,7902
static inline uint32_t ruc_listCheckObjFree(ruc_obj_desc_t *pobj)ruc_listCheckObjFree326,8514
static inline uint32_t ruc_getListId()ruc_getListId334,8667
static inline uint32_t ruc_listEltInit(ruc_obj_desc_t *p)ruc_listEltInit345,8951
static inline uint32_t ruc_listEltInitAssoc(ruc_obj_desc_t *p,void *assoc_p)ruc_listEltInitAssoc361,9207
static inline void *ruc_listGetAssoc(ruc_obj_desc_t *p)ruc_listGetAssoc369,9362
static inline void ruc_listHdrInit(ruc_obj_desc_t *phead)ruc_listHdrInit377,9473
#define ruc_listHdrInit(ruc_listHdrInit390,9774
static inline void _ruc_listHdrInit(ruc_obj_desc_t *phead,char *file,int line)_ruc_listHdrInit391,9839
static inline ruc_obj_desc_t *ruc_listCreate(uint32_t nbElements, uint32_t size)ruc_listCreate433,10954
static inline uint32_t ruc_listDelete(ruc_obj_desc_t *phead)ruc_listDelete571,14109
static inline uint32_t ruc_objInsert(ruc_obj_desc_t *phead,ruc_obj_desc_t *pobj)ruc_objInsert641,15833
static inline uint32_t ruc_objInsertTail(ruc_obj_desc_t *phead,ruc_obj_desc_t *pobj)ruc_objInsertTail705,17396
static inline uint32_t ruc_objInsertOrdered(ruc_obj_desc_t *phead,ruc_obj_desc_t *pobj)ruc_objInsertOrdered774,19047
static inline uint32_t ruc_objRemove(ruc_obj_desc_t *pobj)ruc_objRemove840,20511
static inline uint32_t ruc_objIsEmptyList(ruc_obj_desc_t *phead)ruc_objIsEmptyList886,21404
static inline ruc_obj_desc_t *ruc_objGetByObjId(ruc_obj_desc_t *phead,uint32_t objId)ruc_objGetByObjId933,22456
static inline ruc_obj_desc_t *ruc_objGetNext(ruc_obj_desc_t *phead,ruc_objGetNext989,23907
static inline ruc_obj_desc_t *ruc_objGetFirst(ruc_obj_desc_t *phead)ruc_objGetFirst1055,25403
static inline ruc_obj_desc_t *ruc_objGetRefFromIdx(ruc_obj_desc_t *phead,uint32_t idx)ruc_objGetRefFromIdx1104,26463
static inline uint32_t ruc_listMoveTail(ruc_obj_desc_t *pheadListToMove,ruc_obj_desc_t *pheadDest)ruc_listMoveTail1167,28211
static inline ruc_obj_desc_t* ruc_objGetHead(ruc_obj_desc_t*pelem)ruc_objGetHead1263,30459
static inline uint32_t ruc_objPutQueue(ruc_obj_desc_t *phead,ruc_obj_desc_t *pobj,uint8_t evt)ruc_objPutQueue1311,31601
static inline ruc_obj_desc_t *ruc_objReadQueue(ruc_obj_desc_t *phead,uint8_t *evt)ruc_objReadQueue1364,32730

../../rozofs/core/ruc_observer_api.h,287
#define RUC_OBSERVER_API_HRUC_OBSERVER_API_H19,684
typedef void (*ruc_observer_cbk) (void * userRef, void *srvParam);ruc_observer_cbk26,872
#define ruc_observer_attachEventMACRO(ruc_observer_attachEventMACRO28,940
#define ruc_observer_attachMACRO(ruc_observer_attachMACRO29,1069

../../rozofs/core/ruc_observer.c,3353
#define RUC_OBSERVER_CRUC_OBSERVER_C18,657
#define RUC_OBSERVER_NAME_MAX RUC_OBSERVER_NAME_MAX68,2475
typedef struct _ruc_observer_client_t {_ruc_observer_client_t70,2514
  ruc_obj_desc_t        link;link71,2554
  uint32_t                ref;ref72,2584
  uint32_t                srvRef;srvRef73,2615
  uint32_t                priority;priority74,2649
  uint32_t                event;event75,2685
  void                 *objRef;objRef77,2760
  ruc_observer_cbk      callBack;callBack78,2792
  char                  name[RUC_OBSERVER_NAME_MAX];name79,2826
} RUC_OBSERVER_CLIENT_T;RUC_OBSERVER_CLIENT_T80,2879
typedef struct _ruc_observer_event_t {_ruc_observer_event_t83,2906
  ruc_obj_desc_t        head; /* Head of client list */head84,2945
  ruc_obj_desc_t      * pnextCur;pnextCur85,3001
  uint32_t                event;event86,3035
} RUC_OBSERVER_EVENT_T;RUC_OBSERVER_EVENT_T87,3068
typedef struct _ruc_observer_server_t {_ruc_observer_server_t89,3093
  ruc_obj_desc_t                 link;link90,3133
  uint32_t                         ref;ref91,3172
  char                           name[RUC_OBSERVER_NAME_MAX];name92,3212
  uint32_t                         nbEvent;nbEvent93,3274
  RUC_OBSERVER_EVENT_T         * pEventTbl;pEventTbl94,3318
} RUC_OBSERVER_SERVER_T;RUC_OBSERVER_SERVER_T95,3362
uint32_t                      ruc_observer_initDone = FALSE;ruc_observer_initDone102,3429
RUC_OBSERVER_CLIENT_T     * ruc_observer_client_freeListHead = (RUC_OBSERVER_CLIENT_T*)NULL;ruc_observer_client_freeListHead105,3559
ruc_obj_desc_t            * ruc_observer_pnextCur = (ruc_obj_desc_t*) NULL;ruc_observer_pnextCur106,3652
RUC_OBSERVER_SERVER_T     ruc_observer_server_activeList;ruc_observer_server_activeList110,3831
RUC_OBSERVER_SERVER_T   * ruc_observer_server_freeListHead = (RUC_OBSERVER_SERVER_T*)NULL;ruc_observer_server_freeListHead111,3889
ruc_obj_desc_t          * ruc_observer_server_pnextCur = (ruc_obj_desc_t*) NULL;ruc_observer_server_pnextCur112,3980
uint32_t             ruc_observer_max_server=0;ruc_observer_max_server115,4063
uint32_t             ruc_observer_max_client=0;ruc_observer_max_client116,4111
char                ruc_observer_buffer[4096];ruc_observer_buffer117,4159
RUC_OBSERVER_SERVER_T *ruc_observer_getServer(uint32_t index) {ruc_observer_getServer146,4930
RUC_OBSERVER_CLIENT_T *ruc_observer_getClient(uint32_t index) {ruc_observer_getClient175,5859
void ruc_observer_updateEventCur(RUC_OBSERVER_EVENT_T  * pEvent,ruc_observer_updateEventCur199,6626
uint32_t ruc_observer_init(uint32_t maxClient, uint32_t maxServer) {ruc_observer_init222,7260
uint32_t ruc_observer_declareServer(char * name, uint32_t nbEvent) {ruc_observer_declareServer308,9632
uint32_t ruc_observer_createClient(uint32_t servRef,ruc_observer_createClient377,11579
uint32_t ruc_observer_removeClient(uint32_t cltRef) {ruc_observer_removeClient460,13791
void  ruc_observer_serverEvent(uint32_t srvRef, uint32_t event, void *srvParam)ruc_observer_serverEvent527,15439
char *ruc_observer_print_configuration_for_server(  RUC_OBSERVER_SERVER_T * pSrv,char *buf)ruc_observer_print_configuration_for_server578,16736
char *ruc_observer_print_all_conf(char *buf)ruc_observer_print_all_conf610,17670
void  ruc_observer_debug_conf()ruc_observer_debug_conf630,18197

../../rozofs/core/ruc_sockCtl_api.h,864
#define SOCKET_CTRL_API_HSOCKET_CTRL_API_H19,683
typedef uint32_t (*ruc_pf_sock_t)(void * objref, int socketid);ruc_pf_sock_t24,769
typedef struct _ruc_sockCallBack_t_ruc_sockCallBack_t26,834
   ruc_pf_sock_t  isRcvReadyFunc;isRcvReadyFunc28,871
   ruc_pf_sock_t  msgInFunc;msgInFunc29,905
   ruc_pf_sock_t  isXmitReadyFunc;isXmitReadyFunc30,934
   ruc_pf_sock_t  xmitEvtFunc;xmitEvtFunc31,969
} ruc_sockCallBack_t;ruc_sockCallBack_t32,1000
static inline uint64_t rozofs_get_ticker_us()rozofs_get_ticker_us66,1741
typedef void (*ruc_scheduler_t)(uint64_t cur_time);  ruc_scheduler_t76,1891
static inline void ruc_sockCtrl_attach_traffic_shaper(ruc_scheduler_t callback)ruc_sockCtrl_attach_traffic_shaper81,2051
static inline void ruc_sockCtrl_attach_applicative_poller(ruc_scheduler_t callback)ruc_sockCtrl_attach_applicative_poller87,2183

../../rozofs/core/ruc_tcp_client_api.h,1464
#define RUC_TCP_CLIENT_API_HRUC_TCP_CLIENT_API_H19,686
typedef struct _ruc_tcp_client_create_t_ruc_tcp_client_create_t88,2582
  uint32_t        headerSize;       /* size of the header to read                 */headerSize90,2624
  uint32_t        msgLenOffset;     /* offset where the message length fits       */msgLenOffset91,2709
  uint32_t        msgLenSize;       /* size of the message length field in bytes  */msgLenSize92,2794
  uint32_t        bufSize;         /* length of buffer (xmit and received)        */bufSize93,2879
  uma_tcp_recvCBK_t   userConnectCallBack; /* callBack when TCP connect is done         */userConnectCallBack94,2964
  uma_tcp_recvCBK_t   userRcvCallBack;   /* callback provided by the connection owner block */userRcvCallBack95,3055
  uma_tcp_discCBK_t   userDiscCallBack; /* callBack for TCP disconnection detection         */userDiscCallBack96,3150
  ruc_pf_sock_t       userRcvReadyCallBack; /* callBack for TCP receiver ready         */userRcvReadyCallBack97,3245
  uint32_t        userRef;           /* user reference that must be recalled in the callbacks */userRef98,3335
  uint32_t        IpAddr;           /* host format */IpAddr99,3432
  uint16_t	tcpDestPort;      /* host format */tcpDestPort100,3486
  uint32_t        srcIP;            /* host format */srcIP101,3533
  uint16_t	srcTcp;           /* host format */srcTcp102,3587
} ruc_tcp_client_create_t;ruc_tcp_client_create_t103,3634

../../rozofs/core/ruc_tcp_client.c,1841
#define IPPORT2STRING(IPPORT2STRING58,1388
ruc_sockCallBack_t ruc_tcp_client_callBack=ruc_tcp_client_callBack60,1537
ruc_tcp_client_t *ruc_tcp_clientfreeList= (ruc_tcp_client_t*)NULL;ruc_tcp_clientfreeList71,1771
ruc_tcp_client_t  *ruc_tcp_clientactiveList= (ruc_tcp_client_t*)NULL;ruc_tcp_clientactiveList75,1879
uint16_t ruc_tcp_clientnbContext;ruc_tcp_clientnbContext80,1979
int ruc_tcp_clientInitDone = FALSE;ruc_tcp_clientInitDone84,2033
ruc_tcp_client_t *ruc_tcp_clientgetObjRef(uint32_t ObjRef)ruc_tcp_clientgetObjRef100,2435
uint32_t  ruc_tcp_client_rcvReadyCBK(void *opaque,int socketId)ruc_tcp_client_rcvReadyCBK132,3123
uint32_t ruc_tcp_client_connectReply_CBK(void *opaque,int socketId)ruc_tcp_client_connectReply_CBK156,3916
uint32_t ruc_tcp_clientisRcvReady(void *ref,int socketId)ruc_tcp_clientisRcvReady402,10623
uint32_t ruc_tcp_clientisXmitReady(void *ref,int socketId)ruc_tcp_clientisXmitReady411,10798
uint32_t ruc_tcp_clientfake(void *ref,int socketId)ruc_tcp_clientfake419,10941
void ruc_tcp_client_receiveCBK(void *opaque,uint32_t tcpCnxRef,void *bufRef)ruc_tcp_client_receiveCBK453,11924
uint32_t ruc_tcp_client_socketCreate(ruc_tcp_client_t *pObj)ruc_tcp_client_socketCreate498,12904
void ruc_tcp_client_disc_CBK(void *opaque,uint32_t tcpCnxRef)ruc_tcp_client_disc_CBK613,16244
uint32_t ruc_tcp_client_init(uint32_t nbElements)ruc_tcp_client_init689,18306
uint32_t ruc_tcp_client_bindClient(ruc_tcp_client_create_t *pconf)ruc_tcp_client_bindClient810,21445
uint32_t ruc_tcp_client_bindClientWithSrcIp(ruc_tcp_client_create_t *pconf)ruc_tcp_client_bindClientWithSrcIp917,24485
void ruc_tcp_client_delete_connection(uint32_t clientIdx)ruc_tcp_client_delete_connection1006,26717
uint32_t ruc_tcp_client_restart_connect(uint32_t clientIdx)ruc_tcp_client_restart_connect1087,28802

../../rozofs/core/ruc_tcp_client.h,2067
#define RUC_TCP_CLIENT_HRUC_TCP_CLIENT_H19,682
#define UMA_TCP_TIMEOUT_VAL UMA_TCP_TIMEOUT_VAL32,900
#define UMA_TCP_IDLE UMA_TCP_IDLE34,948
#define UMA_TCP_ACTIVE UMA_TCP_ACTIVE35,972
#define UMA_TCP_DISCONNECTING UMA_TCP_DISCONNECTING36,997
typedef struct _ruc_tcp_client_t_ruc_tcp_client_t44,1058
  ruc_obj_desc_t            link;link46,1093
  uint32_t		    ref;ref47,1127
  uma_tcp_create_t          conf;conf51,1211
  uint32_t                    tcpSocketClient;tcpSocketClient55,1279
  void                     *tcpCnxClient;tcpCnxClient57,1379
  uint32_t                    tcpCnxIdx;tcpCnxIdx58,1421
  uint32_t                    tcpTimeOut;tcpTimeOut59,1462
  uint32_t                    tcpstate;tcpstate60,1504
  uint32_t        headerSize;       /* size of the header to read                 */headerSize64,1589
  uint32_t        msgLenOffset;     /* offset where the message length fits       */msgLenOffset65,1674
  uint32_t        msgLenSize;       /* size of the message length field in bytes  */msgLenSize66,1759
  uint32_t        bufSize;         /* length of buffer (xmit and received)        */bufSize67,1844
  uma_tcp_recvCBK_t         userConnectCallBack;   /* callBack when TCP connect is done         */userConnectCallBack68,1929
  uma_tcp_recvCBK_t         userRcvCallBack;      /* callback provided by the connection owner block */userRcvCallBack69,2028
  uma_tcp_discCBK_t         userDiscCallBack;     /* callBack for TCP disconnection detection         */userDiscCallBack70,2132
  ruc_pf_sock_t             userRcvReadyCallBack; /* callback for receiver ready */userRcvReadyCallBack71,2237
  uint32_t        userRef;           /* user reference that must be recalled in the callbacks */userRef72,2321
  uint32_t        IpAddr;IpAddr73,2418
  uint16_t	tcpDestPort;tcpDestPort74,2444
  uint16_t	srcTcp;   /* in host format */srcTcp75,2468
  uint32_t        srcIP;    /* in host format */srcIP76,2510
  uint16_t        filler;filler77,2559
} ruc_tcp_client_t;ruc_tcp_client_t79,2586

../../rozofs/core/ruc_tcpServer_api.h,736
#define RUC_TCP_SERVER_API_HRUC_TCP_SERVER_API_H26,715
#define RUC_TCP_SERVER_NAME RUC_TCP_SERVER_NAME39,893
typedef uint32_t (*ruc_tcp_server_recvCBK_t)(uint32_t userRef,ruc_tcp_server_recvCBK_t123,3249
typedef struct _ruc_tcp_server_connect_t_ruc_tcp_server_connect_t127,3370
  uint8_t                     cnxName[RUC_TCP_SERVER_NAME];       /* ascii pattern */cnxName129,3413
  ruc_tcp_server_recvCBK_t  accept_CBK;accept_CBK130,3499
  uint32_t                    userRef;userRef131,3539
  uint16_t                    tcpPort;tcpPort132,3578
  uint8_t                     priority;priority133,3617
  uint32_t                    ipAddr;ipAddr134,3657
 } ruc_tcp_server_connect_t;ruc_tcp_server_connect_t135,3695

../../rozofs/core/ruc_tcpServer.c,1281
ruc_tcp_server_t *ruc_tcp_server_freeList= (ruc_tcp_server_t*)NULL;ruc_tcp_server_freeList55,1253
ruc_tcp_server_t  *ruc_tcp_server_activeList= (ruc_tcp_server_t*)NULL;ruc_tcp_server_activeList59,1362
uint16_t ruc_tcp_server_nbContext;ruc_tcp_server_nbContext64,1463
int ruc_tcp_serverInitDone = FALSE;ruc_tcp_serverInitDone68,1518
ruc_sockCallBack_t ruc_tcp_server_callBack=ruc_tcp_server_callBack74,1607
ruc_tcp_server_t *ruc_tcp_server_getObjRef(uint32_t tcpRef)ruc_tcp_server_getObjRef103,2185
uint32_t ruc_tcp_server_createSocket_retry(uint16_t tcpPort,uint32_t ipAddr, int retry)ruc_tcp_server_createSocket_retry146,3214
uint32_t ruc_tcp_server_acceptIn(void *p,int socketId)ruc_tcp_server_acceptIn216,5087
uint32_t ruc_tcp_server_isRcvReady(void  *ref,int socketId)ruc_tcp_server_isRcvReady264,6196
uint32_t ruc_tcp_server_isXmitReady(void *ref,int socketId)ruc_tcp_server_isXmitReady273,6374
uint32_t ruc_tcp_server_xmitEvent(void *ref,int socketId)ruc_tcp_server_xmitEvent283,6553
uint32_t ruc_tcp_server_init(uint32_t nbElements)ruc_tcp_server_init327,7370
uint32_t ruc_tcp_server_connect(ruc_tcp_server_connect_t *pconnect)ruc_tcp_server_connect458,11004
uint32_t ruc_tcp_server_disconnect (uint32_t cnxRef)ruc_tcp_server_disconnect547,13844

../../rozofs/core/ruc_tcpServer.h,1150
#define RUC_TCP_SERVER_HRUC_TCP_SERVER_H24,709
#define RUC_TCP_SERVER_BACKLOG RUC_TCP_SERVER_BACKLOG35,907
typedef struct _ruc_tcp_server_t_ruc_tcp_server_t41,945
  ruc_obj_desc_t            link;          /* To be able to chain the MS context on any list */link43,980
  uint32_t                    ref;         /* Index of the context*/ref44,1076
  uint8_t                     cnxName[RUC_TCP_SERVER_NAME];       /* ascii pattern */cnxName45,1145
  uint32_t                    integrity;     /* the value of this field is incremented atintegrity46,1231
  ruc_tcp_server_recvCBK_t  accept_CBK;accept_CBK48,1358
  uint32_t                    userRef;userRef49,1398
  int			    socketId;socketId50,1437
  uint16_t                    tcpPort;tcpPort51,1459
  uint8_t                     priority;priority52,1498
  uint8_t                     filler;filler53,1538
  uint32_t                    ipAddr;ipAddr54,1576
  void*                     connectId;  /* socket controller reference */connectId56,1684
 } ruc_tcp_server_t;ruc_tcp_server_t57,1758
#define ruc_tcp_server_createSocket(ruc_tcp_server_createSocket67,1980

../../rozofs/core/ruc_timer_api.h,5487
#define VSTK_TIMERHVSTK_TIMERH19,677
typedef char              SBYTE;        /* synonym for signed character */SBYTE39,972
typedef unsigned char     UBYTE;        /* synonym for unsigned character */UBYTE40,1047
typedef short             SWORD;        /* synonym for signed short int */SWORD41,1124
typedef unsigned short    UWORD;        /* synonym for unsigned short int */UWORD42,1199
typedef long             SLWORD;        /* synonym for signed long int */SLWORD43,1276
typedef unsigned long    ULWORD;        /* synonym for unsigned long int */ULWORD44,1350
typedef unsigned long long int    ULLWORD;ULLWORD47,1495
typedef long long int    SLLWORD;SLLWORD49,1575
#define IN IN58,1772
#define OUT OUT59,1834
#define INOUT INOUT60,1897
typedef unsigned   long    timer_val_t;    /* Value of a timer */timer_val_t66,2014
#define NULL NULL70,2095
#define P_NIL P_NIL75,2133
#define TIMER_ID_NIL	TIMER_ID_NIL77,2197
#define X_NIL X_NIL78,2255
#       define TIMER_ON TIMER_ON80,2325
#       define TIMER_OFF TIMER_OFF81,2383
#       define OK OK84,2453
#       define NOK NOK87,2524
#       define   FALCON_NVAL FALCON_NVAL91,2604
    TIMER_SLOT_SIZE_32  = 32,      /* 32 entries           */TIMER_SLOT_SIZE_32106,2855
    TIMER_SLOT_SIZE_64  = 64,      /* 64 entries           */TIMER_SLOT_SIZE_64107,2917
    TIMER_SLOT_SIZE_128 = 128,     /* 128 entries           */TIMER_SLOT_SIZE_128108,2979
    TIMER_SLOT_SIZE_256 = 256      /* 256 entries          */TIMER_SLOT_SIZE_256109,3042
} TIMER_SLOT_SIZE_E ;TIMER_SLOT_SIZE_E110,3104
    TIMER_TICK_VALUE_50MS  = 50,      /* tick value = 50 ms   */TIMER_TICK_VALUE_50MS113,3142
    TIMER_TICK_VALUE_100MS  = 100,    /* tick value = 100 ms  */TIMER_TICK_VALUE_100MS114,3207
    TIMER_TICK_VALUE_250MS  = 250,    /* tick value = 250 ms  */TIMER_TICK_VALUE_250MS115,3272
    TIMER_TICK_VALUE_500MS = 500,     /* tick value = 500 ms  */TIMER_TICK_VALUE_500MS116,3337
    TIMER_TICK_VALUE_1S = 1000        /* tick value = 1s      */TIMER_TICK_VALUE_1S117,3402
} TIMER_TICK_VALUE_E ;TIMER_TICK_VALUE_E118,3467
    SOCKET_MODE_BLOCK  = 1,      /* socket blocking mode   */SOCKET_MODE_BLOCK132,3786
    SOCKET_MODE_NON_BLOCK  = 2,    /*socket non blocking mode  */SOCKET_MODE_NON_BLOCK133,3848
    SOCKET_MODE_NON_BLOCK_API  = 3    /*socket non blocking mode + API */SOCKET_MODE_NON_BLOCK_API134,3914
} TIMER_MODE_SOCKET_E ;TIMER_MODE_SOCKET_E135,3988
    TIMER_TICK_REG_RQ  = 1,    /* registration request   */TIMER_TICK_REG_RQ140,4030
    TIMER_TICK_REG_RS  = 2,    /* registration response  */TIMER_TICK_REG_RS141,4090
    TIMER_TICK_EVT      = 3    /* tick event  */TIMER_TICK_EVT142,4150
} TIMER_MSG_CODE_E ;TIMER_MSG_CODE_E143,4199
struct timer_registration_rq {timer_registration_rq146,4222
  TIMER_MSG_CODE_E	msg_code;   /* message code : TIMER_TICK_REG_RQ */msg_code147,4253
  TIMER_MODE_SOCKET_E 	socket_mode;	 /* socket mode : blocksocket_mode151,4361
  int 	tick_value;	/* wake up period in ms for timetick_value154,4474
  uint8_t 	app_id;		/* application identifier */app_id158,4596
  uint8_t 	snap_id;       	/* sub net app id */snap_id159,4645
  void (*p_fct) (void );          /* API entry point in applicationp_fct160,4693
struct timer_registration_rs{timer_registration_rs164,4813
  TIMER_MSG_CODE_E	msg_code;      	/* message code : TIMER_TICK_REG_RS */msg_code165,4843
  int 	retcode;   	        /* OK or  NOK*/retcode166,4917
struct timer_event{timer_event169,4966
  TIMER_MSG_CODE_E	msg_code;      	/* message code : TIMER_TICK_REG_RS */msg_code170,4986
struct timer_cell {timer_cell177,5160
     struct timer_cell  *p_next;    	/* pointer to next cell */p_next178,5180
     struct timer_cell  *p_prior;	/* pointer to prior cell */p_prior179,5244
     unsigned int 	 to_mod_nb;    /* modulo nb when the time-out will fail */to_mod_nb180,5306
     unsigned int 	 x_timer_head;	/* index in the timer_head table */x_timer_head181,5384
     int		period_flag;    /* ON if the timer is periodic */period_flag182,5454
  void (*p_fct_api) (void);       /* pointer to the application API */p_fct_api183,5514
     void (*p_fct) (void * param);       /* pointer to the user function calledp_fct185,5671
     void *        fct_param;    /* parameter passed to the called function */fct_param188,5880
    uint8_t      app_id;       /* network access identifier */app_id189,5959
     uint8_t      snap_id;      /* service access point identifier */snap_id190,6022
    timer_val_t to_val;	      /* saved time-out value */to_val191,6092
#define TIMER_CELL_LGTH	TIMER_CELL_LGTH194,6153
#define Cell_next	Cell_next198,6264
#define Cell_prior	Cell_prior199,6327
#define Cell_to_mod_nb Cell_to_mod_nb200,6392
#define Cell_x_head	Cell_x_head201,6464
#define Cell_period_flag Cell_period_flag202,6535
#define Cell_app_id	Cell_app_id203,6609
#define Cell_snap_id	Cell_snap_id204,6674
#define Cell_p_fct	Cell_p_fct205,6741
#define Cell_p_fct_api	Cell_p_fct_api206,6804
#define Cell_fct_param	Cell_fct_param207,6875
#define Cell_to_val	Cell_to_val208,6946
struct timer_head {timer_head214,7106
	 struct timer_cell *p_first;      /* pointer to the first timer cell */p_first215,7126
#define Head_first(Head_first220,7263
#define Head_a_cell(Head_a_cell221,7310
#define Next(Next241,7832
#define Prior(Prior242,7928
static inline uint64_t timer_get_ticker()timer_get_ticker306,9587

../../rozofs/core/ruc_timer.c,1980
typedef uint32_t uint;uint45,1380
typedef unsigned long ulong;ulong46,1403
static TICK_TAB_DESCRIPTOR_S  rcvTick ;    /* tick mgt inside application */rcvTick50,1470
TIMER_MODE_SOCKET_E    SOCKET_MODE ;SOCKET_MODE52,1566
static struct  timer_head  * p_timer_slot;	/* timer slot table */p_timer_slot54,1610
static uint	timer_slot_size;	        /* size of the timer slot table */timer_slot_size55,1676
static uint	timer_slot_size_mask;	        /* size -1 */timer_slot_size_mask56,1748
static uint	timer_slot_size_2n;	        /* size in 2^n */timer_slot_size_2n57,1804
static uint	timer_system_tick;		/* value of the system tick */timer_system_tick58,1862
static uint	ruc_timer_modulo;		/* for periodic timer       */ruc_timer_modulo59,1925
static uint 	timer_x_hand_clock;	       	/* hand clock value */timer_x_hand_clock63,2026
struct timer_cell 	 *rucTmr_curCellToDelete = P_NIL;rucTmr_curCellToDelete65,2091
struct timer_cell 	 *rucTmr_curCellProcess = P_NIL;rucTmr_curCellProcess66,2144
struct timer_cell 	 *rucTmr_p_cell_new = P_NIL;rucTmr_p_cell_new67,2196
#define Lock_timer_data(Lock_timer_data73,2249
#define Unlock_timer_data(Unlock_timer_data74,2281
void  timer_tick_write ()timer_tick_write104,2926
void  timer_tick_rcv_check ()timer_tick_rcv_check128,3444
void  ruc_timer_init (TIMER_TICK_VALUE_E timer_application_tick,ruc_timer_init161,4293
struct timer_cell *ruc_timer_alloc (ruc_timer_alloc260,7129
void ruc_timer_free (ruc_timer_free285,7851
void ruc_timer_start (struct timer_cell  *p_cell, /* timer ID = address of the cell */ruc_timer_start341,9366
void ruc_timer_stop (struct timer_cell  *p_cell)	/* timer ID = address of the cell */ruc_timer_stop378,10481
 void ruc_periodic_timer_start (struct timer_cell *p_cell, ruc_periodic_timer_start442,11931
static void timer_insert (struct timer_cell  *p_cell, /* address of the cell */timer_insert505,13654
void ruc_timer_process ()     ruc_timer_process575,15542

../../rozofs/core/ruc_timer.h,481
#define ASIG_SRV_TICK_EVT_HASIG_SRV_TICK_EVT_H20,686
typedef struct _TICK_TAB_DESCRIPTOR_S {_TICK_TAB_DESCRIPTOR_S31,989
    uint32_t   			reading_index;reading_index32,1029
    uint32_t   			writing_index;writing_index33,1062
} TICK_TAB_DESCRIPTOR_S;TICK_TAB_DESCRIPTOR_S35,1096
#define TICK_UPDATE_WRITING_INDEX(TICK_UPDATE_WRITING_INDEX49,1384
#define TICK_UPDATE_READING_INDEX(TICK_UPDATE_READING_INDEX56,1600
#define TICK_RCV_NO_EMPTY(TICK_RCV_NO_EMPTY63,1817

../../rozofs/core/ruc_timer_main.c,1599
uint64_t  ruc_timer_ticker = 0;ruc_timer_ticker40,1102
ruc_sockCallBack_t ruc_timer_callBack_InternalSock=ruc_timer_callBack_InternalSock48,1220
ruc_timer_t   ruc_timerContext;ruc_timerContext56,1427
uint32_t timer_lock_for_debug = 0;timer_lock_for_debug57,1459
 uint32_t ruc_timer_trace = TRUE;ruc_timer_trace61,1497
ruc_timer_t *ruc_timer_getObjRef()ruc_timer_getObjRef81,1862
void ruc_timer_generateTicker(ruc_timer_t *p,uint32_t evt)ruc_timer_generateTicker105,2310
uint32_t  ruc_timer_getIntSockIdxFromSocketId(ruc_timer_t *p,int socketId)ruc_timer_getIntSockIdxFromSocketId150,3344
uint32_t ruc_timer_rcvReadyInternalSock(void * timerRef,int socketId)ruc_timer_rcvReadyInternalSock183,4092
uint32_t ruc_timer_rcvMsgInternalSock(void * timerRef,int socketId)ruc_timer_rcvMsgInternalSock236,5288
uint32_t ruc_timer_xmitReadyInternalSock(void * timerRef,int socketId)ruc_timer_xmitReadyInternalSock328,7272
uint32_t ruc_timer_xmitEvtInternalSock(void * timerRef,int socketId)ruc_timer_xmitEvtInternalSock382,8435
uint32_t ruc_timer_createInternalSocket(ruc_timer_t *p)ruc_timer_createInternalSocket429,9436
uint32_t ruc_timer_deleteInternalSocket(ruc_timer_t *p)ruc_timer_deleteInternalSocket554,12882
void ruc_timer_tickReceived(ruc_timer_t *p)ruc_timer_tickReceived617,14502
uint32_t ruc_timer_threadCreate( pthread_t  *thrdId ,ruc_timer_threadCreate647,14938
uint32_t ruc_timer_moduleInit(uint32_t active)ruc_timer_moduleInit690,15724
 struct timespec  ruc_ticker;ruc_ticker729,16307
void *ruc_timer_TickerThread(void *arg)ruc_timer_TickerThread731,16338

../../rozofs/core/ruc_timer_struct.h,769
#define RUC_TIMER_STRUCT_HRUC_TIMER_STRUCT_H19,684
#define RUC_TIMER_TRC(RUC_TIMER_TRC36,903
typedef struct ruc_timer_truc_timer_t44,1125
 uint32_t     active;   /* TRUE/FALSE */active46,1154
  pthread_t           thrdId; /* of timer thread */thrdId50,1232
  int       internalSocket[2];  /* -1 if N.S */internalSocket51,1284
  void *    intSockconnectionId[2];  /* -1: connection id returned by the sock Ctrl */intSockconnectionId53,1433
} ruc_timer_t;ruc_timer_t54,1520
#define RUC_TIMER_TICK RUC_TIMER_TICK84,2472
typedef struct _ruc_timer_signalMsg_t_ruc_timer_signalMsg_t86,2501
  void * timerRef;  /* N.S */timerRef89,2585
  uint32_t signalType; /* RUC_TIMER_TICK */signalType90,2615
} ruc_timer_signalMsg_t;ruc_timer_signalMsg_t91,2659

../../rozofs/core/ruc_trace_api.h,83
#define RUC_TRACE_APIRUC_TRACE_API19,679
#define RUC_WARNING(RUC_WARNING25,748

../../rozofs/core/ruc_trace.c,1759
#define RUCCOM_WARNING_CRUCCOM_WARNING_C19,658
#define RUC_MAX_TRACE_FILENAME RUC_MAX_TRACE_FILENAME48,1180
typedef struct _ruc_trace_bin_t {_ruc_trace_bin_t49,1219
	uint8_t		appId[RUC_MAX_TRACE_FILENAME ];appId50,1253
	uint64_t		par1;par151,1295
	uint64_t		par2;par252,1312
	uint64_t		par3;par353,1329
	uint64_t		par4;par454,1346
} RUCCOM_TRACE_BIN_T;RUCCOM_TRACE_BIN_T56,1364
#define RUC_MAX_TRACE_BUF RUC_MAX_TRACE_BUF58,1387
#define RUC_MAX_WARN_FILENAME RUC_MAX_WARN_FILENAME60,1443
typedef struct _ruc_trace_warn_t {_ruc_trace_warn_t61,1496
	uint8_t		file[RUC_MAX_WARN_FILENAME];file62,1531
	uint32_t		line;line63,1570
	uint64_t		err;err64,1587
} RUCCOM_TRACE_WARN_T;RUCCOM_TRACE_WARN_T66,1604
typedef struct _ruc_trace_t {_ruc_trace_t68,1628
	uint16_t		idx;idx69,1658
	uint16_t		type;type70,1674
	uint8_t		buf[RUC_MAX_TRACE_BUF ];buf71,1691
} RUCCOM_TRACE_T;RUCCOM_TRACE_T72,1726
#define RUCCOM_MAX_TRC	RUCCOM_MAX_TRC75,1746
RUCCOM_TRACE_T 	*ruc_bufTrace_p=0;ruc_bufTrace_p85,1957
static	uint16_t		ruc_warnIdx;ruc_warnIdx87,1993
static	uint16_t		ruc_warnElt;ruc_warnElt88,2023
static	uint16_t	ruc_fatalLock;ruc_fatalLock89,2053
uint32_t          ruc_tracePrintFlag = FALSE;ruc_tracePrintFlag90,2084
uint8_t           ruc_bufAll[128];ruc_bufAll91,2130
uint8_t           ruc_bufAll2[128];ruc_bufAll292,2165
#define myFile myFile113,2611
ruc_warning(char *source, uint32_t line,uint32_t errCode)ruc_warning198,4606
ruc_trace(char *appId, uint64_t par1,uint64_t par2,uint64_t par3,uint64_t par4)ruc_trace275,6350
void ruc_traceBufInit()ruc_traceBufInit353,8165
void ruc_printoff()ruc_printoff424,9656
void ruc_printon()ruc_printon429,9710
void ruc_traceprint()ruc_traceprint465,10633

../../rozofs/core/ruc_traffic_shaping.c,1093
#define MICROLONG(MICROLONG39,1127
trshape_ctx_t storcli_traffic_shaper[TRSHAPE_MAX_CTX]; storcli_traffic_shaper46,1240
trshape_ctx_t *trshape_get_ctx_from_idx(int idx)trshape_get_ctx_from_idx51,1321
#define TRAFFIC_SHAPER_COUNTER(TRAFFIC_SHAPER_COUNTER57,1414
static char * show_traffic_shaper_help(char * pChar) {show_traffic_shaper_help58,1538
void show_traffic_shaper(char * argv[], uint32_t tcpRef, void *bufRef) show_traffic_shaper65,1861
void trshape_ctx_init(trshape_ctx_t *p, int index,uint64_t byte_time_ns)trshape_ctx_init125,3888
int trshape_schedule_queue(trshape_ctx_t *p,uint64_t cur_time)trshape_schedule_queue154,4665
int trshape_force_schedule_queue(trshape_ctx_t *p,uint64_t cur_time)trshape_force_schedule_queue256,7580
int trshape_schedule_on_response()trshape_schedule_on_response316,9047
int trshape_queue_buf(int traffic_shaper_idx,void *buf_p,trshape_queue_buf416,11433
void trshape_scheduler_entry_point(uint64_t current_time)trshape_scheduler_entry_point531,14407
void trshape_module_init(uint64_t byte_time_ns)trshape_module_init546,14743

../../rozofs/core/ruc_traffic_shaping.h,2674
#define RUC_TRAFFIC_SHAPING_HRUC_TRAFFIC_SHAPING_H20,689
#define TRSHAPE_MAX_CTX TRSHAPE_MAX_CTX37,1068
typedef struct _trshape_stats_t_trshape_stats_t39,1097
   uint64_t submit_count;   /**< number of packet submitted to the shaper */submit_count41,1131
   uint64_t enqueued_count;   /**< number of packet that has been enqueued */enqueued_count42,1208
   uint64_t dequeued_count;   /**< number of packet that has been dequeued */dequeued_count43,1286
   uint64_t forcedeq_count;   /**< number of packet that has been dequeued */forcedeq_count44,1364
   uint64_t send_violation_count;   /**< number of noempty to empty */send_violation_count45,1442
   uint64_t anticipation_count;   /**< number of time a frame is sent on next_time */anticipation_count46,1513
   uint64_t deadline_count;       /**< number of time a frame is sent on 2*next_time */deadline_count47,1599
} trshape_stats_t;trshape_stats_t48,1687
#define RUC_BYTE_QUANTUM_PERCENT_DEFAULT RUC_BYTE_QUANTUM_PERCENT_DEFAULT50,1707
 typedef struct _trshape_ctx_t_trshape_ctx_t53,1799
  ruc_obj_desc_t      link;            /**< To be able to chain the MS context on any list */link55,1832
  uint32_t            index;           /**< Index of the MS */index56,1926
  uint32_t            free;            /**< Is the context free or allocated TRUE/FALSE */free57,1989
  uint32_t            integrity;       /**< the value of this field is incremented at  each MS ctx allocation */integrity58,2080
  uint64_t            next_time;       /**< scheduler timestamp for traffic shaping  */next_time59,2193
  uint32_t            quantum_percent;         /**< percentage of byte time used for adjustement*/quantum_percent60,2281
  uint32_t            anticipation;         /**< counter incremented on xmit when "sent" is already 1*/anticipation61,2380
  uint64_t            byte_time_ns;    /**< byte time in 1/10 of nanosecond */byte_time_ns62,2484
  uint64_t            byte_time_ns_adjusted;    /**< byte time in 1/10 of nanosecond : used to evaluate the transmission time*/byte_time_ns_adjusted63,2563
  uint32_t            sent;    /**< assert to 1 when frame is sent on next_time */sent64,2691
  uint32_t            noempty2empty;    /**< assert to 1 when the queue becomes empty, cleared on resp. received */noempty2empty65,2774
  trshape_stats_t     stats;stats66,2890
} trshape_ctx_t;trshape_ctx_t67,2919
static inline void RUC_TRAFFIC_SHAPING_ADJUST_BYTE_TIME_ADD(trshape_ctx_t *p) {RUC_TRAFFIC_SHAPING_ADJUST_BYTE_TIME_ADD72,3073
static inline void RUC_TRAFFIC_SHAPING_ADJUST_BYTE_TIME_SUB(trshape_ctx_t *p) RUC_TRAFFIC_SHAPING_ADJUST_BYTE_TIME_SUB82,3452

../../rozofs/core/socketCtrl.c,5493
#define MICROLONG(MICROLONG35,1023
#define RUC_SOCKCTRL_DEBUG_TOPIC RUC_SOCKCTRL_DEBUG_TOPIC36,1106
#define RUC_SOCKCTRL_CTX_TOPIC RUC_SOCKCTRL_CTX_TOPIC37,1150
#define APP_POLLING APP_POLLING39,1200
#define APP_POLLING_OPT APP_POLLING_OPT40,1222
ruc_obj_desc_t  ruc_sockCtl_tabPrio[RUC_SOCKCTL_MAXPRIO+1];ruc_sockCtl_tabPrio48,1306
ruc_sockObj_t   *ruc_sockCtl_freeListHead= (ruc_sockObj_t*)NULL;ruc_sockCtl_freeListHead52,1408
ruc_sockObj_t   *ruc_sockCtrl_pFirstCtx = (ruc_sockObj_t*)NULL;ruc_sockCtrl_pFirstCtx53,1473
uint32_t          ruc_sockCtrl_maxConnection = 0;ruc_sockCtrl_maxConnection54,1537
fd_set  rucRdFdSet;   rucRdFdSet58,1650
fd_set  rucWrFdSet;   rucWrFdSet59,1673
fd_set  rucRdFdSetUnconditional;rucRdFdSetUnconditional60,1696
fd_set  rucWrFdSetCongested;rucWrFdSetCongested61,1729
ruc_obj_desc_t *ruc_sockctl_pnextCur;ruc_sockctl_pnextCur67,1825
int   ruc_sockctl_prioIdxCur;ruc_sockctl_prioIdxCur69,1864
uint64_t  ruc_time_prepare  = 0;ruc_time_prepare70,1894
uint64_t  ruc_count_prepare = 0;ruc_count_prepare71,1927
uint64_t  ruc_time_receive  = 0;ruc_time_receive72,1960
uint64_t  ruc_count_receive = 0;ruc_count_receive73,1993
uint32_t  ruc_sockCtrl_nb_socket_conditional= 0;ruc_sockCtrl_nb_socket_conditional74,2026
uint64_t gettimeofday_count = 0;gettimeofday_count75,2075
uint64_t gettimeofday_cycles = 0;gettimeofday_cycles76,2108
int ruc_sockCtrl_max_nr_select = 0;ruc_sockCtrl_max_nr_select77,2142
uint32_t ruc_sockCtrl_lastCpuScheduler = 0;ruc_sockCtrl_lastCpuScheduler81,2181
uint32_t ruc_sockCtrl_cumulatedCpuScheduler = 0;ruc_sockCtrl_cumulatedCpuScheduler82,2225
uint32_t ruc_sockCtrl_nbTimesScheduler = 0;ruc_sockCtrl_nbTimesScheduler83,2274
uint64_t ruc_sockCtrl_lastTimeScheduler = 0;ruc_sockCtrl_lastTimeScheduler84,2318
uint32_t ruc_sockCtrl_looptime = 0;ruc_sockCtrl_looptime85,2363
uint32_t ruc_sockCtrl_looptimeMax = 0;ruc_sockCtrl_looptimeMax86,2399
ruc_scheduler_t ruc_applicative_traffic_shaper = NULL;ruc_applicative_traffic_shaper88,2439
ruc_scheduler_t ruc_applicative_poller = NULL;ruc_applicative_poller89,2494
uint64_t ruc_applicative_poller_cycles = 0;ruc_applicative_poller_cycles90,2541
uint64_t ruc_applicative_poller_count = 0;ruc_applicative_poller_count91,2585
int socket_recv_count = 0;socket_recv_count95,2731
int socket_recv_table[FD_SETSIZE];socket_recv_table96,2758
int socket_xmit_count = 0;socket_xmit_count97,2793
int socket_xmit_table[FD_SETSIZE];socket_xmit_table98,2820
ruc_sockObj_t *socket_ctx_table[FD_SETSIZE];socket_ctx_table99,2855
int ruc_sockCtrl_max_poll_ctx = 0;ruc_sockCtrl_max_poll_ctx100,2900
ruc_obj_desc_t *ruc_sockctl_poll_pnextCur;ruc_sockctl_poll_pnextCur101,2935
uint64_t ruc_sockCtrl_poll_period = 0;   /**< period in microseconds */ ruc_sockCtrl_poll_period102,2978
uint64_t ruc_sockCtrl_nr_socket_stats[FD_SETSIZE];ruc_sockCtrl_nr_socket_stats103,3051
static char    myBuf[UMA_DBG_MAX_SEND_SIZE];myBuf106,3104
static __inline__ unsigned long long rdtsc(void)rdtsc117,3307
void ruc_sockCtrl_socket_poll()ruc_sockCtrl_socket_poll134,3679
__inline__ int ruc_sockCtrl_build_sock_table(uint64_t *fdset_p,int *socket_tab_p,int nb_sockets)ruc_sockCtrl_build_sock_table163,4693
void ruc_sockCtrl_remove_socket(int *sock_table_p,int nb_sockets,int socket_id)ruc_sockCtrl_remove_socket212,5866
void ruc_sockCtrl_ctx_show(uint32_t tcpRef, void * bufRef) {ruc_sockCtrl_ctx_show233,6426
void ruc_sockCtrl_debug_show(uint32_t tcpRef, void * bufRef) {ruc_sockCtrl_debug_show249,7192
void ruc_sockCtrl_debug(char * argv[], uint32_t tcpRef, void * bufRef) {ruc_sockCtrl_debug321,10901
void ruc_sockCtrl_ctx(char * argv[], uint32_t tcpRef, void * bufRef) {ruc_sockCtrl_ctx327,11099
static char * show_ruc_sockCtrl_conf_help(char * pChar) {show_ruc_sockCtrl_conf_help332,11292
void ruc_sockCtrl_conf(char * argv[], uint32_t tcpRef, void * bufRef) {ruc_sockCtrl_conf340,11710
void ruc_sockCtrl_show_select_stats(char * argv[], uint32_t tcpRef, void * bufRef) {ruc_sockCtrl_show_select_stats386,13378
void ruc_sockCtrl_debug_init() {ruc_sockCtrl_debug_init408,14182
void ruc_sockctl_updatePnextCur(ruc_obj_desc_t *pHead,ruc_sockctl_updatePnextCur467,16025
uint32_t ruc_sockctl_init(uint32_t maxConnection)ruc_sockctl_init513,16890
void * ruc_sockctl_connect(int socketId,ruc_sockctl_connect627,19846
uint32_t ruc_sockctl_disconnect(void * connectionId)ruc_sockctl_disconnect721,22133
void ruc_sockCtl_checkRcvBits()ruc_sockCtl_checkRcvBits794,23659
static inline void ruc_sockCtl_checkRcvAndXmitBits(int nbrSelect)ruc_sockCtl_checkRcvAndXmitBits851,25138
static inline void ruc_sockCtl_checkRcvAndXmitBits_opt(int nbrSelect)ruc_sockCtl_checkRcvAndXmitBits_opt963,28269
void ruc_sockCtl_prepareRcvBits()ruc_sockCtl_prepareRcvBits1099,31596
static inline void ruc_sockCtl_prepareRcvAndXmitBits()ruc_sockCtl_prepareRcvAndXmitBits1138,32533
void ruc_sockCtl_checkXmitBits()ruc_sockCtl_checkXmitBits1226,34753
void ruc_sockCtl_prepareXmitBits()ruc_sockCtl_prepareXmitBits1285,36057
static inline void ruc_sockCtrl_roundRobbin()ruc_sockCtrl_roundRobbin1320,36901
void rozofs_init_ticker()rozofs_init_ticker1348,37497
uint64_t rozofs_ticker_microseconds = 0;  /**< ticker in microsecond ->see gettimeofday */rozofs_ticker_microseconds1356,37659
void ruc_sockCtrl_selectWait()ruc_sockCtrl_selectWait1363,37855
void ruc_sockCtrl_clear_rcv_bit(int fd)ruc_sockCtrl_clear_rcv_bit1476,41087

../../rozofs/core/socketCtrl.h,1392
#define SOCKET_CTRL_HSOCKET_CTRL_H19,679
#define RUC_SOCKCTL_MAXPRIO RUC_SOCKCTL_MAXPRIO30,868
#define RUC_SOCKCTL_POLLCOUNT RUC_SOCKCTL_POLLCOUNT32,899
#define RUC_SOCKCTL_POLLFREQ RUC_SOCKCTL_POLLFREQ33,990
#define RUC_SOCK_MAX_NAME RUC_SOCK_MAX_NAME40,1102
typedef struct _ruc_sockObj_t_ruc_sockObj_t43,1133
   ruc_obj_desc_t   link;link45,1165
   uint32_t connectId;connectId46,1191
   char   name[RUC_SOCK_MAX_NAME];name47,1214
   int socketId;socketId48,1249
   uint32_t priority;priority49,1266
   void   *objRef;objRef51,1320
   uint32_t rcvCount;  /* number of times the rcvbit is set */rcvCount52,1339
   uint32_t xmitCount; /* number of times the xmitbit is set */xmitCount53,1402
   uint32_t processed;processed54,1466
   uint32_t lastTime;       /* cpu time in us of last processing */lastTime55,1489
   uint32_t cumulatedTime;  /* cumulated cpu time of las processings */cumulatedTime56,1557
   uint32_t nbTimes;       /* NB times it has been scheduled */nbTimes57,1629
   uint32_t lastTimeXmit;       /* cpu time in us of last processing */lastTimeXmit58,1693
   uint32_t cumulatedTimeXmit;  /* cumulated cpu time of las processings */cumulatedTimeXmit59,1765
   uint32_t nbTimesXmit;       /* NB times it has been scheduled */nbTimesXmit60,1841
   ruc_sockCallBack_t *callBack;callBack61,1909
} ruc_sockObj_t;ruc_sockObj_t62,1942

../../rozofs/core/uma_dbg_api.h,550
#define UMA_DBG_API_HUMA_DBG_API_H19,679
#define UMA_DBG_MAX_SEND_SIZE UMA_DBG_MAX_SEND_SIZE29,836
static inline char * uma_dbg_get_buffer() {return uma_dbg_temporary_buffer;}uma_dbg_get_buffer49,1401
static inline int uma_dbg_get_buffer_len() {return UMA_DBG_MAX_SEND_SIZE;}uma_dbg_get_buffer_len55,1641
typedef void (*uma_dbg_topic_function_t)(char * argv[], uint32_t tcpRef, void *bufRef);uma_dbg_topic_function_t113,3725
typedef uint32_t (*uma_dbg_catcher_function_t)(uint32_t tcpRef, void *bufRef);uma_dbg_catcher_function_t122,4310

../../rozofs/core/uma_dbg.c,4076
uint32_t   uma_dbg_initialized=FALSE;uma_dbg_initialized45,1230
char     * uma_gdb_system_name=NULL;uma_gdb_system_name46,1268
static time_t uptime=0;uptime47,1305
typedef struct uma_dbg_topic_s {uma_dbg_topic_s49,1330
  char                     * name;name50,1363
  uint16_t                   hide:1;hide51,1398
  uint16_t                   len:15;len52,1435
  uma_dbg_topic_function_t funct;funct53,1472
} UMA_DBG_TOPIC_S;UMA_DBG_TOPIC_S54,1506
#define UMA_DBG_MAX_TOPIC UMA_DBG_MAX_TOPIC56,1526
UMA_DBG_TOPIC_S uma_dbg_topic[UMA_DBG_MAX_TOPIC] = {};uma_dbg_topic57,1556
uint32_t        uma_dbg_nb_topic = 0;uma_dbg_nb_topic58,1611
uint32_t          uma_dbg_topic_initialized=FALSE;uma_dbg_topic_initialized59,1649
#define            MAX_ARG MAX_ARG61,1701
uma_dbg_catcher_function_t	uma_dbg_catcher = uma_dbg_catcher_DFT;uma_dbg_catcher63,1734
typedef struct uma_dbg_session_s {uma_dbg_session_s65,1801
  ruc_obj_desc_t            link;link66,1836
  void 		            * ref;ref67,1870
  uint32_t                    ipAddr;ipAddr68,1898
  uint16_t                    port;port69,1936
  uint32_t                    tcpCnxRef;tcpCnxRef70,1972
  void                      *recvPool;recvPool72,2061
  char                     *argv[MAX_ARG];argv73,2100
  char                      argvBuffer[2050];argvBuffer74,2143
  char                      last_valid_command[2000];last_valid_command75,2189
} UMA_DBG_SESSION_S;UMA_DBG_SESSION_S76,2243
UMA_DBG_SESSION_S *uma_dbg_freeList = (UMA_DBG_SESSION_S*)NULL;uma_dbg_freeList78,2265
UMA_DBG_SESSION_S *uma_dbg_activeList = (UMA_DBG_SESSION_S*)NULL;uma_dbg_activeList79,2329
static char rcvCmdBuffer[255];rcvCmdBuffer80,2395
char uma_dbg_temporary_buffer[UMA_DBG_MAX_SEND_SIZE];uma_dbg_temporary_buffer82,2427
#define HEXDUMP_COLS HEXDUMP_COLS98,2907
char * uma_dbg_hexdump(void *ptr, unsigned int len, char * p)uma_dbg_hexdump99,2931
int uma_dbg_run_system_cmd(char * cmd, char *result, int len) {uma_dbg_run_system_cmd151,4751
void uma_dbg_system_cmd(char * argv[], uint32_t tcpRef, void *bufRef) {uma_dbg_system_cmd183,5362
void uma_dbg_system_ps(char * argv[], uint32_t tcpRef, void *bufRef) {uma_dbg_system_ps206,6035
void uma_dbg_show_uptime(char * argv[], uint32_t tcpRef, void *bufRef) {uma_dbg_show_uptime225,6703
void uma_dbg_show_name(char * argv[], uint32_t tcpRef, void *bufRef) {  uma_dbg_show_name242,7363
void uma_dbg_show_version(char * argv[], uint32_t tcpRef, void *bufRef) {  uma_dbg_show_version257,7769
uint32_t uma_dbg_catcher_DFT(uint32_t tcpRef, void *bufRef)uma_dbg_catcher_DFT271,8214
void uma_dbg_setCatcher(uma_dbg_catcher_function_t funct)uma_dbg_setCatcher286,8531
void uma_dbg_send(uint32_t tcpCnxRef, void  *bufRef, uint8_t end, char *fmt, ... ) {uma_dbg_send302,8936
void uma_dbg_free(UMA_DBG_SESSION_S * pObj) {uma_dbg_free342,10075
UMA_DBG_SESSION_S *uma_dbg_findFromAddrAndPort(uint32_t ipAddr, uint16_t port) {uma_dbg_findFromAddrAndPort365,10827
UMA_DBG_SESSION_S *uma_dbg_findFromRef(void * ref) {uma_dbg_findFromRef394,11630
UMA_DBG_SESSION_S *uma_dbg_findFromCnxRef(uint32_t ref) {uma_dbg_findFromCnxRef423,12360
void uma_dbg_hide_topic(char * topic) {uma_dbg_hide_topic449,13043
void uma_dbg_insert_topic(int idx, char * topic, uint8_t hide, uint16_t length, uma_dbg_topic_function_t funct) {uma_dbg_insert_topic472,13689
void uma_dbg_addTopic(char * topic, uma_dbg_topic_function_t funct) {uma_dbg_addTopic479,14006
void uma_dbg_listTopic(uint32_t tcpCnxRef, void *bufRef, char * topic) {uma_dbg_listTopic551,16019
void uma_dbg_receive_CBK(void *opaque,uint32_t tcpCnxRef,void *bufRef) {uma_dbg_receive_CBK617,18071
void uma_dbg_disc_CBK(void *opaque,uint32_t tcpCnxRef) {uma_dbg_disc_CBK764,22147
uint32_t uma_dbg_accept_CBK(uint32_t userRef,int socketId,struct sockaddr * sockAddr) {uma_dbg_accept_CBK786,22583
void uma_dbg_init(uint32_t nbElements,uint32_t ipAddr, uint16_t serverPort) {uma_dbg_init870,25497
void uma_dbg_set_name( char * system_name) {uma_dbg_set_name941,27847

../../rozofs/core/uma_dbg_msgHeader.h,344
#define UMA_DBG_MSGHEADER_HUMA_DBG_MSGHEADER_H19,685
typedef struct uma_msgHeader_s {uma_msgHeader_s25,773
  uint32_t       len;len26,806
  uint8_t        end;end27,828
  uint8_t        lupsId;lupsId28,850
  uint8_t        precedence;precedence29,875
  uint8_t        filler;filler30,904
} UMA_MSGHEADER_S;UMA_MSGHEADER_S31,929

../../rozofs/core/uma_fsm_framework.c,360
#define UMA_FSM_FRAME_WORK_CUMA_FSM_FRAME_WORK_C19,658
void uma_no_execute_fsm( void *pObjRef,uma_fsm_t *p)uma_no_execute_fsm47,1244
void uma_fsm_engine_init(void 	       *pObjRef,uma_fsm_engine_init78,2081
void uma_fsm_engine_formatHist(uma_fsm_t     *pfsm,uma_fsm_engine_formatHist118,2948
void uma_fsm_engine (void *pObjRef,uma_fsm_engine147,3802

../../rozofs/core/uma_fsm_framework.h,2218
#define UMA_FSM_XXX_HUMA_FSM_XXX_H19,679
typedef void (*exec_fsm_t)(void *objPtr,void *pfsm);exec_fsm_t28,803
typedef void (*print_fsm_t)(uint8_t printState, uint32_t flag0, uint32_t flag1);print_fsm_t29,856
typedef char * (*formatHist_t) (char * buff, uint8_t printState, uint32_t flag0, uint32_t flag1);formatHist_t30,937
typedef uint32_t* (*trc_fsm_t)(void *objPtr,void *pfsm);trc_fsm_t31,1035
#define UMA_FSM_MAX_HISTORY UMA_FSM_MAX_HISTORY33,1093
typedef struct _fsm_hist_record_s_fsm_hist_record_s37,1173
   uint32_t word[2];    /* word[0] ->events: 0-31 */word39,1209
} fsm_hist_record_s;fsm_hist_record_s41,1334
#define FSM_SET(FSM_SET43,1356
#define FSM_ACTION_BEGIN FSM_ACTION_BEGIN45,1483
#define FSM_ACTION_END FSM_ACTION_END46,1539
#define FSM_TRANS_BEGIN(FSM_TRANS_BEGIN48,1599
#define FSM_TRANS_END FSM_TRANS_END49,1678
#define FSM_STATE_BEGIN(FSM_STATE_BEGIN51,1720
#define FSM_STATE_END FSM_STATE_END52,1760
typedef struct uma_fsm_tuma_fsm_t56,1831
   ruc_obj_desc_t link;  /* used to queue the FSM within the READY FSM list */link58,1858
   uint8_t   fsm_state;fsm_state59,1937
   uint8_t   fsm_active:1;  /* TRUE/FALSE */fsm_active60,1961
   uint8_t   fsm_activeAgain:1;  /* TRUE/FALSE */fsm_activeAgain61,2006
   uint8_t   fsm_action:1;   /* when TRUE the action of the state is executed */fsm_action62,2056
   uint8_t   trace;trace63,2137
   uint8_t   bit5_8:4;bit5_864,2157
   uint8_t   moduleId;         /* reference of the module under which the state machinemoduleId66,2181
   uint8_t   curHistIdx;       /* current index with the history record */curHistIdx69,2323
   fsm_hist_record_s histRec[UMA_FSM_MAX_HISTORY];  /* history buffer */histRec70,2398
   void	   *objPtr;          /* pointer to the object that owns the FSM  */objPtr71,2471
   exec_fsm_t execute_fsm;  /* entry point of the FSM code */execute_fsm72,2547
   print_fsm_t printHistRec; /* Entry point of the FSM record display */printHistRec73,2609
   formatHist_t formatHist;/* Entry point of the FSM record display */formatHist74,2682
   uint32_t  *pflags;         /* address of the event flags area (8 bytes only) */pflags75,2753
} uma_fsm_t;uma_fsm_t76,2836

../../rozofs/core/uma_fsm_history.c,580
#define UMA_FSM_HISTORY_CUMA_FSM_HISTORY_C18,657
#define UMA_FSM_NEXT_IDX(UMA_FSM_NEXT_IDX30,873
static char formatBuff[2048];formatBuff31,937
void uma_fsm_history_init(uma_fsm_t * pfsm)uma_fsm_history_init40,1305
void uma_fsm_set_trace (uma_fsm_t * pfsm, uint8_t status) {uma_fsm_set_trace61,1953
void uma_fsm_trace (uint8_t new, void * objPtr, uma_fsm_t * pfsm) {uma_fsm_trace74,2545
void uma_fsm_histDump (void * objPtr, uma_fsm_t * pfsm) {uma_fsm_histDump106,3772
char * uma_fsm_wholeHistFormat (char * buff, uma_fsm_t * pfsm) {uma_fsm_wholeHistFormat142,5025

../../rozofs/core/uma_fsm_stub.c,146
uint8_t uma_isModuleRunning(uint8_t moduleId)uma_isModuleRunning28,779
void uma_fsm_insert_ReadyQ(uma_fsm_t *pfsm)uma_fsm_insert_ReadyQ33,845

../../rozofs/core/uma_tcp.h,8614
#define UMA_TCP_HUMA_TCP_H19,675
#define UMA_TCP_TRC(UMA_TCP_TRC35,929
#define UMA_TCP_SOCKET_SIZE UMA_TCP_SOCKET_SIZE40,995
#define UMA_TCP_BUFSIZE UMA_TCP_BUFSIZE45,1071
#define UMA_TCP_XMIT_BUFCOUNT UMA_TCP_XMIT_BUFCOUNT50,1152
#define UMA_TCP_RCV_BUFCOUNT UMA_TCP_RCV_BUFCOUNT51,1186
#define UMA_MAX_TCP_XMIT_PRIO UMA_MAX_TCP_XMIT_PRIO54,1220
#define UMA_CNX_NAME_MAX UMA_CNX_NAME_MAX55,1252
#define RUC_RELC_XMIT_CREDIT_PRIO_0 RUC_RELC_XMIT_CREDIT_PRIO_059,1283
#define RUC_RELC_XMIT_CREDIT_PRIO_1 RUC_RELC_XMIT_CREDIT_PRIO_160,1323
#define UMA_XMIT_TYPE_BUFFER UMA_XMIT_TYPE_BUFFER62,1364
#define UMA_XMIT_TYPE_XMIT_ASSOC UMA_XMIT_TYPE_XMIT_ASSOC63,1400
#define UMA_TCP_CNX_EOC_THRESHOLD UMA_TCP_CNX_EOC_THRESHOLD69,1505
#define UMA_TCP_BUF_DEPLETION_COUNTER UMA_TCP_BUF_DEPLETION_COUNTER76,1616
typedef struct _uma_socket_stats_t_uma_socket_stats_t81,1702
  uint32_t  nbBufRcv;   /* number of message received */nbBufRcv83,1739
  uint64_t  nbByteRcv;   /* number of bytes received */nbByteRcv84,1796
  uint64_t  nbByteXmit;   /* number of bytes sent */nbByteXmit85,1852
  uint32_t  nbBufXmit;     /* number of messages sent */nbBufXmit86,1905
  uint32_t  nbCongested;   /* nb of congestion detected  */nbCongested87,1962
} uma_socket_stats_t;uma_socket_stats_t89,2023
typedef struct _uma_tcp_t {_uma_tcp_t95,2088
  ruc_obj_desc_t            link;          /* To be able to chain the MS context on any list */link96,2116
  uint32_t                    relcRef;         /* Index of the context*/relcRef97,2212
  uint8_t                     cnxName[UMA_CNX_NAME_MAX];       /* ascii pattern */cnxName98,2285
  uint32_t                    integrity;     /* the value of this field is incremented atintegrity99,2368
  uint32_t   sockDiscRcv:1;       /* socket disconnection */sockDiscRcv111,2690
  uint32_t   msg_in:1;		/* message available from socket */msg_in112,2751
  uint32_t   header_rcv:1;	/* header receive */header_rcv113,2811
  uint32_t   full_msg_rcv:1;      /* a full message is available */full_msg_rcv114,2859
  uint32_t   rcvBufPoolEmpty:1;   /* TRUE/FALSE */rcvBufPoolEmpty115,2927
   uint32_t   congested:1;        /* transmitter is congested */congested120,3013
   uint32_t   endOfCong:1;        /* end of congestion or transmitter ready */endOfCong121,3078
   uint32_t   sockDiscXmit:1;     /* socket disconnection */sockDiscXmit122,3157
   uint32_t   xmitErr:1;          /* error on send, not a begin of congestion */xmitErr123,3218
   uint32_t   xmitWouldBlock:1;   /* congestion detected */xmitWouldBlock124,3299
   uint32_t   xmitDone:1;         /* successful transmission */xmitDone125,3359
   uint32_t   xmitPending:1;      /* there is one xmit pending request */xmitPending126,3423
   uint32_t   xmitBufPoolEmpty:1;   /* TRUE/FALSE */xmitBufPoolEmpty130,3524
   uint32_t   xmitQprio0Empty:1;   /* TRUE/FALSE */xmitQprio0Empty131,3577
   uint32_t   xmitQprio1Empty:1;   /* TRUE/FALSE */xmitQprio1Empty132,3629
   uint32_t   xmitQprio2Empty:1;   /* TRUE/FALSE */xmitQprio2Empty133,3681
   uint32_t   xmitcredit:1;        /* FALSE if transmitCredit = 0 */xmitcredit134,3733
   uint32_t   xmitDead:1; 	 /* the transmitter is now dead */xmitDead135,3802
   uint32_t   rcvLock:1;           /* the receiver is locked waiting fro xmitdead */rcvLock136,3864
   uint32_t   xmitReset:1;         /* reset of the xmit FSM */xmitReset137,3949
   uint32_t   rcvReset:1;		 /* reset of the rcv FSM */rcvReset138,4012
   uint32_t   xmitRestart:1;       /* restart of the xmit FSM */xmitRestart139,4067
   uint32_t   rcvRestart:1;        /* restart of the rcv FSM */rcvRestart140,4132
   uint32_t   flag0_24:1;flag0_24141,4196
   uint32_t   flag0_25:1;flag0_25142,4222
   uint32_t   flag0_26:1;flag0_26143,4248
   uint32_t   flag0_27:1;flag0_27144,4274
   uint32_t   flag0_28:1;flag0_28145,4300
   uint32_t   flag0_29:1;flag0_29146,4326
   uint32_t   flag0_30:1;flag0_30147,4352
   uint32_t   flag0_31:1;flag0_31148,4378
   uint32_t   flag0_32:1;flag0_32149,4404
   uint32_t   flag1_01:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_01151,4431
   uint32_t   flag1_02:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_02152,4502
   uint32_t   flag1_03:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_03153,4573
   uint32_t   flag1_04:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_04154,4644
   uint32_t   flag1_05:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_05155,4715
   uint32_t   flag1_06:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_06156,4786
   uint32_t   flag1_07:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_07157,4857
   uint32_t   flag1_08:1;/* FLAG 1 01-08 ARE RESERVED FOR FSM STATE */flag1_08158,4928
   uint32_t   flag1_09:1;flag1_09159,4999
   uint32_t   flag1_10:1;flag1_10160,5025
   uint32_t   flag1_11:1;flag1_11161,5051
   uint32_t   flag1_12:1;flag1_12162,5077
   uint32_t   flag1_13:1;flag1_13163,5103
   uint32_t   flag1_14:1;flag1_14164,5129
   uint32_t   flag1_15:1;flag1_15165,5155
   uint32_t   flag1_16:1;flag1_16166,5181
   uint32_t   flag1_17:1;flag1_17167,5207
   uint32_t   flag1_18:1;flag1_18168,5233
   uint32_t   flag1_19:1;flag1_19169,5259
   uint32_t   flag1_20:1;flag1_20170,5285
   uint32_t   flag1_21:1;flag1_21171,5311
   uint32_t   flag1_22:1;flag1_22172,5337
   uint32_t   flag1_23:1;flag1_23173,5363
   uint32_t   flag1_24:1;flag1_24174,5389
   uint32_t   flag1_25:1;flag1_25175,5415
   uint32_t   flag1_26:1;flag1_26176,5441
   uint32_t   flag1_27:1;flag1_27177,5467
   uint32_t   flag1_28:1;flag1_28178,5493
   uint32_t   flag1_29:1;flag1_29179,5519
   uint32_t   flag1_30:1;flag1_30180,5545
   uint32_t   flag1_31:1;flag1_31181,5571
   uint32_t   flag1_32:1;flag1_32182,5597
  void    *rcvBufRef;  /* reference of the current receive buffer */rcvBufRef188,5751
  uint32_t  nbRead;     /* number of byte read */nbRead189,5820
  uint32_t  nbToRead;   /* number of byte to read */nbToRead190,5870
   uint16_t  transmitCredit;transmitCredit195,5973
   uint16_t  timeCredit;timeCredit197,6003
   uint32_t  timerRef;timerRef198,6028
   uint32_t  nbSent;nbSent199,6051
   void    *xmitBufRefCur;xmitBufRefCur201,6109
   uint8_t   moduleId;      /* module identifier for running fsm */moduleId202,6136
   uint8_t   creditPrio0;creditPrio0203,6204
   uint8_t   creditPrio1;creditPrio1204,6230
   uint8_t   prio;              /* xmit priority */prio209,6297
   uint8_t   xmitBufRefType;    /* buffer or buffer allocated request:xmitBufRefType210,6349
   uint8_t   eocCounter;        /* Counter of end of congestion */eocCounter214,6549
   void    *xmitBufRef;        /* reference of the xmit element */xmitBufRef215,6616
   uma_socket_stats_t  stats;stats223,6796
  void          *xmitPoolOrigin;     /*current pool reference */xmitPoolOrigin230,7026
  void         *xmitPoolRef;        /* head of the current xmit buffer pool */xmitPoolRef231,7091
  void          *rcvPoolOrigin;     /*current pool reference */rcvPoolOrigin238,7322
  void          *rcvBufHead;        /* it could be either the reference ofrcvBufHead239,7386
  uint32_t        headerSize;       /* size of the header to read                 */headerSize248,7649
  uint32_t        msgLenOffset;     /* offset where the message length fits       */msgLenOffset249,7734
  uint32_t        msgLenSize;       /* size of the message length field in bytes  */msgLenSize250,7819
  uint32_t        bufSize;         /* length of buffer (xmit and received)        */bufSize251,7904
  uma_tcp_recvCBK_t   userRcvCallBack;   /* callback provided by the connection owner block */userRcvCallBack252,7989
  uma_tcp_discCBK_t   userDiscCallBack; /* callBack for TCP disconnection detection         */userDiscCallBack253,8084
  ruc_pf_sock_t   userRcvReadyCallBack; /* callBack for receiver ready         */userRcvReadyCallBack254,8179
  void          *userRef;           /* user reference that must be recalled in the callbacks */userRef257,8367
  int           socketRef;socketRef258,8463
  uint32_t        IPaddr;IPaddr259,8490
  void        *connectionId;   /* reference of the socket controller */connectionId261,8599
  int           depletionCounter;depletionCounter265,8704
 ruc_obj_desc_t xmitList[UMA_MAX_TCP_XMIT_PRIO]; /* pending xmit list */xmitList270,8792
  uma_fsm_t  xmitFsm;xmitFsm275,8889
  uma_fsm_t  rcvFsm;rcvFsm276,8911
}  uma_tcp_t;uma_tcp_t278,8933
char * tcpFlagBits0[32] = {tcpFlagBits0281,8970

../../rozofs/core/uma_tcp_main_api.h,1988
#define UMA_TCP_MAIN_API_HUMA_TCP_MAIN_API_H19,684
typedef void (*uma_tcp_recvCBK_t)(void *userRef,uint32_t tcpCnxRef,void *bufRef);uma_tcp_recvCBK_t54,1474
typedef void (*uma_tcp_discCBK_t)(void *userRef,uint32_t tcpRef);uma_tcp_discCBK_t55,1556
typedef void (*uma_xmit_CBK_t)(uint32_t userRef,void * buffer,uint8_t status);uma_xmit_CBK_t56,1622
typedef void (*uma_mon_txt_cbk) (char * topic, char *fmt, ... ) ;uma_mon_txt_cbk59,1703
typedef struct _uma_tcp_create_t_uma_tcp_create_t122,3360
  uint32_t        headerSize;       /* size of the header to read                 */headerSize124,3395
  uint32_t        msgLenOffset;     /* offset where the message length fits       */msgLenOffset125,3480
  uint32_t        msgLenSize;       /* size of the message length field in bytes  */msgLenSize126,3565
  uint32_t        bufSize;         /* length of buffer (xmit and received)        */bufSize127,3650
  uma_tcp_recvCBK_t   userRcvCallBack;   /* callback provided by the connection owner block */userRcvCallBack128,3735
  uma_tcp_discCBK_t   userDiscCallBack; /* callBack for TCP disconnection detection         */userDiscCallBack129,3830
  ruc_pf_sock_t       userRcvReadyCallBack; /* NULL for default callback                    */userRcvReadyCallBack130,3925
  void          *userRef;           /* user reference that must be recalled in the callbacks */userRef132,4125
  int           socketRef;socketRef133,4221
  uint32_t        IPaddr;IPaddr134,4248
  void        *xmitPool; /* user pool reference or -1 */xmitPool137,4410
  void        *recvPool; /* user pool reference or -1 */recvPool138,4467
} uma_tcp_create_t;uma_tcp_create_t139,4524
typedef struct _uma_xmit_assoc_t_uma_xmit_assoc_t401,13429
  ruc_obj_desc_t            link;link403,13464
  uint32_t		    userRef;userRef404,13498
  uma_xmit_CBK_t            xmitCall;   /* xmit call back when buffer is ready */xmitCall405,13523
} uma_xmit_assoc_t;uma_xmit_assoc_t406,13605

../../rozofs/core/uma_tcp_main.c,3452
#define UMA_TCP_MAIN_CUMA_TCP_MAIN_C19,658
typedef struct _uma_tcp_socketName_t_uma_tcp_socketName_t59,1398
   uint8_t  name[16];name61,1437
   uint32_t priority;priority62,1459
   ruc_sockCallBack_t *pCallBack;pCallBack63,1481
} uma_tcp_socketName_t;uma_tcp_socketName_t64,1515
uma_tcp_t *uma_tcp_freeList= (uma_tcp_t*)NULL;uma_tcp_freeList74,1627
uma_tcp_t  *uma_tcp_activeList= (uma_tcp_t*)NULL;uma_tcp_activeList78,1715
uint16_t uma_tcp_nbContext;uma_tcp_nbContext83,1795
int uma_tcpInitDone = FALSE;uma_tcpInitDone87,1843
ruc_sockCallBack_t uma_tcp_callBack=uma_tcp_callBack92,1924
uma_tcp_socketName_t uma_tcp_sockNameAndPriorityTab[] ={uma_tcp_sockNameAndPriorityTab103,2063
uint32_t uma_tcp_trace = FALSE;uma_tcp_trace107,2187
uma_mon_txt_cbk uma_tcp_monTxtCbk = uma_tcp_nullMonTxtCbk;uma_tcp_monTxtCbk110,2280
void uma_tcp_no_recvCBK(uint32_t userRef,uint32_t bufRef)uma_tcp_no_recvCBK120,2471
void uma_tcp_no_discCBK(uint32_t userRef)uma_tcp_no_discCBK125,2535
uma_tcp_t *uma_tcp_getObjRef(uint32_t tcpRef)uma_tcp_getObjRef142,2940
uint32_t uma_tcp_rcvReady(void *opaque,int socketId)uma_tcp_rcvReady170,3637
uint32_t uma_tcp_rcvMsg(void *opaque,int socketId)uma_tcp_rcvMsg209,4422
uint32_t uma_tcp_xmitReady(void *opaque,int socketId)uma_tcp_xmitReady241,5021
uint32_t uma_tcp_xmitEvt(void * opaque,int socketId)uma_tcp_xmitEvt274,5743
void uma_tcp_purge()uma_tcp_purge320,6552
void uma_tcp_sockDiscAssert(uma_tcp_t *pObj)uma_tcp_sockDiscAssert332,6741
void uma_tcp_sockResetAssert(uma_tcp_t *pObj)uma_tcp_sockResetAssert342,6931
void uma_tcp_sockRestartAssert(uma_tcp_t *pObj)uma_tcp_sockRestartAssert352,7116
void  uma_tcp_fsm_relc_tcpUpAssert(uma_tcp_t *pObj)uma_tcp_fsm_relc_tcpUpAssert362,7307
uint32_t uma_tcp_tuneTcpSocket(int socketId)uma_tcp_tuneTcpSocket386,7843
void uma_tcp_disconnect( uma_tcp_t *p)uma_tcp_disconnect499,10309
void uma_tcp_endOfFsmDeletion( uma_tcp_t *p)uma_tcp_endOfFsmDeletion569,11513
void uma_tcp_contextInit(uma_tcp_t *pObj)uma_tcp_contextInit626,12623
void uma_tcp_contextCreate(uma_tcp_t *pObj)uma_tcp_contextCreate743,15460
uint32_t uma_tcp_init(uint32_t nbElements)uma_tcp_init841,17771
uint32_t uma_tcp_create(uma_tcp_create_t *pconf)uma_tcp_create983,21570
uint32_t uma_tcp_create_rcvRdy(uma_tcp_create_t *pconf)uma_tcp_create_rcvRdy1077,23913
uint32_t uma_tcp_create_rcvRdy_bufPool(uma_tcp_create_t *pconf)uma_tcp_create_rcvRdy_bufPool1172,26453
uint32_t uma_tcp_deleteReq(uint32_t tcpIdx)uma_tcp_deleteReq1271,29041
uint32_t uma_tcp_createTcpConnection(uint32_t tcpIdx, char * name)uma_tcp_createTcpConnection1327,30602
uint32_t uma_tcp_updateTcpConnection(uint32_t tcpIdx,int socketId, char * name)uma_tcp_updateTcpConnection1431,33386
uint32_t uma_tcp_sendSocket(uint32_t tcpIdx,void *xmitBufRef,uint8_t prio)uma_tcp_sendSocket1551,36353
uint32_t uma_tcp_sendSocketNoBuf(uint32_t tcpIdx,uma_xmit_assoc_t *pAssoc,uint8_t prio)uma_tcp_sendSocketNoBuf1636,38597
uint32_t uma_tcp_SchangePrioXmitBuf(uint32_t tcpIdx,uma_tcp_SchangePrioXmitBuf1687,39844
uint32_t uma_tcp_isReceivePoolEmpty(uint32_t tcpIdx)uma_tcp_isReceivePoolEmpty1724,40808
void *uma_tcp_getBufferFromXmitPool(uint32_t tcpIdx)uma_tcp_getBufferFromXmitPool1769,41901
void uma_tcp_declareMonTxtCbk(uma_mon_txt_cbk cbk)uma_tcp_declareMonTxtCbk1816,42933
void uma_tcp_nullMonTxtCbk (char * topic, char *fmt, ... ) {}uma_tcp_nullMonTxtCbk1829,43318

../../rozofs/core/uma_tcp_rcvFsm.c,1511
#define STATE_BEGIN STATE_BEGIN54,1241
#define STATE_WAIT_HEADER STATE_WAIT_HEADER55,1264
#define STATE_HEADER_READING STATE_HEADER_READING56,1292
#define STATE_PAYLOAD_READING STATE_PAYLOAD_READING57,1323
#define STATE_WAITPAYLOAD STATE_WAITPAYLOAD58,1355
#define STATE_MESSAGE_RECEIVED STATE_MESSAGE_RECEIVED59,1383
#define STATE_DISCONNECTING STATE_DISCONNECTING60,1416
#define STATE_DISCONNECTED STATE_DISCONNECTED61,1446
#define STATE_BUFFER_DEPLETION STATE_BUFFER_DEPLETION62,1475
#define STATE_DELETING STATE_DELETING63,1508
#define STATE_DELETED STATE_DELETED64,1534
char * tcp_rcvFsm_state2String (int x) {tcp_rcvFsm_state2String75,2002
void uma_tcp_rcvFsm_printHistRec( uint8_t printState, uint32_t flag0, uint32_t flag1) {uma_tcp_rcvFsm_printHistRec102,3078
void uma_tcp_eval_rcv_otherFlags(uma_tcp_t *pObj)uma_tcp_eval_rcv_otherFlags148,4050
uint32_t uma_tcp_extract_rcvMsgLen(char *pbuf,uint32_t offset,uint32_t fieldLen)uma_tcp_extract_rcvMsgLen160,4310
uint32_t uma_tcp_rcvFsm_begin(uma_tcp_t *pObj)uma_tcp_rcvFsm_begin192,4978
void uma_tcp_rcvFsm_msgInAssert(uma_tcp_t *pObj)uma_tcp_rcvFsm_msgInAssert203,5134
uint32_t uma_tcp_readSocket  (uma_tcp_t *pObj,uma_tcp_readSocket214,5256
uint32_t uma_tcp_rcvFsm_check_bufferDepletion(uma_tcp_t *pObj)uma_tcp_rcvFsm_check_bufferDepletion325,7872
void uma_tcp_rcvFsm_execute(uma_tcp_t *pObj,uma_tcp_rcvFsm_execute345,8323
void uma_tcp_rcvFsm_init(uma_tcp_t *ObjRef,uma_fsm_t *pfsm)uma_tcp_rcvFsm_init760,18645

../../rozofs/core/uma_tcp_xmitFsm.c,1755
#define STATE_BEGIN STATE_BEGIN56,1255
#define STATE_CURRENT STATE_CURRENT57,1278
#define STATE_WAIT_CREDIT STATE_WAIT_CREDIT58,1302
#define STATE_SENDING STATE_SENDING59,1330
#define STATE_CONGESTED STATE_CONGESTED60,1354
#define STATE_UPDATE_CREDIT STATE_UPDATE_CREDIT61,1380
#define STATE_END_OF_CONG STATE_END_OF_CONG62,1410
#define STATE_DISCONNECTED STATE_DISCONNECTED63,1438
#define STATE_DELETED STATE_DELETED64,1467
char * tcp_xmitFsm_state2String (int x) {tcp_xmitFsm_state2String79,1924
void uma_tcp_xmitFsm_printHistRec( uint8_t printState, uint32_t flag0, uint32_t flag1) {uma_tcp_xmitFsm_printHistRec102,2844
void uma_tcp_updateXmitCredit(uma_tcp_t *pObj)uma_tcp_updateXmitCredit149,3796
void uma_tcp_eval_xmit_otherFlags(uma_tcp_t *pObj)uma_tcp_eval_xmit_otherFlags174,4328
void uma_tcp_xmitPendingAssert(uma_tcp_t *pObj,uma_tcp_xmitPendingAssert199,4940
void uma_tcp_xmitBufferReqPendingAssert(uma_tcp_t *pObj,uma_tcp_xmitBufferReqPendingAssert220,5472
void uma_tcp_xmit_endOfCongAssert(uma_tcp_t *pObj)uma_tcp_xmit_endOfCongAssert236,5952
uint32_t uma_tcp_fsm_xmit_create(uma_tcp_t *pObj)uma_tcp_fsm_xmit_create244,6077
void * uma_tcp_xmitGetBuffer(uma_tcp_t *pObj)uma_tcp_xmitGetBuffer255,6372
void * ruc_relcXmitPendingRead(uma_tcp_t *pObj,uint8_t prio)ruc_relcXmitPendingRead302,7376
void ruc_relcXmitPendingInsert( uma_tcp_t *pObj)ruc_relcXmitPendingInsert363,8768
void ruc_relci_purgeTransmitQ(uma_tcp_t *pObj)ruc_relci_purgeTransmitQ375,9038
void ruc_relci_privateSend(uma_tcp_t *pObj)ruc_relci_privateSend409,9818
 void uma_tcp_xmitFsm_execute(uma_tcp_t *pObj,uma_tcp_xmitFsm_execute501,11556
void uma_tcp_xmitFsm_init(uma_tcp_t *ObjRef,uma_fsm_t *pfsm)uma_tcp_xmitFsm_init949,22867

../../rozofs/core/uma_well_known_ports_api.h,715
#define UMA_WELL_KNOWN_PORTS_API_HUMA_WELL_KNOWN_PORTS_API_H19,692
#define UMA_MONITOR_PORT UMA_MONITOR_PORT25,762
#define UMA_DBG_SERVER_PORT_IGPU UMA_DBG_SERVER_PORT_IGPU29,826
#define UMA_DBG_SERVER_PORT_UNCPS UMA_DBG_SERVER_PORT_UNCPS30,871
#define UMA_DBG_SERVER_PORT_PILOT UMA_DBG_SERVER_PORT_PILOT31,916
#define UMA_DBG_SERVER_PORT_BSSGP_OAM UMA_DBG_SERVER_PORT_BSSGP_OAM32,961
#define UMA_DBG_SERVER_PORT_UOBS UMA_DBG_SERVER_PORT_UOBS33,1006
#define ROZOFS_DBG_SERVER_PORT_STORAGE_BASE ROZOFS_DBG_SERVER_PORT_STORAGE_BASE34,1051
#define ROZOFS_DBG_SERVER_PORT_EXPORTD_BASE ROZOFS_DBG_SERVER_PORT_EXPORTD_BASE35,1107
#define ROZOFS_DBG_SERVER_TEST_BASE ROZOFS_DBG_SERVER_TEST_BASE36,1163

../../rozofs/rpc/eclient.c,2490
#define _XOPEN_SOURCE _XOPEN_SOURCE20,679
 uint32_t exportd_configuration_file_hash = 0; /**< hash value of the configuration file */exportd_configuration_file_hash36,942
int exportclt_initialize(exportclt_t * clt, const char *host, char *root,int site_number,exportclt_initialize38,1035
void exportclt_release(exportclt_t * clt) {exportclt_release218,6691
int exportclt_stat(exportclt_t * clt, ep_statfs_t * st) {exportclt_stat239,7205
int exportclt_lookup(exportclt_t * clt, fid_t parent, char *name,exportclt_lookup278,8330
int exportclt_getattr(exportclt_t * clt, fid_t fid, mattr_t * attrs) {exportclt_getattr322,9616
int exportclt_setattr(exportclt_t * clt, fid_t fid, mattr_t * attrs, int to_set) {exportclt_setattr364,10846
int exportclt_readlink(exportclt_t * clt, fid_t fid, char *link) {exportclt_readlink407,12182
int exportclt_link(exportclt_t * clt, fid_t inode, fid_t newparent, char *newname, mattr_t * attrs) {exportclt_link450,13411
int exportclt_mknod(exportclt_t * clt, fid_t parent, char *name, uint32_t uid,exportclt_mknod495,14769
int exportclt_mkdir(exportclt_t * clt, fid_t parent, char *name, uint32_t uid,exportclt_mkdir543,16174
int exportclt_unlink(exportclt_t * clt, fid_t pfid, char *name, fid_t * fid) {exportclt_unlink591,17579
int exportclt_rmdir(exportclt_t * clt, fid_t pfid, char *name, fid_t * fid) {exportclt_rmdir635,18832
int exportclt_symlink(exportclt_t * clt, char *link, fid_t parent, char *name,exportclt_symlink679,20082
int exportclt_rename(exportclt_t * clt, fid_t parent, char *name, fid_t newparent, char *newname, fid_t * fid) {exportclt_rename725,21416
dist_t * exportclt_read_block(exportclt_t * clt, fid_t fid, uint64_t off, uint32_t len, int64_t * length) {exportclt_read_block813,23891
int64_t exportclt_write_block(exportclt_t * clt, fid_t fid, bid_t bid, uint32_t n, dist_t d, uint64_t off, uint32_t len) {exportclt_write_block899,26484
int exportclt_readdir(exportclt_t * clt, fid_t fid, uint64_t * cookie, child_t ** children, uint8_t * eof) {exportclt_readdir945,27876
int exportclt_setxattr(exportclt_t * clt, fid_t fid, char * name, void* value,exportclt_setxattr1085,31647
int exportclt_getxattr(exportclt_t * clt, fid_t fid, char * name, void * value,exportclt_getxattr1132,32990
int exportclt_removexattr(exportclt_t * clt, fid_t fid, char * name) {exportclt_removexattr1183,34540
int exportclt_listxattr(exportclt_t * clt, fid_t fid, char * list,exportclt_listxattr1226,35732

../../rozofs/rpc/eclient.h,1396
#define _ECLIENT_H_ECLIENT_H21,678
typedef struct mstorage {mstorage32,884
    char host[ROZOFS_HOSTNAME_MAX];host33,910
    sclient_t sclients[STORAGE_NODE_PORTS_MAX];sclients34,946
    sid_t sids[STORAGES_MAX_BY_STORAGE_NODE];sids35,994
    cid_t cids[STORAGES_MAX_BY_STORAGE_NODE];cids36,1040
    uint8_t sclients_nb;sclients_nb37,1086
    int     lbg_id;           /**< load balancing group reference */lbg_id38,1111
    int     thread_started;   /**< asserted to 1 when the connect_storage is started */thread_started39,1180
    sid_t sids_nb;sids_nb40,1268
    list_t list;list41,1287
} mstorage_t;mstorage_t42,1304
typedef struct exportclt {exportclt44,1319
    char host[ROZOFS_HOSTNAME_MAX];host45,1346
    char *root;root46,1382
    char *passwd;passwd47,1398
    eid_t eid;eid48,1416
    list_t storages; // XXX: Need a lock?storages49,1431
    uint8_t layout; // Layout for this exportlayout50,1473
    uint32_t listen_port; /**< listening port of the exportd for regular service */listen_port51,1519
    uint32_t bsize; // Block size from enum ROZOFS_BSIZE_Ebsize52,1603
    fid_t rfid;rfid53,1662
    uint32_t bufsize;bufsize54,1678
    uint32_t min_read_size;min_read_size55,1700
    uint32_t retries;retries56,1728
    rpcclt_t rpcclt;rpcclt57,1750
    struct timeval timeout;timeout58,1771
} exportclt_t;exportclt_t59,1799

../../rozofs/rpc/eclient_reload.c,243
#define _XOPEN_SOURCE _XOPEN_SOURCE20,679
int exportclt_reload(exportclt_t * clt, const char *host, char *root,exportclt_reload38,952
int exportclt_reload_check_mstorage(ep_mount_ret_t *ret_mount_p)exportclt_reload_check_mstorage94,2441

../../rozofs/rpc/epclient.c,303
int ep_client_initialize(ep_client_t *clt) {ep_client_initialize28,794
void ep_client_release(ep_client_t *clt) {ep_client_release45,1150
int ep_client_get_profiler(ep_client_t *clt, epp_profiler_t *p) {ep_client_get_profiler51,1289
int ep_client_clear(ep_client_t *clt) {ep_client_clear77,2082

../../rozofs/rpc/epclient.h,268
#define _EPCLIENT_H_EPCLIENT_H21,678
typedef struct ep_client {ep_client30,793
    char host[ROZOFS_HOSTNAME_MAX];host31,820
    uint32_t port;port32,856
    uint16_t timeout;timeout33,875
    rpcclt_t rpcclt;rpcclt34,897
} ep_client_t;ep_client_t35,918

../../rozofs/rpc/epprotoclt.c,241
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,219
epp_null_1(void *argp, CLIENT *clnt)epp_null_114,270
epp_get_profiler_1(void *argp, CLIENT *clnt)epp_get_profiler_129,601
epp_clear_1(void *argp, CLIENT *clnt)epp_clear_144,966

../../rozofs/rpc/epproto.h,2379
#define _EPPROTO_H_RPCGEN_EPPROTO_H_RPCGEN7,101
enum epp_status_t {epp_status_t18,219
	EPP_SUCCESS = 0,EPP_SUCCESS19,239
	EPP_FAILURE = 1,EPP_FAILURE20,257
typedef enum epp_status_t epp_status_t;epp_status_t22,278
struct epp_status_ret_t {epp_status_ret_t24,319
	epp_status_t status;status25,345
		int error;error27,376
	} epp_status_ret_t_u;epp_status_ret_t_u28,389
typedef struct epp_status_ret_t epp_status_ret_t;epp_status_ret_t30,415
struct epp_estat_t {epp_estat_t32,466
	uint32_t eid;eid33,487
	uint32_t vid;vid34,502
	uint32_t bsize;bsize35,517
	uint64_t blocks;blocks36,534
	uint64_t bfree;bfree37,552
	uint64_t files;files38,569
	uint64_t ffree;ffree39,586
typedef struct epp_estat_t epp_estat_t;epp_estat_t41,606
struct epp_sstat_t {epp_sstat_t43,647
	uint16_t cid;cid44,668
	uint16_t sid;sid45,683
	uint8_t status;status46,698
	uint64_t size;size47,715
	uint64_t free;free48,731
typedef struct epp_sstat_t epp_sstat_t;epp_sstat_t50,750
struct epp_vstat_t {epp_vstat_t52,791
	uint16_t vid;vid53,812
	uint16_t georep;georep54,827
	uint16_t bsize;bsize55,845
	uint64_t bfree;bfree56,862
	uint64_t blocks;blocks57,879
	uint32_t nb_storages;nb_storages58,897
	epp_sstat_t sstats[2048];sstats59,920
typedef struct epp_vstat_t epp_vstat_t;epp_vstat_t61,950
struct epp_profiler_t {epp_profiler_t63,991
	uint64_t uptime;uptime64,1015
	uint64_t now;now65,1033
	uint8_t vers[20];vers66,1048
	uint32_t nb_volumes;nb_volumes67,1067
	epp_vstat_t vstats[16];vstats68,1089
	uint32_t nb_exports;nb_exports69,1114
	epp_estat_t estats[2048];estats70,1136
typedef struct epp_profiler_t epp_profiler_t;epp_profiler_t72,1166
struct epp_profiler_ret_t {epp_profiler_ret_t74,1213
	epp_status_t status;status75,1241
		epp_profiler_t profiler;profiler77,1272
		int error;error78,1299
	} epp_profiler_ret_t_u;epp_profiler_ret_t_u79,1312
typedef struct epp_profiler_ret_t epp_profiler_ret_t;epp_profiler_ret_t81,1340
#define EXPORTD_PROFILE_PROGRAM EXPORTD_PROFILE_PROGRAM83,1395
#define EXPORTD_PROFILE_VERSION EXPORTD_PROFILE_VERSION84,1438
#define EPP_NULL EPP_NULL87,1519
#define EPP_GET_PROFILER EPP_GET_PROFILER90,1640
#define EPP_CLEAR EPP_CLEAR93,1813
#define EPP_NULL EPP_NULL99,2061
#define EPP_GET_PROFILER EPP_GET_PROFILER102,2142
#define EPP_CLEAR EPP_CLEAR105,2275

../../rozofs/rpc/epprotosvc.c,138
#define SIG_PF SIG_PF16,266
exportd_profile_program_1(struct svc_req *rqstp, register SVCXPRT *transp)exportd_profile_program_121,334

../../rozofs/rpc/epprotoxdr.c,544
xdr_epp_status_t (XDR *xdrs, epp_status_t *objp)xdr_epp_status_t10,131
xdr_epp_status_ret_t (XDR *xdrs, epp_status_ret_t *objp)xdr_epp_status_ret_t20,291
xdr_epp_estat_t (XDR *xdrs, epp_estat_t *objp)xdr_epp_estat_t38,615
xdr_epp_sstat_t (XDR *xdrs, epp_sstat_t *objp)xdr_epp_sstat_t60,1125
xdr_epp_vstat_t (XDR *xdrs, epp_vstat_t *objp)xdr_epp_vstat_t78,1514
xdr_epp_profiler_t (XDR *xdrs, epp_profiler_t *objp)xdr_epp_profiler_t102,2108
xdr_epp_profiler_ret_t (XDR *xdrs, epp_profiler_ret_t *objp)xdr_epp_profiler_ret_t128,2827

../../rozofs/rpc/eprotoclt.c,2480
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,218
ep_null_1(void *argp, CLIENT *clnt)ep_null_114,269
ep_mount_1(epgw_mount_arg_t *argp, CLIENT *clnt)ep_mount_129,596
ep_umount_1(uint32_t *argp, CLIENT *clnt)ep_umount_144,966
ep_statfs_1(uint32_t *argp, CLIENT *clnt)ep_statfs_159,1324
ep_lookup_1(epgw_lookup_arg_t *argp, CLIENT *clnt)ep_lookup_174,1681
ep_getattr_1(epgw_mfile_arg_t *argp, CLIENT *clnt)ep_getattr_189,2054
ep_setattr_1(epgw_setattr_arg_t *argp, CLIENT *clnt)ep_setattr_1104,2427
ep_readlink_1(epgw_mfile_arg_t *argp, CLIENT *clnt)ep_readlink_1119,2807
ep_mknod_1(epgw_mknod_arg_t *argp, CLIENT *clnt)ep_mknod_1134,3188
ep_mkdir_1(epgw_mkdir_arg_t *argp, CLIENT *clnt)ep_mkdir_1149,3557
ep_unlink_1(epgw_unlink_arg_t *argp, CLIENT *clnt)ep_unlink_1164,3924
ep_rmdir_1(epgw_rmdir_arg_t *argp, CLIENT *clnt)ep_rmdir_1179,4291
ep_symlink_1(epgw_symlink_arg_t *argp, CLIENT *clnt)ep_symlink_1194,4656
ep_rename_1(epgw_rename_arg_t *argp, CLIENT *clnt)ep_rename_1209,5034
ep_readdir_1(epgw_readdir_arg_t *argp, CLIENT *clnt)ep_readdir_1224,5411
ep_read_block_1(epgw_io_arg_t *argp, CLIENT *clnt)ep_read_block_1239,5797
ep_write_block_1(epgw_write_block_arg_t *argp, CLIENT *clnt)ep_write_block_1254,6180
ep_link_1(epgw_link_arg_t *argp, CLIENT *clnt)ep_link_1269,6573
ep_setxattr_1(epgw_setxattr_arg_t *argp, CLIENT *clnt)ep_setxattr_1284,6939
ep_getxattr_1(epgw_getxattr_arg_t *argp, CLIENT *clnt)ep_getxattr_1299,7325
ep_removexattr_1(epgw_removexattr_arg_t *argp, CLIENT *clnt)ep_removexattr_1314,7713
ep_listxattr_1(epgw_listxattr_arg_t *argp, CLIENT *clnt)ep_listxattr_1329,8112
ep_list_cluster_1(uint16_t *argp, CLIENT *clnt)ep_list_cluster_1344,8507
ep_conf_storage_1(epgw_conf_stor_arg_t *argp, CLIENT *clnt)ep_conf_storage_1359,8877
ep_poll_conf_1(ep_gateway_t *argp, CLIENT *clnt)ep_poll_conf_1374,9267
ep_conf_expgw_1(ep_path_t *argp, CLIENT *clnt)ep_conf_expgw_1389,9655
ep_set_file_lock_1(epgw_lock_arg_t *argp, CLIENT *clnt)ep_set_file_lock_1404,10053
ep_get_file_lock_1(epgw_lock_arg_t *argp, CLIENT *clnt)ep_get_file_lock_1419,10433
ep_clear_owner_file_lock_1(epgw_lock_arg_t *argp, CLIENT *clnt)ep_clear_owner_file_lock_1434,10815
ep_clear_client_file_lock_1(epgw_lock_arg_t *argp, CLIENT *clnt)ep_clear_client_file_lock_1449,11217
ep_poll_file_lock_1(epgw_lock_arg_t *argp, CLIENT *clnt)ep_poll_file_lock_1464,11621
ep_geo_poll_1(void *argp, CLIENT *clnt)ep_geo_poll_1479,11996

../../rozofs/rpc/eproto.h,27685
#define _EPROTO_H_RPCGEN_EPROTO_H_RPCGEN7,100
typedef uint32_t ep_uuid_t[ROZOFS_UUID_SIZE_NET];ep_uuid_t18,217
typedef char *ep_name_t;ep_name_t20,268
typedef char *ep_xattr_name_t;ep_xattr_name_t22,294
typedef char *ep_xattr_value_t;ep_xattr_value_t24,326
typedef u_char ep_xattr_list_t[ROZOFS_XATTR_LIST_MAX];ep_xattr_list_t26,359
typedef char *ep_path_t;ep_path_t28,415
typedef char *ep_link_t;ep_link_t30,441
typedef char ep_host_t[ROZOFS_HOSTNAME_MAX];ep_host_t32,467
typedef char ep_md5_t[ROZOFS_MD5_SIZE];ep_md5_t34,513
typedef char *ep_st_host_t;ep_st_host_t36,554
typedef char *ep_epgw_host_t;ep_epgw_host_t38,583
struct ep_gateway_t {ep_gateway_t40,614
	uint32_t eid;eid41,636
	uint32_t nb_gateways;nb_gateways42,651
	uint32_t gateway_rank;gateway_rank43,674
	uint32_t hash_config;hash_config44,698
typedef struct ep_gateway_t ep_gateway_t;ep_gateway_t46,724
enum ep_status_t {ep_status_t48,767
	EP_SUCCESS = 0,EP_SUCCESS49,786
	EP_FAILURE = 1,EP_FAILURE50,803
	EP_EMPTY = 2,EP_EMPTY51,820
	EP_FAILURE_EID_NOT_SUPPORTED = 3,EP_FAILURE_EID_NOT_SUPPORTED52,835
	EP_NOT_SYNCED = 4,EP_NOT_SYNCED53,870
	EP_EAGAIN = 4 + 1,EP_EAGAIN54,890
typedef enum ep_status_t ep_status_t;ep_status_t56,913
struct ep_status_ret_t {ep_status_ret_t58,952
	ep_status_t status;status59,977
		uint64_t error;error61,1007
	} ep_status_ret_t_u;ep_status_ret_t_u62,1025
typedef struct ep_status_ret_t ep_status_ret_t;ep_status_ret_t64,1050
struct epgw_status_ret_t {epgw_status_ret_t66,1099
	struct ep_gateway_t hdr;hdr67,1126
	ep_status_ret_t status_gw;status_gw68,1152
typedef struct epgw_status_ret_t epgw_status_ret_t;epgw_status_ret_t70,1183
struct ep_storage_t {ep_storage_t72,1236
	ep_host_t host;host73,1258
	uint8_t sid;sid74,1275
typedef struct ep_storage_t ep_storage_t;ep_storage_t76,1292
struct ep_cluster_t {ep_cluster_t78,1335
	uint16_t cid;cid79,1357
	uint8_t storages_nb;storages_nb80,1372
	ep_storage_t storages[SID_MAX];storages81,1394
typedef struct ep_cluster_t ep_cluster_t;ep_cluster_t83,1430
struct ep_cluster_ret_t {ep_cluster_ret_t85,1473
	ep_status_t status;status86,1499
		ep_cluster_t cluster;cluster88,1529
		int error;error89,1553
	} ep_cluster_ret_t_u;ep_cluster_ret_t_u90,1566
typedef struct ep_cluster_ret_t ep_cluster_ret_t;ep_cluster_ret_t92,1592
struct epgw_cluster_ret_t {epgw_cluster_ret_t94,1643
	struct ep_gateway_t hdr;hdr95,1671
	ep_cluster_ret_t status_gw;status_gw96,1697
typedef struct epgw_cluster_ret_t epgw_cluster_ret_t;epgw_cluster_ret_t98,1729
struct ep_storage_node_t {ep_storage_node_t100,1784
	ep_host_t host;host101,1811
	uint8_t sids_nb;sids_nb102,1828
	uint8_t sids[STORAGES_MAX_BY_STORAGE_NODE];sids103,1846
	uint16_t cids[STORAGES_MAX_BY_STORAGE_NODE];cids104,1891
typedef struct ep_storage_node_t ep_storage_node_t;ep_storage_node_t106,1940
struct ep_export_t {ep_export_t108,1993
	uint32_t hash_conf;hash_conf109,2014
	uint32_t eid;eid110,2035
	uint32_t listen_port;listen_port111,2050
	ep_md5_t md5;md5112,2073
	ep_uuid_t rfid;rfid113,2088
	uint8_t rl;rl114,2105
	uint32_t bs;bs115,2118
	uint8_t storage_nodes_nb;storage_nodes_nb116,2132
	ep_storage_node_t storage_nodes[STORAGE_NODES_MAX];storage_nodes117,2159
typedef struct ep_export_t ep_export_t;ep_export_t119,2215
struct ep_mount_ret_t {ep_mount_ret_t121,2256
	ep_status_t status;status122,2280
		ep_export_t export;export124,2310
		int error;error125,2332
	} ep_mount_ret_t_u;ep_mount_ret_t_u126,2345
typedef struct ep_mount_ret_t ep_mount_ret_t;ep_mount_ret_t128,2369
struct epgw_mount_ret_t {epgw_mount_ret_t130,2416
	struct ep_gateway_t hdr;hdr131,2442
	ep_mount_ret_t status_gw;status_gw132,2468
typedef struct epgw_mount_ret_t epgw_mount_ret_t;epgw_mount_ret_t134,2498
struct ep_cnf_storage_node_t {ep_cnf_storage_node_t136,2549
	char *host;host137,2580
	uint8_t sids_nb;sids_nb138,2593
	uint8_t sids[STORAGES_MAX_BY_STORAGE_NODE];sids139,2611
	uint16_t cids[STORAGES_MAX_BY_STORAGE_NODE];cids140,2656
typedef struct ep_cnf_storage_node_t ep_cnf_storage_node_t;ep_cnf_storage_node_t142,2705
struct ep_conf_export_t {ep_conf_export_t144,2766
	uint32_t hash_conf;hash_conf145,2792
	uint32_t eid;eid146,2813
	ep_md5_t md5;md5147,2828
	ep_uuid_t rfid;rfid148,2843
	uint8_t rl;rl149,2860
		u_int storage_nodes_len;storage_nodes_len151,2883
		ep_cnf_storage_node_t *storage_nodes_val;storage_nodes_val152,2910
	} storage_nodes;storage_nodes153,2954
typedef struct ep_conf_export_t ep_conf_export_t;ep_conf_export_t155,2975
struct ep_conf_ret_t {ep_conf_ret_t157,3026
	ep_status_t status;status158,3049
		ep_conf_export_t export;export160,3079
		int error;error161,3106
	} ep_conf_ret_t_u;ep_conf_ret_t_u162,3119
typedef struct ep_conf_ret_t ep_conf_ret_t;ep_conf_ret_t164,3142
struct epgw_conf_ret_t {epgw_conf_ret_t166,3187
	struct ep_gateway_t hdr;hdr167,3212
	ep_conf_ret_t status_gw;status_gw168,3238
typedef struct epgw_conf_ret_t epgw_conf_ret_t;epgw_conf_ret_t170,3267
struct ep_mattr_t {ep_mattr_t172,3316
	ep_uuid_t fid;fid173,3336
	uint16_t cid;cid174,3352
	uint8_t sids[ROZOFS_SAFE_MAX];sids175,3367
	uint32_t mode;mode176,3399
	uint32_t uid;uid177,3415
	uint32_t gid;gid178,3430
	uint16_t nlink;nlink179,3445
	uint64_t ctime;ctime180,3462
	uint64_t atime;atime181,3479
	uint64_t mtime;mtime182,3496
	uint64_t size;size183,3513
	uint32_t children;children184,3529
typedef struct ep_mattr_t ep_mattr_t;ep_mattr_t186,3552
struct ep_mattr_ret_t {ep_mattr_ret_t188,3591
	ep_status_t status;status189,3615
		ep_mattr_t attrs;attrs191,3645
		int error;error192,3665
	} ep_mattr_ret_t_u;ep_mattr_ret_t_u193,3678
typedef struct ep_mattr_ret_t ep_mattr_ret_t;ep_mattr_ret_t195,3702
struct epgw_mattr_ret_t {epgw_mattr_ret_t197,3749
	struct ep_gateway_t hdr;hdr198,3775
	uint64_t free_quota;free_quota199,3801
	uint32_t bsize;bsize200,3823
	uint8_t layout;layout201,3840
	ep_mattr_ret_t status_gw;status_gw202,3857
	ep_mattr_ret_t parent_attr;parent_attr203,3884
typedef struct epgw_mattr_ret_t epgw_mattr_ret_t;epgw_mattr_ret_t205,3916
struct ep_fid_ret_t {ep_fid_ret_t207,3967
	ep_status_t status;status208,3989
		ep_uuid_t fid;fid210,4019
		int error;error211,4036
	} ep_fid_ret_t_u;ep_fid_ret_t_u212,4049
typedef struct ep_fid_ret_t ep_fid_ret_t;ep_fid_ret_t214,4071
struct epgw_fid_ret_t {epgw_fid_ret_t216,4114
	struct ep_gateway_t hdr;hdr217,4138
	ep_fid_ret_t status_gw;status_gw218,4164
	ep_mattr_ret_t parent_attr;parent_attr219,4189
typedef struct epgw_fid_ret_t epgw_fid_ret_t;epgw_fid_ret_t221,4221
struct ep_lookup_arg_t {ep_lookup_arg_t223,4268
	uint32_t eid;eid224,4293
	ep_uuid_t parent;parent225,4308
	ep_name_t name;name226,4327
typedef struct ep_lookup_arg_t ep_lookup_arg_t;ep_lookup_arg_t228,4347
struct epgw_lookup_arg_t {epgw_lookup_arg_t230,4396
	struct ep_gateway_t hdr;hdr231,4423
	ep_lookup_arg_t arg_gw;arg_gw232,4449
typedef struct epgw_lookup_arg_t epgw_lookup_arg_t;epgw_lookup_arg_t234,4477
enum ep_lock_mode_t {ep_lock_mode_t236,4530
	EP_LOCK_FREE = 0,EP_LOCK_FREE237,4552
	EP_LOCK_READ = 1,EP_LOCK_READ238,4571
	EP_LOCK_WRITE = 2,EP_LOCK_WRITE239,4590
typedef enum ep_lock_mode_t ep_lock_mode_t;ep_lock_mode_t241,4613
enum ep_lock_size_t {ep_lock_size_t243,4658
	EP_LOCK_NULL = 0,EP_LOCK_NULL244,4680
	EP_LOCK_TOTAL = 0 + 1,EP_LOCK_TOTAL245,4699
	EP_LOCK_FROM_START = 0 + 2,EP_LOCK_FROM_START246,4723
	EP_LOCK_TO_END = 0 + 3,EP_LOCK_TO_END247,4752
	EP_LOCK_PARTIAL = 0 + 4,EP_LOCK_PARTIAL248,4777
typedef enum ep_lock_size_t ep_lock_size_t;ep_lock_size_t250,4806
struct ep_lock_range_t {ep_lock_range_t252,4851
	ep_lock_size_t size;size253,4876
	uint64_t offset_start;offset_start254,4898
	uint64_t offset_stop;offset_stop255,4922
typedef struct ep_lock_range_t ep_lock_range_t;ep_lock_range_t257,4948
struct ep_lock_t {ep_lock_t259,4997
	enum ep_lock_mode_t mode;mode260,5016
	uint64_t client_ref;client_ref261,5043
	uint64_t owner_ref;owner_ref262,5065
	ep_lock_range_t user_range;user_range263,5086
	ep_lock_range_t effective_range;effective_range264,5115
typedef struct ep_lock_t ep_lock_t;ep_lock_t266,5152
struct ep_lock_request_arg_t {ep_lock_request_arg_t268,5189
	uint32_t eid;eid269,5220
	ep_uuid_t fid;fid270,5235
	ep_lock_t lock;lock271,5251
typedef struct ep_lock_request_arg_t ep_lock_request_arg_t;ep_lock_request_arg_t273,5271
struct epgw_lock_arg_t {epgw_lock_arg_t275,5332
	struct ep_gateway_t hdr;hdr276,5357
	struct ep_lock_request_arg_t arg_gw;arg_gw277,5383
typedef struct epgw_lock_arg_t epgw_lock_arg_t;epgw_lock_arg_t279,5424
struct ep_lock_ret_t {ep_lock_ret_t281,5473
	ep_status_t status;status282,5496
		uint64_t error;error284,5526
		struct ep_lock_t lock;lock285,5544
	} ep_lock_ret_t_u;ep_lock_ret_t_u286,5569
typedef struct ep_lock_ret_t ep_lock_ret_t;ep_lock_ret_t288,5592
struct epgw_lock_ret_t {epgw_lock_ret_t290,5637
	struct ep_gateway_t hdr;hdr291,5662
	ep_lock_ret_t gw_status;gw_status292,5688
typedef struct epgw_lock_ret_t epgw_lock_ret_t;epgw_lock_ret_t294,5717
struct ep_mfile_arg_t {ep_mfile_arg_t296,5766
	uint32_t eid;eid297,5790
	ep_uuid_t fid;fid298,5805
typedef struct ep_mfile_arg_t ep_mfile_arg_t;ep_mfile_arg_t300,5824
struct epgw_mfile_arg_t {epgw_mfile_arg_t302,5871
	struct ep_gateway_t hdr;hdr303,5897
	ep_mfile_arg_t arg_gw;arg_gw304,5923
typedef struct epgw_mfile_arg_t epgw_mfile_arg_t;epgw_mfile_arg_t306,5950
struct ep_unlink_arg_t {ep_unlink_arg_t308,6001
	uint32_t eid;eid309,6026
	ep_uuid_t pfid;pfid310,6041
	ep_name_t name;name311,6058
typedef struct ep_unlink_arg_t ep_unlink_arg_t;ep_unlink_arg_t313,6078
struct epgw_unlink_arg_t {epgw_unlink_arg_t315,6127
	struct ep_gateway_t hdr;hdr316,6154
	ep_unlink_arg_t arg_gw;arg_gw317,6180
typedef struct epgw_unlink_arg_t epgw_unlink_arg_t;epgw_unlink_arg_t319,6208
struct ep_rmdir_arg_t {ep_rmdir_arg_t321,6261
	uint32_t eid;eid322,6285
	ep_uuid_t pfid;pfid323,6300
	ep_name_t name;name324,6317
typedef struct ep_rmdir_arg_t ep_rmdir_arg_t;ep_rmdir_arg_t326,6337
struct epgw_rmdir_arg_t {epgw_rmdir_arg_t328,6384
	struct ep_gateway_t hdr;hdr329,6410
	ep_rmdir_arg_t arg_gw;arg_gw330,6436
typedef struct epgw_rmdir_arg_t epgw_rmdir_arg_t;epgw_rmdir_arg_t332,6463
struct ep_statfs_t {ep_statfs_t334,6514
	uint32_t bsize;bsize335,6535
	uint64_t blocks;blocks336,6552
	uint64_t bfree;bfree337,6570
	uint64_t files;files338,6587
	uint64_t ffree;ffree339,6604
	uint16_t namemax;namemax340,6621
typedef struct ep_statfs_t ep_statfs_t;ep_statfs_t342,6643
struct ep_statfs_ret_t {ep_statfs_ret_t344,6684
	ep_status_t status;status345,6709
		ep_statfs_t stat;stat347,6739
		int error;error348,6759
	} ep_statfs_ret_t_u;ep_statfs_ret_t_u349,6772
typedef struct ep_statfs_ret_t ep_statfs_ret_t;ep_statfs_ret_t351,6797
struct epgw_statfs_ret_t {epgw_statfs_ret_t353,6846
	struct ep_gateway_t hdr;hdr354,6873
	ep_statfs_ret_t status_gw;status_gw355,6899
typedef struct epgw_statfs_ret_t epgw_statfs_ret_t;epgw_statfs_ret_t357,6930
struct ep_setattr_arg_t {ep_setattr_arg_t359,6983
	uint32_t eid;eid360,7009
	uint32_t to_set;to_set361,7024
	ep_mattr_t attrs;attrs362,7042
typedef struct ep_setattr_arg_t ep_setattr_arg_t;ep_setattr_arg_t364,7064
struct epgw_setattr_arg_t {epgw_setattr_arg_t366,7115
	struct ep_gateway_t hdr;hdr367,7143
	ep_setattr_arg_t arg_gw;arg_gw368,7169
typedef struct epgw_setattr_arg_t epgw_setattr_arg_t;epgw_setattr_arg_t370,7198
struct ep_getattr_ret_t {ep_getattr_ret_t372,7253
	ep_status_t status;status373,7279
		ep_mattr_t attrs;attrs375,7309
		int error;error376,7329
	} ep_getattr_ret_t_u;ep_getattr_ret_t_u377,7342
typedef struct ep_getattr_ret_t ep_getattr_ret_t;ep_getattr_ret_t379,7368
struct ep_readlink_ret_t {ep_readlink_ret_t381,7419
	ep_status_t status;status382,7446
		ep_link_t link;link384,7476
		int error;error385,7494
	} ep_readlink_ret_t_u;ep_readlink_ret_t_u386,7507
typedef struct ep_readlink_ret_t ep_readlink_ret_t;ep_readlink_ret_t388,7534
struct epgw_readlink_ret_t {epgw_readlink_ret_t390,7587
	struct ep_gateway_t hdr;hdr391,7616
	ep_readlink_ret_t status_gw;status_gw392,7642
typedef struct epgw_readlink_ret_t epgw_readlink_ret_t;epgw_readlink_ret_t394,7675
struct ep_mknod_arg_t {ep_mknod_arg_t396,7732
	uint32_t eid;eid397,7756
	ep_uuid_t parent;parent398,7771
	ep_name_t name;name399,7790
	uint32_t uid;uid400,7807
	uint32_t gid;gid401,7822
	uint32_t mode;mode402,7837
typedef struct ep_mknod_arg_t ep_mknod_arg_t;ep_mknod_arg_t404,7856
struct epgw_mknod_arg_t {epgw_mknod_arg_t406,7903
	struct ep_gateway_t hdr;hdr407,7929
	ep_mknod_arg_t arg_gw;arg_gw408,7955
typedef struct epgw_mknod_arg_t epgw_mknod_arg_t;epgw_mknod_arg_t410,7982
struct ep_link_arg_t {ep_link_arg_t412,8033
	uint32_t eid;eid413,8056
	ep_uuid_t inode;inode414,8071
	ep_uuid_t newparent;newparent415,8089
	ep_name_t newname;newname416,8111
typedef struct ep_link_arg_t ep_link_arg_t;ep_link_arg_t418,8134
struct epgw_link_arg_t {epgw_link_arg_t420,8179
	struct ep_gateway_t hdr;hdr421,8204
	ep_link_arg_t arg_gw;arg_gw422,8230
typedef struct epgw_link_arg_t epgw_link_arg_t;epgw_link_arg_t424,8256
struct ep_mkdir_arg_t {ep_mkdir_arg_t426,8305
	uint32_t eid;eid427,8329
	ep_uuid_t parent;parent428,8344
	ep_name_t name;name429,8363
	uint32_t uid;uid430,8380
	uint32_t gid;gid431,8395
	uint32_t mode;mode432,8410
typedef struct ep_mkdir_arg_t ep_mkdir_arg_t;ep_mkdir_arg_t434,8429
struct epgw_mkdir_arg_t {epgw_mkdir_arg_t436,8476
	struct ep_gateway_t hdr;hdr437,8502
	ep_mkdir_arg_t arg_gw;arg_gw438,8528
typedef struct epgw_mkdir_arg_t epgw_mkdir_arg_t;epgw_mkdir_arg_t440,8555
struct ep_symlink_arg_t {ep_symlink_arg_t442,8606
	uint32_t eid;eid443,8632
	ep_link_t link;link444,8647
	ep_uuid_t parent;parent445,8664
	ep_name_t name;name446,8683
typedef struct ep_symlink_arg_t ep_symlink_arg_t;ep_symlink_arg_t448,8703
struct epgw_symlink_arg_t {epgw_symlink_arg_t450,8754
	struct ep_gateway_t hdr;hdr451,8782
	ep_symlink_arg_t arg_gw;arg_gw452,8808
typedef struct epgw_symlink_arg_t epgw_symlink_arg_t;epgw_symlink_arg_t454,8837
typedef struct ep_child_t *ep_children_t;ep_children_t456,8892
struct ep_child_t {ep_child_t458,8935
	ep_name_t name;name459,8955
	ep_uuid_t fid;fid460,8972
	ep_children_t next;next461,8988
typedef struct ep_child_t ep_child_t;ep_child_t463,9012
struct dirlist_t {dirlist_t465,9051
	ep_children_t children;children466,9070
	uint8_t eof;eof467,9095
	uint64_t cookie;cookie468,9109
typedef struct dirlist_t dirlist_t;dirlist_t470,9130
struct ep_readdir_arg_t {ep_readdir_arg_t472,9167
	uint32_t eid;eid473,9193
	ep_uuid_t fid;fid474,9208
	uint64_t cookie;cookie475,9224
typedef struct ep_readdir_arg_t ep_readdir_arg_t;ep_readdir_arg_t477,9245
struct epgw_readdir_arg_t {epgw_readdir_arg_t479,9296
	struct ep_gateway_t hdr;hdr480,9324
	ep_readdir_arg_t arg_gw;arg_gw481,9350
typedef struct epgw_readdir_arg_t epgw_readdir_arg_t;epgw_readdir_arg_t483,9379
struct ep_readdir_ret_t {ep_readdir_ret_t485,9434
	ep_status_t status;status486,9460
		dirlist_t reply;reply488,9490
		int error;error489,9509
	} ep_readdir_ret_t_u;ep_readdir_ret_t_u490,9522
typedef struct ep_readdir_ret_t ep_readdir_ret_t;ep_readdir_ret_t492,9548
struct epgw_readdir_ret_t {epgw_readdir_ret_t494,9599
	struct ep_gateway_t hdr;hdr495,9627
	ep_readdir_ret_t status_gw;status_gw496,9653
typedef struct epgw_readdir_ret_t epgw_readdir_ret_t;epgw_readdir_ret_t498,9685
struct ep_rename_arg_t {ep_rename_arg_t500,9740
	uint32_t eid;eid501,9765
	ep_uuid_t pfid;pfid502,9780
	ep_name_t name;name503,9797
	ep_uuid_t npfid;npfid504,9814
	ep_name_t newname;newname505,9832
typedef struct ep_rename_arg_t ep_rename_arg_t;ep_rename_arg_t507,9855
struct epgw_rename_arg_t {epgw_rename_arg_t509,9904
	struct ep_gateway_t hdr;hdr510,9931
	ep_rename_arg_t arg_gw;arg_gw511,9957
typedef struct epgw_rename_arg_t epgw_rename_arg_t;epgw_rename_arg_t513,9985
struct epgw_rename_ret_t {epgw_rename_ret_t515,10038
	struct ep_gateway_t hdr;hdr516,10065
	ep_fid_ret_t status_gw;status_gw517,10091
	ep_mattr_ret_t child_attr;child_attr518,10116
	ep_mattr_ret_t parent_attr;parent_attr519,10144
typedef struct epgw_rename_ret_t epgw_rename_ret_t;epgw_rename_ret_t521,10176
struct ep_io_arg_t {ep_io_arg_t523,10229
	uint32_t eid;eid524,10250
	ep_uuid_t fid;fid525,10265
	uint64_t offset;offset526,10281
	uint32_t length;length527,10299
typedef struct ep_io_arg_t ep_io_arg_t;ep_io_arg_t529,10320
struct epgw_io_arg_t {epgw_io_arg_t531,10361
	struct ep_gateway_t hdr;hdr532,10384
	ep_io_arg_t arg_gw;arg_gw533,10410
typedef struct epgw_io_arg_t epgw_io_arg_t;epgw_io_arg_t535,10434
struct ep_write_block_arg_t {ep_write_block_arg_t537,10479
	uint32_t eid;eid538,10509
	ep_uuid_t fid;fid539,10524
	uint64_t bid;bid540,10540
	uint32_t nrb;nrb541,10555
	uint16_t dist;dist542,10570
	uint64_t offset;offset543,10586
	uint32_t length;length544,10604
	uint64_t geo_wr_start;geo_wr_start545,10622
	uint64_t geo_wr_end;geo_wr_end546,10646
typedef struct ep_write_block_arg_t ep_write_block_arg_t;ep_write_block_arg_t548,10671
struct epgw_write_block_arg_t {epgw_write_block_arg_t550,10730
	struct ep_gateway_t hdr;hdr551,10762
	ep_write_block_arg_t arg_gw;arg_gw552,10788
typedef struct epgw_write_block_arg_t epgw_write_block_arg_t;epgw_write_block_arg_t554,10821
struct ep_read_t {ep_read_t556,10884
		u_int dist_len;dist_len558,10913
		uint16_t *dist_val;dist_val559,10931
	} dist;dist560,10953
	int64_t length;length561,10962
typedef struct ep_read_t ep_read_t;ep_read_t563,10982
struct ep_read_block_ret_t {ep_read_block_ret_t565,11019
	ep_status_t status;status566,11048
		ep_read_t ret;ret568,11078
		int error;error569,11095
	} ep_read_block_ret_t_u;ep_read_block_ret_t_u570,11108
typedef struct ep_read_block_ret_t ep_read_block_ret_t;ep_read_block_ret_t572,11137
struct epgw_read_block_ret_t {epgw_read_block_ret_t574,11194
	struct ep_gateway_t hdr;hdr575,11225
	ep_read_block_ret_t status_gw;status_gw576,11251
typedef struct epgw_read_block_ret_t epgw_read_block_ret_t;epgw_read_block_ret_t578,11286
struct ep_io_ret_t {ep_io_ret_t580,11347
	ep_status_t status;status581,11368
		int64_t length;length583,11398
		int error;error584,11416
	} ep_io_ret_t_u;ep_io_ret_t_u585,11429
typedef struct ep_io_ret_t ep_io_ret_t;ep_io_ret_t587,11450
struct epgw_io_ret_t {epgw_io_ret_t589,11491
	struct ep_gateway_t hdr;hdr590,11514
	ep_io_ret_t status_gw;status_gw591,11540
	ep_mattr_ret_t attr;attr592,11564
typedef struct epgw_io_ret_t epgw_io_ret_t;epgw_io_ret_t594,11589
struct ep_setxattr_arg_t {ep_setxattr_arg_t596,11634
	uint32_t eid;eid597,11661
	ep_uuid_t fid;fid598,11676
	ep_xattr_name_t name;name599,11692
		u_int value_len;value_len601,11725
		char *value_val;value_val602,11744
	} value;value603,11763
	uint8_t flags;flags604,11773
typedef struct ep_setxattr_arg_t ep_setxattr_arg_t;ep_setxattr_arg_t606,11792
struct epgw_setxattr_arg_t {epgw_setxattr_arg_t608,11845
	struct ep_gateway_t hdr;hdr609,11874
	ep_setxattr_arg_t arg_gw;arg_gw610,11900
typedef struct epgw_setxattr_arg_t epgw_setxattr_arg_t;epgw_setxattr_arg_t612,11930
struct ep_getxattr_arg_t {ep_getxattr_arg_t614,11987
	uint32_t eid;eid615,12014
	ep_uuid_t fid;fid616,12029
	ep_xattr_name_t name;name617,12045
	uint64_t size;size618,12068
typedef struct ep_getxattr_arg_t ep_getxattr_arg_t;ep_getxattr_arg_t620,12087
struct epgw_getxattr_arg_t {epgw_getxattr_arg_t622,12140
	struct ep_gateway_t hdr;hdr623,12169
	ep_getxattr_arg_t arg_gw;arg_gw624,12195
typedef struct epgw_getxattr_arg_t epgw_getxattr_arg_t;epgw_getxattr_arg_t626,12225
struct ep_getxattr_t {ep_getxattr_t628,12282
	ep_xattr_value_t value;value629,12305
	uint64_t size;size630,12330
typedef struct ep_getxattr_t ep_getxattr_t;ep_getxattr_t632,12349
struct ep_getxattr_ret_t {ep_getxattr_ret_t634,12394
	ep_status_t status;status635,12421
			u_int value_len;value_len638,12462
			char *value_val;value_val639,12482
		} value;value640,12502
		int error;error641,12513
	} ep_getxattr_ret_t_u;ep_getxattr_ret_t_u642,12526
typedef struct ep_getxattr_ret_t ep_getxattr_ret_t;ep_getxattr_ret_t644,12553
struct epgw_getxattr_ret_t {epgw_getxattr_ret_t646,12606
	struct ep_gateway_t hdr;hdr647,12635
	ep_getxattr_ret_t status_gw;status_gw648,12661
typedef struct epgw_getxattr_ret_t epgw_getxattr_ret_t;epgw_getxattr_ret_t650,12694
struct ep_removexattr_arg_t {ep_removexattr_arg_t652,12751
	uint32_t eid;eid653,12781
	ep_uuid_t fid;fid654,12796
	ep_xattr_name_t name;name655,12812
typedef struct ep_removexattr_arg_t ep_removexattr_arg_t;ep_removexattr_arg_t657,12838
struct epgw_removexattr_arg_t {epgw_removexattr_arg_t659,12897
	struct ep_gateway_t hdr;hdr660,12929
	ep_removexattr_arg_t arg_gw;arg_gw661,12955
typedef struct epgw_removexattr_arg_t epgw_removexattr_arg_t;epgw_removexattr_arg_t663,12988
struct ep_listxattr_arg_t {ep_listxattr_arg_t665,13051
	uint32_t eid;eid666,13079
	ep_uuid_t fid;fid667,13094
	uint64_t size;size668,13110
typedef struct ep_listxattr_arg_t ep_listxattr_arg_t;ep_listxattr_arg_t670,13129
struct epgw_listxattr_arg_t {epgw_listxattr_arg_t672,13184
	struct ep_gateway_t hdr;hdr673,13214
	ep_listxattr_arg_t arg_gw;arg_gw674,13240
typedef struct epgw_listxattr_arg_t epgw_listxattr_arg_t;epgw_listxattr_arg_t676,13271
struct ep_listxattr_ret_t {ep_listxattr_ret_t678,13330
	ep_status_t status;status679,13358
			u_int list_len;list_len682,13399
			char *list_val;list_val683,13418
		} list;list684,13437
		int error;error685,13447
	} ep_listxattr_ret_t_u;ep_listxattr_ret_t_u686,13460
typedef struct ep_listxattr_ret_t ep_listxattr_ret_t;ep_listxattr_ret_t688,13488
struct epgw_listxattr_ret_t {epgw_listxattr_ret_t690,13543
	struct ep_gateway_t hdr;hdr691,13573
	ep_listxattr_ret_t status_gw;status_gw692,13599
typedef struct epgw_listxattr_ret_t epgw_listxattr_ret_t;epgw_listxattr_ret_t694,13633
struct ep_gw_host_conf_t {ep_gw_host_conf_t696,13692
	ep_epgw_host_t host;host697,13719
typedef struct ep_gw_host_conf_t ep_gw_host_conf_t;ep_gw_host_conf_t699,13744
struct ep_gw_header_t {ep_gw_header_t701,13797
	uint32_t export_id;export_id702,13821
	uint32_t nb_gateways;nb_gateways703,13842
	uint32_t gateway_rank;gateway_rank704,13865
	uint32_t configuration_indice;configuration_indice705,13889
typedef struct ep_gw_header_t ep_gw_header_t;ep_gw_header_t707,13924
struct ep_gateway_configuration_t {ep_gateway_configuration_t709,13971
	ep_gw_header_t hdr;hdr710,14007
	ep_epgw_host_t exportd_host;exportd_host711,14028
	uint16_t exportd_port;exportd_port712,14058
	uint16_t gateway_port;gateway_port713,14082
		u_int eid_len;eid_len715,14116
		uint32_t *eid_val;eid_val716,14133
	} eid;eid717,14154
		u_int gateway_host_len;gateway_host_len719,14172
		ep_gw_host_conf_t *gateway_host_val;gateway_host_val720,14198
	} gateway_host;gateway_host721,14237
typedef struct ep_gateway_configuration_t ep_gateway_configuration_t;ep_gateway_configuration_t723,14257
struct ep_gateway_configuration_ret_t {ep_gateway_configuration_ret_t725,14328
	ep_status_t status;status726,14368
		ep_gateway_configuration_t config;config728,14398
		int error;error729,14435
	} ep_gateway_configuration_ret_t_u;ep_gateway_configuration_ret_t_u730,14448
typedef struct ep_gateway_configuration_ret_t ep_gateway_configuration_ret_t;ep_gateway_configuration_ret_t732,14488
struct ep_gw_gateway_configuration_ret_t {ep_gw_gateway_configuration_ret_t734,14567
	struct ep_gateway_t hdr;hdr735,14610
	ep_gateway_configuration_ret_t status_gw;status_gw736,14636
typedef struct ep_gw_gateway_configuration_ret_t ep_gw_gateway_configuration_ret_t;ep_gw_gateway_configuration_ret_t738,14682
struct epgw_mount_arg_t {epgw_mount_arg_t740,14767
	struct ep_gateway_t hdr;hdr741,14793
	ep_path_t path;path742,14819
typedef struct epgw_mount_arg_t epgw_mount_arg_t;epgw_mount_arg_t744,14839
struct epgw_conf_stor_arg_t {epgw_conf_stor_arg_t746,14890
	struct ep_gateway_t hdr;hdr747,14920
	ep_path_t path;path748,14946
typedef struct epgw_conf_stor_arg_t epgw_conf_stor_arg_t;epgw_conf_stor_arg_t750,14966
#define EXPORT_PROGRAM EXPORT_PROGRAM752,15025
#define EXPORT_VERSION EXPORT_VERSION753,15059
#define EP_NULL EP_NULL756,15131
#define EP_MOUNT EP_MOUNT759,15249
#define EP_UMOUNT EP_UMOUNT762,15418
#define EP_STATFS EP_STATFS765,15576
#define EP_LOOKUP EP_LOOKUP768,15734
#define EP_GETATTR EP_GETATTR771,15908
#define EP_SETATTR EP_SETATTR774,16083
#define EP_READLINK EP_READLINK777,16262
#define EP_MKNOD EP_MKNOD780,16446
#define EP_MKDIR EP_MKDIR783,16615
#define EP_UNLINK EP_UNLINK786,16784
#define EP_RMDIR EP_RMDIR789,16955
#define EP_SYMLINK EP_SYMLINK792,17121
#define EP_RENAME EP_RENAME795,17301
#define EP_READDIR EP_READDIR798,17478
#define EP_READ_BLOCK EP_READ_BLOCK801,17662
#define EP_WRITE_BLOCK EP_WRITE_BLOCK804,17851
#define EP_LINK EP_LINK807,18051
#define EP_SETXATTR EP_SETXATTR810,18216
#define EP_GETXATTR EP_GETXATTR813,18403
#define EP_REMOVEXATTR EP_REMOVEXATTR816,18594
#define EP_LISTXATTR EP_LISTXATTR819,18796
#define EP_LIST_CLUSTER EP_LIST_CLUSTER822,18994
#define EP_CONF_STORAGE EP_CONF_STORAGE825,19173
#define EP_POLL_CONF EP_POLL_CONF828,19370
#define EP_CONF_EXPGW EP_CONF_EXPGW831,19546
#define EP_SET_FILE_LOCK EP_SET_FILE_LOCK834,19751
#define EP_GET_FILE_LOCK EP_GET_FILE_LOCK837,19941
#define EP_CLEAR_OWNER_FILE_LOCK EP_CLEAR_OWNER_FILE_LOCK840,20131
#define EP_CLEAR_CLIENT_FILE_LOCK EP_CLEAR_CLIENT_FILE_LOCK843,20349
#define EP_POLL_FILE_LOCK EP_POLL_FILE_LOCK846,20570
#define EP_GEO_POLL EP_GEO_POLL849,20767
#define EP_NULL EP_NULL855,20989
#define EP_MOUNT EP_MOUNT858,21067
#define EP_UMOUNT EP_UMOUNT861,21172
#define EP_STATFS EP_STATFS864,21282
#define EP_LOOKUP EP_LOOKUP867,21392
#define EP_GETATTR EP_GETATTR870,21500
#define EP_SETATTR EP_SETATTR873,21611
#define EP_READLINK EP_READLINK876,21722
#define EP_MKNOD EP_MKNOD879,21842
#define EP_MKDIR EP_MKDIR882,21947
#define EP_UNLINK EP_UNLINK885,22052
#define EP_RMDIR EP_RMDIR888,22157
#define EP_SYMLINK EP_SYMLINK891,22259
#define EP_RENAME EP_RENAME894,22371
#define EP_READDIR EP_READDIR897,22482
#define EP_READ_BLOCK EP_READ_BLOCK900,22598
#define EP_WRITE_BLOCK EP_WRITE_BLOCK903,22729
#define EP_LINK EP_LINK906,22853
#define EP_SETXATTR EP_SETXATTR909,22956
#define EP_GETXATTR EP_GETXATTR912,23073
#define EP_REMOVEXATTR EP_REMOVEXATTR915,23194
#define EP_LISTXATTR EP_LISTXATTR918,23320
#define EP_LIST_CLUSTER EP_LIST_CLUSTER921,23446
#define EP_CONF_STORAGE EP_CONF_STORAGE924,23577
#define EP_POLL_CONF EP_POLL_CONF927,23702
#define EP_CONF_EXPGW EP_CONF_EXPGW930,23822
#define EP_SET_FILE_LOCK EP_SET_FILE_LOCK933,23977
#define EP_GET_FILE_LOCK EP_GET_FILE_LOCK936,24105
#define EP_CLEAR_OWNER_FILE_LOCK EP_CLEAR_OWNER_FILE_LOCK939,24233
#define EP_CLEAR_CLIENT_FILE_LOCK EP_CLEAR_CLIENT_FILE_LOCK942,24389
#define EP_POLL_FILE_LOCK EP_POLL_FILE_LOCK945,24548
#define EP_GEO_POLL EP_GEO_POLL948,24683

../../rozofs/rpc/eprotosvc.c,120
#define SIG_PF SIG_PF16,265
export_program_1(struct svc_req *rqstp, register SVCXPRT *transp)export_program_121,333

../../rozofs/rpc/eprotoxdr.c,8912
xdr_ep_uuid_t (XDR *xdrs, ep_uuid_t objp)xdr_ep_uuid_t10,130
xdr_ep_name_t (XDR *xdrs, ep_name_t *objp)xdr_ep_name_t21,351
xdr_ep_xattr_name_t (XDR *xdrs, ep_xattr_name_t *objp)xdr_ep_xattr_name_t31,517
xdr_ep_xattr_value_t (XDR *xdrs, ep_xattr_value_t *objp)xdr_ep_xattr_value_t41,697
xdr_ep_xattr_list_t (XDR *xdrs, ep_xattr_list_t objp)xdr_ep_xattr_list_t51,880
xdr_ep_path_t (XDR *xdrs, ep_path_t *objp)xdr_ep_path_t62,1110
xdr_ep_link_t (XDR *xdrs, ep_link_t *objp)xdr_ep_link_t72,1272
xdr_ep_host_t (XDR *xdrs, ep_host_t objp)xdr_ep_host_t82,1434
xdr_ep_md5_t (XDR *xdrs, ep_md5_t objp)xdr_ep_md5_t93,1646
xdr_ep_st_host_t (XDR *xdrs, ep_st_host_t *objp)xdr_ep_st_host_t104,1852
xdr_ep_epgw_host_t (XDR *xdrs, ep_epgw_host_t *objp)xdr_ep_epgw_host_t114,2024
xdr_ep_gateway_t (XDR *xdrs, ep_gateway_t *objp)xdr_ep_gateway_t124,2196
xdr_ep_status_t (XDR *xdrs, ep_status_t *objp)xdr_ep_status_t140,2551
xdr_ep_status_ret_t (XDR *xdrs, ep_status_ret_t *objp)xdr_ep_status_ret_t150,2709
xdr_epgw_status_ret_t (XDR *xdrs, epgw_status_ret_t *objp)xdr_epgw_status_ret_t168,3033
xdr_ep_storage_t (XDR *xdrs, ep_storage_t *objp)xdr_ep_storage_t180,3276
xdr_ep_cluster_t (XDR *xdrs, ep_cluster_t *objp)xdr_ep_cluster_t192,3492
xdr_ep_cluster_ret_t (XDR *xdrs, ep_cluster_ret_t *objp)xdr_ep_cluster_ret_t208,3856
xdr_epgw_cluster_ret_t (XDR *xdrs, epgw_cluster_ret_t *objp)xdr_epgw_cluster_ret_t230,4291
xdr_ep_storage_node_t (XDR *xdrs, ep_storage_node_t *objp)xdr_ep_storage_node_t242,4537
xdr_ep_export_t (XDR *xdrs, ep_export_t *objp)xdr_ep_export_t261,5055
xdr_ep_mount_ret_t (XDR *xdrs, ep_mount_ret_t *objp)xdr_ep_mount_ret_t289,5800
xdr_epgw_mount_ret_t (XDR *xdrs, epgw_mount_ret_t *objp)xdr_epgw_mount_ret_t311,6225
xdr_ep_cnf_storage_node_t (XDR *xdrs, ep_cnf_storage_node_t *objp)xdr_ep_cnf_storage_node_t323,6465
xdr_ep_conf_export_t (XDR *xdrs, ep_conf_export_t *objp)xdr_ep_conf_export_t342,7010
xdr_ep_conf_ret_t (XDR *xdrs, ep_conf_ret_t *objp)xdr_ep_conf_ret_t363,7627
xdr_epgw_conf_ret_t (XDR *xdrs, epgw_conf_ret_t *objp)xdr_epgw_conf_ret_t385,8053
xdr_ep_mattr_t (XDR *xdrs, ep_mattr_t *objp)xdr_ep_mattr_t397,8290
xdr_ep_mattr_ret_t (XDR *xdrs, ep_mattr_ret_t *objp)xdr_ep_mattr_ret_t431,9165
xdr_epgw_mattr_ret_t (XDR *xdrs, epgw_mattr_ret_t *objp)xdr_epgw_mattr_ret_t455,9613
xdr_ep_fid_ret_t (XDR *xdrs, ep_fid_ret_t *objp)xdr_ep_fid_ret_t475,10106
xdr_epgw_fid_ret_t (XDR *xdrs, epgw_fid_ret_t *objp)xdr_epgw_fid_ret_t497,10517
xdr_ep_lookup_arg_t (XDR *xdrs, ep_lookup_arg_t *objp)xdr_ep_lookup_arg_t511,10822
xdr_epgw_lookup_arg_t (XDR *xdrs, epgw_lookup_arg_t *objp)xdr_epgw_lookup_arg_t525,11106
xdr_ep_lock_mode_t (XDR *xdrs, ep_lock_mode_t *objp)xdr_ep_lock_mode_t537,11346
xdr_ep_lock_size_t (XDR *xdrs, ep_lock_size_t *objp)xdr_ep_lock_size_t547,11510
xdr_ep_lock_range_t (XDR *xdrs, ep_lock_range_t *objp)xdr_ep_lock_range_t557,11674
xdr_ep_lock_t (XDR *xdrs, ep_lock_t *objp)xdr_ep_lock_t571,11977
xdr_ep_lock_request_arg_t (XDR *xdrs, ep_lock_request_arg_t *objp)xdr_ep_lock_request_arg_t589,12411
xdr_epgw_lock_arg_t (XDR *xdrs, epgw_lock_arg_t *objp)xdr_epgw_lock_arg_t603,12704
xdr_ep_lock_ret_t (XDR *xdrs, ep_lock_ret_t *objp)xdr_ep_lock_ret_t615,12946
xdr_epgw_lock_ret_t (XDR *xdrs, epgw_lock_ret_t *objp)xdr_epgw_lock_ret_t635,13341
xdr_ep_mfile_arg_t (XDR *xdrs, ep_mfile_arg_t *objp)xdr_ep_mfile_arg_t647,13578
xdr_epgw_mfile_arg_t (XDR *xdrs, epgw_mfile_arg_t *objp)xdr_epgw_mfile_arg_t659,13798
xdr_ep_unlink_arg_t (XDR *xdrs, ep_unlink_arg_t *objp)xdr_ep_unlink_arg_t671,14035
xdr_epgw_unlink_arg_t (XDR *xdrs, epgw_unlink_arg_t *objp)xdr_epgw_unlink_arg_t685,14317
xdr_ep_rmdir_arg_t (XDR *xdrs, ep_rmdir_arg_t *objp)xdr_ep_rmdir_arg_t697,14557
xdr_epgw_rmdir_arg_t (XDR *xdrs, epgw_rmdir_arg_t *objp)xdr_epgw_rmdir_arg_t711,14837
xdr_ep_statfs_t (XDR *xdrs, ep_statfs_t *objp)xdr_ep_statfs_t723,15074
xdr_ep_statfs_ret_t (XDR *xdrs, ep_statfs_ret_t *objp)xdr_ep_statfs_ret_t743,15531
xdr_epgw_statfs_ret_t (XDR *xdrs, epgw_statfs_ret_t *objp)xdr_epgw_statfs_ret_t765,15958
xdr_ep_setattr_arg_t (XDR *xdrs, ep_setattr_arg_t *objp)xdr_ep_setattr_arg_t777,16201
xdr_epgw_setattr_arg_t (XDR *xdrs, epgw_setattr_arg_t *objp)xdr_epgw_setattr_arg_t791,16489
xdr_ep_getattr_ret_t (XDR *xdrs, ep_getattr_ret_t *objp)xdr_ep_getattr_ret_t803,16732
xdr_ep_readlink_ret_t (XDR *xdrs, ep_readlink_ret_t *objp)xdr_ep_readlink_ret_t825,17163
xdr_epgw_readlink_ret_t (XDR *xdrs, epgw_readlink_ret_t *objp)xdr_epgw_readlink_ret_t847,17596
xdr_ep_mknod_arg_t (XDR *xdrs, ep_mknod_arg_t *objp)xdr_ep_mknod_arg_t859,17845
xdr_epgw_mknod_arg_t (XDR *xdrs, epgw_mknod_arg_t *objp)xdr_epgw_mknod_arg_t879,18299
xdr_ep_link_arg_t (XDR *xdrs, ep_link_arg_t *objp)xdr_ep_link_arg_t891,18536
xdr_epgw_link_arg_t (XDR *xdrs, epgw_link_arg_t *objp)xdr_epgw_link_arg_t907,18881
xdr_ep_mkdir_arg_t (XDR *xdrs, ep_mkdir_arg_t *objp)xdr_ep_mkdir_arg_t919,19115
xdr_epgw_mkdir_arg_t (XDR *xdrs, epgw_mkdir_arg_t *objp)xdr_epgw_mkdir_arg_t939,19569
xdr_ep_symlink_arg_t (XDR *xdrs, ep_symlink_arg_t *objp)xdr_ep_symlink_arg_t951,19806
xdr_epgw_symlink_arg_t (XDR *xdrs, epgw_symlink_arg_t *objp)xdr_epgw_symlink_arg_t967,20151
xdr_ep_children_t (XDR *xdrs, ep_children_t *objp)xdr_ep_children_t979,20394
xdr_ep_child_t (XDR *xdrs, ep_child_t *objp)xdr_ep_child_t989,20613
xdr_dirlist_t (XDR *xdrs, dirlist_t *objp)xdr_dirlist_t1003,20890
xdr_ep_readdir_arg_t (XDR *xdrs, ep_readdir_arg_t *objp)xdr_ep_readdir_arg_t1017,21169
xdr_epgw_readdir_arg_t (XDR *xdrs, epgw_readdir_arg_t *objp)xdr_epgw_readdir_arg_t1031,21453
xdr_ep_readdir_ret_t (XDR *xdrs, ep_readdir_ret_t *objp)xdr_ep_readdir_ret_t1043,21696
xdr_epgw_readdir_ret_t (XDR *xdrs, epgw_readdir_ret_t *objp)xdr_epgw_readdir_ret_t1065,22126
xdr_ep_rename_arg_t (XDR *xdrs, ep_rename_arg_t *objp)xdr_ep_rename_arg_t1077,22372
xdr_epgw_rename_arg_t (XDR *xdrs, epgw_rename_arg_t *objp)xdr_epgw_rename_arg_t1095,22775
xdr_epgw_rename_ret_t (XDR *xdrs, epgw_rename_ret_t *objp)xdr_epgw_rename_ret_t1107,23015
xdr_ep_io_arg_t (XDR *xdrs, ep_io_arg_t *objp)xdr_ep_io_arg_t1123,23396
xdr_epgw_io_arg_t (XDR *xdrs, epgw_io_arg_t *objp)xdr_epgw_io_arg_t1139,23730
xdr_ep_write_block_arg_t (XDR *xdrs, ep_write_block_arg_t *objp)xdr_ep_write_block_arg_t1151,23958
xdr_epgw_write_block_arg_t (XDR *xdrs, epgw_write_block_arg_t *objp)xdr_epgw_write_block_arg_t1177,24612
xdr_ep_read_t (XDR *xdrs, ep_read_t *objp)xdr_ep_read_t1189,24867
xdr_ep_read_block_ret_t (XDR *xdrs, ep_read_block_ret_t *objp)xdr_ep_read_block_ret_t1202,25178
xdr_epgw_read_block_ret_t (XDR *xdrs, epgw_read_block_ret_t *objp)xdr_epgw_read_block_ret_t1224,25618
xdr_ep_io_ret_t (XDR *xdrs, ep_io_ret_t *objp)xdr_ep_io_ret_t1236,25873
xdr_epgw_io_ret_t (XDR *xdrs, epgw_io_ret_t *objp)xdr_epgw_io_ret_t1258,26282
xdr_ep_setxattr_arg_t (XDR *xdrs, ep_setxattr_arg_t *objp)xdr_ep_setxattr_arg_t1272,26577
xdr_epgw_setxattr_arg_t (XDR *xdrs, epgw_setxattr_arg_t *objp)xdr_epgw_setxattr_arg_t1290,27039
xdr_ep_getxattr_arg_t (XDR *xdrs, ep_getxattr_arg_t *objp)xdr_ep_getxattr_arg_t1302,27285
xdr_epgw_getxattr_arg_t (XDR *xdrs, epgw_getxattr_arg_t *objp)xdr_epgw_getxattr_arg_t1318,27634
xdr_ep_getxattr_t (XDR *xdrs, ep_getxattr_t *objp)xdr_ep_getxattr_t1330,27880
xdr_ep_getxattr_ret_t (XDR *xdrs, ep_getxattr_ret_t *objp)xdr_ep_getxattr_ret_t1342,28109
xdr_epgw_getxattr_ret_t (XDR *xdrs, epgw_getxattr_ret_t *objp)xdr_epgw_getxattr_ret_t1364,28616
xdr_ep_removexattr_arg_t (XDR *xdrs, ep_removexattr_arg_t *objp)xdr_ep_removexattr_arg_t1376,28865
xdr_epgw_removexattr_arg_t (XDR *xdrs, epgw_removexattr_arg_t *objp)xdr_epgw_removexattr_arg_t1390,29162
xdr_ep_listxattr_arg_t (XDR *xdrs, ep_listxattr_arg_t *objp)xdr_ep_listxattr_arg_t1402,29417
xdr_epgw_listxattr_arg_t (XDR *xdrs, epgw_listxattr_arg_t *objp)xdr_epgw_listxattr_arg_t1416,29703
xdr_ep_listxattr_ret_t (XDR *xdrs, ep_listxattr_ret_t *objp)xdr_ep_listxattr_ret_t1428,29952
xdr_epgw_listxattr_ret_t (XDR *xdrs, epgw_listxattr_ret_t *objp)xdr_epgw_listxattr_ret_t1450,30460
xdr_ep_gw_host_conf_t (XDR *xdrs, ep_gw_host_conf_t *objp)xdr_ep_gw_host_conf_t1462,30712
xdr_ep_gw_header_t (XDR *xdrs, ep_gw_header_t *objp)xdr_ep_gw_header_t1472,30888
xdr_ep_gateway_configuration_t (XDR *xdrs, ep_gateway_configuration_t *objp)xdr_ep_gateway_configuration_t1488,31262
xdr_ep_gateway_configuration_ret_t (XDR *xdrs, ep_gateway_configuration_ret_t *objp)xdr_ep_gateway_configuration_ret_t1510,32017
xdr_ep_gw_gateway_configuration_ret_t (XDR *xdrs, ep_gw_gateway_configuration_ret_t *objp)xdr_ep_gw_gateway_configuration_ret_t1532,32521
xdr_epgw_mount_arg_t (XDR *xdrs, epgw_mount_arg_t *objp)xdr_epgw_mount_arg_t1544,32811
xdr_epgw_conf_stor_arg_t (XDR *xdrs, epgw_conf_stor_arg_t *objp)xdr_epgw_conf_stor_arg_t1556,33041

../../rozofs/rpc/export_lbg.c,589
static north_remote_ip_list_t my_list[32];  /**< list of the connection for the exportd */my_list44,1264
static af_unix_socket_conf_t  af_inet_exportd_conf =af_inet_exportd_conf49,1405
static int get_service_tcp_port(char *host ,unsigned long prog, unsigned long vers) {get_service_tcp_port83,3760
static void export_lbg_periodic_ticker(void * param) {export_lbg_periodic_ticker111,4598
static void export_lbg_start_timer(exportclt_t *exportclt) {export_lbg_start_timer140,5575
int export_lbg_initialize(exportclt_t *exportclt ,unsigned long prog,export_lbg_initialize155,5999

../../rozofs/rpc/export_profiler.h,5482
#define _EXPORT_PROFILER_H_EXPORT_PROFILER_H7,102
struct export_one_profiler_t {export_one_profiler_t20,241
  uint64_t ep_mount[2];ep_mount21,272
  uint64_t ep_umount[2];ep_umount22,296
  uint64_t ep_statfs[2];ep_statfs23,321
  uint64_t ep_lookup[2];ep_lookup24,346
  uint64_t ep_getattr[2];ep_getattr25,371
  uint64_t ep_setattr[2];ep_setattr26,397
  uint64_t ep_readlink[2];ep_readlink27,423
  uint64_t ep_mknod[2];ep_mknod28,450
  uint64_t ep_mkdir[2];ep_mkdir29,474
  uint64_t ep_unlink[2];ep_unlink30,498
  uint64_t ep_rmdir[2];ep_rmdir31,523
  uint64_t ep_symlink[2];ep_symlink32,547
  uint64_t ep_rename[2];ep_rename33,573
  uint64_t ep_readdir[2];ep_readdir34,598
  uint64_t ep_read_block[3];ep_read_block35,624
  uint64_t ep_write_block[3];ep_write_block36,653
  uint64_t ep_link[2];ep_link37,683
  uint64_t ep_setxattr[2];ep_setxattr38,706
  uint64_t ep_getxattr[2];ep_getxattr39,733
  uint64_t ep_removexattr[2];ep_removexattr40,760
  uint64_t ep_listxattr[2];ep_listxattr41,790
  uint64_t export_lv1_resolve_entry[2];export_lv1_resolve_entry42,818
  uint64_t export_lv2_resolve_path[2];export_lv2_resolve_path43,858
  uint64_t export_lookup_fid[2];export_lookup_fid44,897
  uint64_t export_update_files[2];export_update_files45,930
  uint64_t export_update_blocks[2];export_update_blocks46,965
  uint64_t export_stat[2];export_stat47,1001
  uint64_t export_lookup[2];export_lookup48,1028
  uint64_t export_getattr[2];export_getattr49,1057
  uint64_t export_setattr[2];export_setattr50,1087
  uint64_t export_link[2];export_link51,1117
  uint64_t export_mknod[2];export_mknod52,1144
  uint64_t export_mkdir[2];export_mkdir53,1172
  uint64_t export_unlink[2];export_unlink54,1200
  uint64_t export_rmdir[2];export_rmdir55,1229
  uint64_t export_symlink[2];export_symlink56,1257
  uint64_t export_readlink[2];export_readlink57,1287
  uint64_t export_rename[2];export_rename58,1318
  uint64_t export_read[3];export_read59,1347
  uint64_t export_read_block[2];export_read_block60,1374
  uint64_t export_write_block[2];export_write_block61,1407
  uint64_t export_setxattr[2];export_setxattr62,1441
  uint64_t export_getxattr[2];export_getxattr63,1472
  uint64_t export_removexattr[2];export_removexattr64,1503
  uint64_t export_listxattr[2];export_listxattr65,1537
  uint64_t export_readdir[2];export_readdir66,1569
  uint64_t lv2_cache_put[2];lv2_cache_put67,1599
  uint64_t lv2_cache_get[2];lv2_cache_get68,1628
  uint64_t lv2_cache_del[2];lv2_cache_del69,1657
  uint64_t volume_balance[2];volume_balance70,1686
  uint64_t volume_distribute[2];volume_distribute71,1716
  uint64_t volume_stat[2];volume_stat72,1749
  uint64_t mdir_open[2];mdir_open73,1776
  uint64_t mdir_close[2];mdir_close74,1801
  uint64_t mdir_read_attributes[2];mdir_read_attributes75,1827
  uint64_t mdir_write_attributes[2];mdir_write_attributes76,1863
  uint64_t mreg_open[2];mreg_open77,1900
  uint64_t mreg_close[2];mreg_close78,1925
  uint64_t mreg_read_attributes[2];mreg_read_attributes79,1951
  uint64_t mreg_write_attributes[2];mreg_write_attributes80,1987
  uint64_t mreg_read_dist[2];mreg_read_dist81,2024
  uint64_t mreg_write_dist[2];mreg_write_dist82,2054
  uint64_t mslnk_open[2];mslnk_open83,2085
  uint64_t mslnk_close[2];mslnk_close84,2111
  uint64_t mslnk_read_attributes[2];mslnk_read_attributes85,2138
  uint64_t mslnk_write_attributes[2];mslnk_write_attributes86,2175
  uint64_t mslnk_read_link[2];mslnk_read_link87,2213
  uint64_t mslnk_write_link[2];mslnk_write_link88,2244
  uint64_t get_mdirentry[2];get_mdirentry89,2276
  uint64_t put_mdirentry[2];put_mdirentry90,2305
  uint64_t del_mdirentry[2];del_mdirentry91,2334
  uint64_t list_mdirentries[2];list_mdirentries92,2363
  uint64_t gw_invalidate[2];gw_invalidate93,2395
  uint64_t gw_invalidate_all[2];gw_invalidate_all94,2424
  uint64_t gw_configuration[2];gw_configuration95,2457
  uint64_t gw_poll[2];gw_poll96,2489
  uint64_t ep_configuration[2];ep_configuration97,2512
  uint64_t ep_conf_gateway[2];ep_conf_gateway98,2544
  uint64_t ep_poll[2];ep_poll99,2575
  uint64_t export_clearclient_flock[2];export_clearclient_flock100,2598
  uint64_t export_clearowner_flock[2];export_clearowner_flock101,2638
  uint64_t export_set_file_lock[2];export_set_file_lock102,2677
  uint64_t export_get_file_lock[2];export_get_file_lock103,2713
  uint64_t export_poll_file_lock[2];export_poll_file_lock104,2749
  uint64_t ep_clearclient_flock[2];ep_clearclient_flock105,2786
  uint64_t ep_clearowner_flock[2];ep_clearowner_flock106,2822
  uint64_t ep_set_file_lock[2];ep_set_file_lock107,2857
  uint64_t ep_get_file_lock[2];ep_get_file_lock108,2889
  uint64_t ep_poll_file_lock[2];ep_poll_file_lock109,2921
typedef struct export_one_profiler_t export_one_profiler_t;export_one_profiler_t111,2957
#define START_PROFILING(START_PROFILING117,3122
#define STOP_PROFILING(STOP_PROFILING129,3509
#define START_PROFILING_IO(START_PROFILING_IO139,3859
#define GET_EID_PROB_COUNT(GET_EID_PROB_COUNT151,4311
static inline int export_profiler_allocate(int eid) {export_profiler_allocate167,4754
static inline void export_profiler_reset_one(int eid) {export_profiler_reset_one189,5304
static inline void export_profiler_reset_all() {export_profiler_reset_all202,5616
static inline void export_profiler_free(int eid) {export_profiler_free216,6008

../../rozofs/rpc/geo_replica_protoclt.c,489
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,229
geo_null_1(void *argp, CLIENT *clnt)geo_null_114,280
geo_sync_req_1(geo_sync_req_arg_t *argp, CLIENT *clnt)geo_sync_req_129,611
geo_sync_get_next_req_1(geo_sync_get_next_req_arg_t *argp, CLIENT *clnt)geo_sync_get_next_req_144,998
geo_sync_delete_req_1(geo_sync_delete_req_arg_t *argp, CLIENT *clnt)geo_sync_delete_req_159,1419
geo_sync_close_req_1(geo_sync_close_req_arg_t *argp, CLIENT *clnt)geo_sync_close_req_174,1828

../../rozofs/rpc/geo_replica_proto.h,3310
#define _GEO_REPLICA_PROTO_H_RPCGEN_GEO_REPLICA_PROTO_H_RPCGEN7,111
enum geo_status_t {geo_status_t18,239
	GEO_SUCCESS = 0,GEO_SUCCESS19,259
	GEO_FAILURE = 1,GEO_FAILURE20,277
typedef enum geo_status_t geo_status_t;geo_status_t22,298
struct geo_sync_req_arg_t {geo_sync_req_arg_t24,339
	uint16_t eid;eid25,367
	uint16_t site_id;site_id26,382
	uint32_t local_ref;local_ref27,401
typedef struct geo_sync_req_arg_t geo_sync_req_arg_t;geo_sync_req_arg_t29,425
struct geo_sync_data_ret_t {geo_sync_data_ret_t31,480
	uint16_t eid;eid32,509
	uint16_t site_id;site_id33,524
	uint64_t file_idx;file_idx34,543
	uint32_t local_ref;local_ref35,563
	uint32_t remote_ref;remote_ref36,584
	uint32_t last;last37,606
	uint32_t first_record;first_record38,622
	uint32_t nb_records;nb_records39,646
		u_int data_len;data_len41,678
		char *data_val;data_val42,696
	} data;data43,714
typedef struct geo_sync_data_ret_t geo_sync_data_ret_t;geo_sync_data_ret_t45,726
struct geo_sync_req_ret_t {geo_sync_req_ret_t47,783
	geo_status_t status;status48,811
		struct geo_sync_data_ret_t data;data50,842
		int error;error51,877
	} geo_sync_req_ret_t_u;geo_sync_req_ret_t_u52,890
typedef struct geo_sync_req_ret_t geo_sync_req_ret_t;geo_sync_req_ret_t54,918
struct geo_sync_get_next_req_arg_t {geo_sync_get_next_req_arg_t56,973
	uint16_t eid;eid57,1010
	uint16_t site_id;site_id58,1025
	uint64_t file_idx;file_idx59,1044
	uint32_t local_ref;local_ref60,1064
	uint32_t remote_ref;remote_ref61,1085
	uint32_t next_record;next_record62,1107
	uint64_t status_bitmap;status_bitmap63,1130
typedef struct geo_sync_get_next_req_arg_t geo_sync_get_next_req_arg_t;geo_sync_get_next_req_arg_t65,1158
struct geo_sync_delete_req_arg_t {geo_sync_delete_req_arg_t67,1231
	uint16_t eid;eid68,1266
	uint16_t site_id;site_id69,1281
	uint64_t file_idx;file_idx70,1300
	uint32_t local_ref;local_ref71,1320
	uint32_t remote_ref;remote_ref72,1341
typedef struct geo_sync_delete_req_arg_t geo_sync_delete_req_arg_t;geo_sync_delete_req_arg_t74,1366
struct geo_sync_close_req_arg_t {geo_sync_close_req_arg_t76,1435
	uint16_t eid;eid77,1469
	uint16_t site_id;site_id78,1484
	uint64_t file_idx;file_idx79,1503
	uint32_t local_ref;local_ref80,1523
	uint32_t remote_ref;remote_ref81,1544
	uint64_t status_bitmap;status_bitmap82,1566
typedef struct geo_sync_close_req_arg_t geo_sync_close_req_arg_t;geo_sync_close_req_arg_t84,1594
struct geo_status_ret_t {geo_status_ret_t86,1661
	geo_status_t status;status87,1687
		int error;error89,1718
	} geo_status_ret_t_u;geo_status_ret_t_u90,1731
typedef struct geo_status_ret_t geo_status_ret_t;geo_status_ret_t92,1757
#define GEO_PROGRAM GEO_PROGRAM94,1808
#define GEO_VERSION GEO_VERSION95,1839
#define GEO_NULL GEO_NULL98,1908
#define GEO_SYNC_REQ GEO_SYNC_REQ101,2029
#define GEO_SYNC_GET_NEXT_REQ GEO_SYNC_GET_NEXT_REQ104,2218
#define GEO_SYNC_DELETE_REQ GEO_SYNC_DELETE_REQ107,2452
#define GEO_SYNC_CLOSE_REQ GEO_SYNC_CLOSE_REQ110,2672
#define GEO_NULL GEO_NULL116,2975
#define GEO_SYNC_REQ GEO_SYNC_REQ119,3056
#define GEO_SYNC_GET_NEXT_REQ GEO_SYNC_GET_NEXT_REQ122,3177
#define GEO_SYNC_DELETE_REQ GEO_SYNC_DELETE_REQ125,3325
#define GEO_SYNC_CLOSE_REQ GEO_SYNC_CLOSE_REQ128,3463

../../rozofs/rpc/geo_replica_protosvc.c,114
#define SIG_PF SIG_PF16,276
geo_program_1(struct svc_req *rqstp, register SVCXPRT *transp)geo_program_121,344

../../rozofs/rpc/geo_replica_protoxdr.c,781
xdr_geo_status_t (XDR *xdrs, geo_status_t *objp)xdr_geo_status_t10,141
xdr_geo_sync_req_arg_t (XDR *xdrs, geo_sync_req_arg_t *objp)xdr_geo_sync_req_arg_t20,301
xdr_geo_sync_data_ret_t (XDR *xdrs, geo_sync_data_ret_t *objp)xdr_geo_sync_data_ret_t34,596
xdr_geo_sync_req_ret_t (XDR *xdrs, geo_sync_req_ret_t *objp)xdr_geo_sync_req_ret_t60,1316
xdr_geo_sync_get_next_req_arg_t (XDR *xdrs, geo_sync_get_next_req_arg_t *objp)xdr_geo_sync_get_next_req_arg_t82,1766
xdr_geo_sync_delete_req_arg_t (XDR *xdrs, geo_sync_delete_req_arg_t *objp)xdr_geo_sync_delete_req_arg_t104,2337
xdr_geo_sync_close_req_arg_t (XDR *xdrs, geo_sync_close_req_arg_t *objp)xdr_geo_sync_close_req_arg_t122,2772
xdr_geo_status_ret_t (XDR *xdrs, geo_status_ret_t *objp)xdr_geo_status_ret_t142,3272

../../rozofs/rpc/gwproto_cache.h,568
#define EXPGW_PROTO_CACHE_HEXPGW_PROTO_CACHE_H20,675
typedef union _rozofs_section_header_u {_rozofs_section_header_u32,875
  uint64_t    u64;u6434,917
    uint64_t    absolute_idx:16;  /**< Starting index of the section */ absolute_idx37,950
    uint64_t    section_size:5;   /**< Size in byte of the section   */ section_size38,1023
    uint64_t    filler:11;filler39,1096
    uint64_t    byte_bitmap:32;   /**< presence bitmap of the bytes  */     byte_bitmap40,1123
  } field;field41,1200
} rozofs_section_header_u;rozofs_section_header_u43,1214

../../rozofs/rpc/gwprotoclt.c,568
#define GW_NAME_LEN GW_NAME_LEN9,160
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT14,370
gw_null_1(void *argp, CLIENT *clnt)gw_null_117,421
gw_invalidate_sections_1(gw_invalidate_sections_t *argp, CLIENT *clnt)gw_invalidate_sections_132,743
gw_invalidate_all_1(gw_header_t *argp, CLIENT *clnt)gw_invalidate_all_147,1141
gw_configuration_1(gw_configuration_t *argp, CLIENT *clnt)gw_configuration_162,1503
gw_poll_1(gw_header_t *argp, CLIENT *clnt)gw_poll_177,1877
gw_get_configuration_1(gw_header_t *argp, CLIENT *clnt)gw_get_configuration_192,2230

../../rozofs/rpc/gwproto.h,2711
#define _GWPROTO_H_RPCGEN_GWPROTO_H_RPCGEN7,101
#define GW_NAME_LEN GW_NAME_LEN17,218
typedef char *epgw_host_t;epgw_host_t19,263
enum gw_status_e {gw_status_e21,291
	GW_FAILURE = 0,GW_FAILURE22,310
	GW_SUCCESS = 1,GW_SUCCESS23,327
	GW_NOT_SYNCED = 2,GW_NOT_SYNCED24,344
typedef enum gw_status_e gw_status_e;gw_status_e26,367
struct gw_header_t {gw_header_t28,406
	uint32_t export_id;export_id29,427
	uint32_t nb_gateways;nb_gateways30,448
	uint32_t gateway_rank;gateway_rank31,471
	uint32_t configuration_indice;configuration_indice32,495
typedef struct gw_header_t gw_header_t;gw_header_t34,530
struct gw_status_t {gw_status_t36,571
	gw_status_e status;status37,592
		int error;error39,622
	} gw_status_t_u;gw_status_t_u40,635
typedef struct gw_status_t gw_status_t;gw_status_t42,656
struct gw_invalidate_sections_t {gw_invalidate_sections_t44,697
	gw_header_t hdr;hdr45,731
		u_int section_len;section_len47,759
		char *section_val;section_val48,780
	} section;section49,801
typedef struct gw_invalidate_sections_t gw_invalidate_sections_t;gw_invalidate_sections_t51,816
struct gw_host_conf_t {gw_host_conf_t53,883
	epgw_host_t host;host54,907
typedef struct gw_host_conf_t gw_host_conf_t;gw_host_conf_t56,929
struct gw_configuration_t {gw_configuration_t60,1083
	gw_header_t hdr;hdr61,1111
	epgw_host_t exportd_host;exportd_host62,1129
	uint16_t exportd_port;exportd_port63,1156
	uint16_t gateway_port;gateway_port64,1180
		u_int eid_len;eid_len66,1214
		uint32_t *eid_val;eid_val67,1231
	} eid;eid68,1252
		u_int gateway_host_len;gateway_host_len70,1270
		gw_host_conf_t *gateway_host_val;gateway_host_val71,1296
	} gateway_host;gateway_host72,1332
typedef struct gw_configuration_t gw_configuration_t;gw_configuration_t74,1352
struct gw_ret_configuration_t {gw_ret_configuration_t76,1407
	gw_status_t ret;ret77,1439
	gw_configuration_t config;config78,1457
typedef struct gw_ret_configuration_t gw_ret_configuration_t;gw_ret_configuration_t80,1488
#define GW_PROGRAM GW_PROGRAM82,1551
#define GW_VERSION GW_VERSION83,1581
#define GW_NULL GW_NULL86,1649
#define GW_INVALIDATE_SECTIONS GW_INVALIDATE_SECTIONS89,1767
#define GW_INVALIDATE_ALL GW_INVALIDATE_ALL92,1984
#define GW_CONFIGURATION GW_CONFIGURATION95,2160
#define GW_POLL GW_POLL98,2347
#define GW_GET_CONFIGURATION GW_GET_CONFIGURATION101,2493
#define GW_NULL GW_NULL107,2787
#define GW_INVALIDATE_SECTIONS GW_INVALIDATE_SECTIONS110,2865
#define GW_INVALIDATE_ALL GW_INVALIDATE_ALL113,3002
#define GW_CONFIGURATION GW_CONFIGURATION116,3124
#define GW_POLL GW_POLL119,3243
#define GW_GET_CONFIGURATION GW_GET_CONFIGURATION122,3335

../../rozofs/rpc/gwprotosvc.c,152
#define SIG_PF SIG_PF16,266
#define GW_NAME_LEN GW_NAME_LEN19,328
gw_program_1(struct svc_req *rqstp, register SVCXPRT *transp)gw_program_124,485

../../rozofs/rpc/gwprotoxdr.c,706
#define GW_NAME_LEN GW_NAME_LEN8,123
xdr_epgw_host_t (XDR *xdrs, epgw_host_t *objp)xdr_epgw_host_t11,175
xdr_gw_status_e (XDR *xdrs, gw_status_e *objp)xdr_gw_status_e21,341
xdr_gw_header_t (XDR *xdrs, gw_header_t *objp)xdr_gw_header_t31,499
xdr_gw_status_t (XDR *xdrs, gw_status_t *objp)xdr_gw_status_t47,867
xdr_gw_invalidate_sections_t (XDR *xdrs, gw_invalidate_sections_t *objp)xdr_gw_invalidate_sections_t65,1174
xdr_gw_host_conf_t (XDR *xdrs, gw_host_conf_t *objp)xdr_gw_host_conf_t77,1481
xdr_gw_configuration_t (XDR *xdrs, gw_configuration_t *objp)xdr_gw_configuration_t89,1755
xdr_gw_ret_configuration_t (XDR *xdrs, gw_ret_configuration_t *objp)xdr_gw_ret_configuration_t111,2482

../../rozofs/rpc/mclient.c,453
uint16_t mproto_service_port = 0;mproto_service_port29,837
int mclient_initialize(mclient_t * clt, struct timeval timeout) {mclient_initialize31,872
void mclient_release(mclient_t * clt) {mclient_release61,1656
int mclient_stat(mclient_t * clt, sstat_t * st) {mclient_stat67,1792
int mclient_remove(mclient_t * clt, fid_t fid) {mclient_remove94,2428
int mclient_ports(mclient_t * mclt, mp_io_address_t * io_address_p) {mclient_ports119,3020

../../rozofs/rpc/mclient.h,272
#define _MCLIENT_H_MCLIENT_H21,678
typedef struct mclient {mclient30,791
    char host[ROZOFS_HOSTNAME_MAX];host31,816
    cid_t cid;cid32,852
    sid_t sid;sid33,867
    int status;status34,882
    rpcclt_t rpcclt;rpcclt35,898
} mclient_t;mclient_t36,919

../../rozofs/rpc/mclient_reload.c,359
int mclient_initialize(mclient_t * clt) {mclient_initialize28,792
void mclient_release(mclient_t * clt) {mclient_release51,1306
int mclient_stat(mclient_t * clt, sstat_t * st) {mclient_stat57,1442
int mclient_remove(mclient_t * clt, uint8_t layout,mclient_remove79,1975
int mclient_ports(mclient_t * mclt, uint32_t * ports_p) {mclient_ports106,2696

../../rozofs/rpc/mpclient.c,303
int mp_client_initialize(mp_client_t *clt) {mp_client_initialize28,794
void mp_client_release(mp_client_t *clt) {mp_client_release44,1157
int mp_client_get_profiler(mp_client_t *clt, mpp_profiler_t *p) {mp_client_get_profiler50,1296
int mp_client_clear(mp_client_t *clt) {mp_client_clear76,2087

../../rozofs/rpc/mpclient.h,268
#define _MPCLIENT_H_MPCLIENT_H21,679
typedef struct mp_client {mp_client30,794
    char host[ROZOFS_HOSTNAME_MAX];host31,821
    uint32_t port;port32,857
    uint16_t timeout;timeout33,876
    rpcclt_t rpcclt;rpcclt34,898
} mp_client_t;mp_client_t35,919

../../rozofs/rpc/mpprotoclt.c,241
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,219
mpp_null_1(void *argp, CLIENT *clnt)mpp_null_114,270
mpp_get_profiler_1(void *argp, CLIENT *clnt)mpp_get_profiler_129,601
mpp_clear_1(void *argp, CLIENT *clnt)mpp_clear_144,966

../../rozofs/rpc/mpproto.h,3230
#define _MPPROTO_H_RPCGEN_MPPROTO_H_RPCGEN7,101
enum mpp_status_t {mpp_status_t18,219
	MPP_SUCCESS = 0,MPP_SUCCESS19,239
	MPP_FAILURE = 1,MPP_FAILURE20,257
typedef enum mpp_status_t mpp_status_t;mpp_status_t22,278
struct mpp_status_ret_t {mpp_status_ret_t24,319
	mpp_status_t status;status25,345
		int error;error27,376
	} mpp_status_ret_t_u;mpp_status_ret_t_u28,389
typedef struct mpp_status_ret_t mpp_status_ret_t;mpp_status_ret_t30,415
struct mpp_profiler_t {mpp_profiler_t32,466
	uint64_t uptime;uptime33,490
	uint64_t now;now34,508
	uint8_t vers[20];vers35,523
	uint64_t rozofs_ll_lookup[2];rozofs_ll_lookup36,542
	uint64_t rozofs_ll_forget[2];rozofs_ll_forget37,573
	uint64_t rozofs_ll_getattr[2];rozofs_ll_getattr38,604
	uint64_t rozofs_ll_setattr[2];rozofs_ll_setattr39,636
	uint64_t rozofs_ll_readlink[2];rozofs_ll_readlink40,668
	uint64_t rozofs_ll_mknod[2];rozofs_ll_mknod41,701
	uint64_t rozofs_ll_mkdir[2];rozofs_ll_mkdir42,731
	uint64_t rozofs_ll_unlink[2];rozofs_ll_unlink43,761
	uint64_t rozofs_ll_rmdir[2];rozofs_ll_rmdir44,792
	uint64_t rozofs_ll_symlink[2];rozofs_ll_symlink45,822
	uint64_t rozofs_ll_rename[2];rozofs_ll_rename46,854
	uint64_t rozofs_ll_open[2];rozofs_ll_open47,885
	uint64_t rozofs_ll_link[2];rozofs_ll_link48,914
	uint64_t rozofs_ll_read[3];rozofs_ll_read49,943
	uint64_t rozofs_ll_write[3];rozofs_ll_write50,972
	uint64_t rozofs_ll_flush[2];rozofs_ll_flush51,1002
	uint64_t rozofs_ll_release[2];rozofs_ll_release52,1032
	uint64_t rozofs_ll_opendir[2];rozofs_ll_opendir53,1064
	uint64_t rozofs_ll_readdir[2];rozofs_ll_readdir54,1096
	uint64_t rozofs_ll_releasedir[2];rozofs_ll_releasedir55,1128
	uint64_t rozofs_ll_fsyncdir[2];rozofs_ll_fsyncdir56,1163
	uint64_t rozofs_ll_statfs[2];rozofs_ll_statfs57,1196
	uint64_t rozofs_ll_setxattr[2];rozofs_ll_setxattr58,1227
	uint64_t rozofs_ll_getxattr[2];rozofs_ll_getxattr59,1260
	uint64_t rozofs_ll_listxattr[2];rozofs_ll_listxattr60,1293
	uint64_t rozofs_ll_removexattr[2];rozofs_ll_removexattr61,1327
	uint64_t rozofs_ll_access[2];rozofs_ll_access62,1363
	uint64_t rozofs_ll_create[2];rozofs_ll_create63,1394
	uint64_t rozofs_ll_getlk[2];rozofs_ll_getlk64,1425
	uint64_t rozofs_ll_setlk[2];rozofs_ll_setlk65,1455
	uint64_t rozofs_ll_setlk_int[2];rozofs_ll_setlk_int66,1485
	uint64_t rozofs_ll_ioctl[2];rozofs_ll_ioctl67,1519
	uint64_t rozofs_ll_clearlkowner[2];rozofs_ll_clearlkowner68,1549
typedef struct mpp_profiler_t mpp_profiler_t;mpp_profiler_t70,1589
struct mpp_profiler_ret_t {mpp_profiler_ret_t72,1636
	mpp_status_t status;status73,1664
		mpp_profiler_t profiler;profiler75,1695
		int error;error76,1722
	} mpp_profiler_ret_t_u;mpp_profiler_ret_t_u77,1735
typedef struct mpp_profiler_ret_t mpp_profiler_ret_t;mpp_profiler_ret_t79,1763
#define ROZOFSMOUNT_PROFILE_PROGRAM ROZOFSMOUNT_PROFILE_PROGRAM81,1818
#define ROZOFSMOUNT_PROFILE_VERSION ROZOFSMOUNT_PROFILE_VERSION82,1865
#define MPP_NULL MPP_NULL85,1950
#define MPP_GET_PROFILER MPP_GET_PROFILER88,2071
#define MPP_CLEAR MPP_CLEAR91,2244
#define MPP_NULL MPP_NULL97,2496
#define MPP_GET_PROFILER MPP_GET_PROFILER100,2577
#define MPP_CLEAR MPP_CLEAR103,2710

../../rozofs/rpc/mpprotosvc.c,146
#define SIG_PF SIG_PF16,266
rozofsmount_profile_program_1(struct svc_req *rqstp, register SVCXPRT *transp)rozofsmount_profile_program_121,334

../../rozofs/rpc/mpprotoxdr.c,330
xdr_mpp_status_t (XDR *xdrs, mpp_status_t *objp)xdr_mpp_status_t10,131
xdr_mpp_status_ret_t (XDR *xdrs, mpp_status_ret_t *objp)xdr_mpp_status_ret_t20,291
xdr_mpp_profiler_t (XDR *xdrs, mpp_profiler_t *objp)xdr_mpp_profiler_t38,615
xdr_mpp_profiler_ret_t (XDR *xdrs, mpp_profiler_ret_t *objp)xdr_mpp_profiler_ret_t153,5106

../../rozofs/rpc/mprotoclt.c,393
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,218
mp_null_1(void *argp, CLIENT *clnt)mp_null_114,269
mp_stat_1(mp_stat_arg_t *argp, CLIENT *clnt)mp_stat_129,593
mp_remove_1(mp_remove_arg_t *argp, CLIENT *clnt)mp_remove_144,947
mp_ports_1(void *argp, CLIENT *clnt)mp_ports_159,1312
mp_list_bins_files_1(mp_list_bins_files_arg_t *argp, CLIENT *clnt)mp_list_bins_files_174,1661

../../rozofs/rpc/mproto.h,3631
#define _MPROTO_H_RPCGEN_MPROTO_H_RPCGEN7,100
typedef uint32_t mp_uuid_t[ROZOFS_UUID_SIZE_NET];mp_uuid_t18,217
enum mp_status_t {mp_status_t20,268
	MP_SUCCESS = 0,MP_SUCCESS21,287
	MP_FAILURE = 1,MP_FAILURE22,304
typedef enum mp_status_t mp_status_t;mp_status_t24,324
struct mp_status_ret_t {mp_status_ret_t26,363
	mp_status_t status;status27,388
		int error;error29,418
	} mp_status_ret_t_u;mp_status_ret_t_u30,431
typedef struct mp_status_ret_t mp_status_ret_t;mp_status_ret_t32,456
struct mp_remove_arg_t {mp_remove_arg_t34,505
	uint16_t cid;cid35,530
	uint8_t sid;sid36,545
	mp_uuid_t fid;fid37,559
typedef struct mp_remove_arg_t mp_remove_arg_t;mp_remove_arg_t39,578
struct mp_stat_arg_t {mp_stat_arg_t41,627
	uint16_t cid;cid42,650
	uint8_t sid;sid43,665
typedef struct mp_stat_arg_t mp_stat_arg_t;mp_stat_arg_t45,682
struct mp_sstat_t {mp_sstat_t47,727
	uint64_t size;size48,747
	uint64_t free;free49,763
typedef struct mp_sstat_t mp_sstat_t;mp_sstat_t51,782
struct mp_stat_ret_t {mp_stat_ret_t53,821
	mp_status_t status;status54,844
		mp_sstat_t sstat;sstat56,874
		int error;error57,894
	} mp_stat_ret_t_u;mp_stat_ret_t_u58,907
typedef struct mp_stat_ret_t mp_stat_ret_t;mp_stat_ret_t60,930
struct mp_io_address_t {mp_io_address_t62,975
	uint32_t ipv4;ipv463,1000
	uint32_t port;port64,1016
typedef struct mp_io_address_t mp_io_address_t;mp_io_address_t66,1035
struct mp_ports_ret_t {mp_ports_ret_t68,1084
	mp_status_t status;status69,1108
		struct mp_io_address_t io_addr[STORAGE_NODE_PORTS_MAX];io_addr71,1138
		int error;error72,1196
	} mp_ports_ret_t_u;mp_ports_ret_t_u73,1209
typedef struct mp_ports_ret_t mp_ports_ret_t;mp_ports_ret_t75,1233
typedef struct mp_child_t *mp_children_t;mp_children_t77,1280
struct mp_child_t {mp_child_t79,1323
	mp_uuid_t fid;fid80,1343
	uint8_t layout;layout81,1359
	uint8_t bsize;bsize82,1376
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set83,1392
	mp_children_t next;next84,1428
typedef struct mp_child_t mp_child_t;mp_child_t86,1452
struct bins_files_list_t {bins_files_list_t88,1491
	mp_children_t children;children89,1518
	uint8_t eof;eof90,1543
	uint8_t device;device91,1557
	uint16_t slice;slice92,1574
	uint8_t spare;spare93,1591
	uint64_t cookie;cookie94,1607
typedef struct bins_files_list_t bins_files_list_t;bins_files_list_t96,1628
struct mp_list_bins_files_ret_t {mp_list_bins_files_ret_t98,1681
	mp_status_t status;status99,1715
		bins_files_list_t reply;reply101,1745
		int error;error102,1772
	} mp_list_bins_files_ret_t_u;mp_list_bins_files_ret_t_u103,1785
typedef struct mp_list_bins_files_ret_t mp_list_bins_files_ret_t;mp_list_bins_files_ret_t105,1819
struct mp_list_bins_files_arg_t {mp_list_bins_files_arg_t107,1886
	uint16_t cid;cid108,1920
	uint8_t sid;sid109,1935
	uint8_t rebuild_sid;rebuild_sid110,1949
	uint8_t device;device111,1971
	uint8_t spare;spare112,1988
	uint16_t slice;slice113,2004
	uint64_t cookie;cookie114,2021
typedef struct mp_list_bins_files_arg_t mp_list_bins_files_arg_t;mp_list_bins_files_arg_t116,2042
#define MONITOR_PROGRAM MONITOR_PROGRAM118,2109
#define MONITOR_VERSION MONITOR_VERSION119,2144
#define MP_NULL MP_NULL122,2217
#define MP_STAT MP_STAT125,2335
#define MP_REMOVE MP_REMOVE128,2489
#define MP_PORTS MP_PORTS131,2657
#define MP_LIST_BINS_FILES MP_LIST_BINS_FILES134,2798
#define MP_NULL MP_NULL140,3121
#define MP_STAT MP_STAT143,3199
#define MP_REMOVE MP_REMOVE146,3295
#define MP_PORTS MP_PORTS149,3401
#define MP_LIST_BINS_FILES MP_LIST_BINS_FILES152,3502

../../rozofs/rpc/mprotosvc.c,122
#define SIG_PF SIG_PF16,265
monitor_program_1(struct svc_req *rqstp, register SVCXPRT *transp)monitor_program_121,333

../../rozofs/rpc/mprotoxdr.c,1143
xdr_mp_uuid_t (XDR *xdrs, mp_uuid_t objp)xdr_mp_uuid_t10,130
xdr_mp_status_t (XDR *xdrs, mp_status_t *objp)xdr_mp_status_t21,351
xdr_mp_status_ret_t (XDR *xdrs, mp_status_ret_t *objp)xdr_mp_status_ret_t31,509
xdr_mp_remove_arg_t (XDR *xdrs, mp_remove_arg_t *objp)xdr_mp_remove_arg_t49,828
xdr_mp_stat_arg_t (XDR *xdrs, mp_stat_arg_t *objp)xdr_mp_stat_arg_t63,1106
xdr_mp_sstat_t (XDR *xdrs, mp_sstat_t *objp)xdr_mp_sstat_t75,1323
xdr_mp_stat_ret_t (XDR *xdrs, mp_stat_ret_t *objp)xdr_mp_stat_ret_t87,1537
xdr_mp_io_address_t (XDR *xdrs, mp_io_address_t *objp)xdr_mp_io_address_t109,1956
xdr_mp_ports_ret_t (XDR *xdrs, mp_ports_ret_t *objp)xdr_mp_ports_ret_t121,2180
xdr_mp_children_t (XDR *xdrs, mp_children_t *objp)xdr_mp_children_t144,2694
xdr_mp_child_t (XDR *xdrs, mp_child_t *objp)xdr_mp_child_t154,2913
xdr_bins_files_list_t (XDR *xdrs, bins_files_list_t *objp)xdr_bins_files_list_t174,3387
xdr_mp_list_bins_files_ret_t (XDR *xdrs, mp_list_bins_files_ret_t *objp)xdr_mp_list_bins_files_ret_t194,3858
xdr_mp_list_bins_files_arg_t (XDR *xdrs, mp_list_bins_files_arg_t *objp)xdr_mp_list_bins_files_arg_t216,4328

../../rozofs/rpc/rozofs_rpc_util.c,405
#define FUSE_USE_VERSION FUSE_USE_VERSION19,646
rozofs_xdr_accepted_reply(XDR *xdrs, struct accepted_reply *ar)rozofs_xdr_accepted_reply36,966
rozofs_xdr_rejected_reply(XDR *xdrs, struct rejected_reply *rr)rozofs_xdr_rejected_reply77,1956
static const struct xdr_discrim reply_dscrm[3] = {reply_dscrm97,2458
bool_t rozofs_xdr_replymsg(XDR *xdrs, struct rpc_msg *rmsg)rozofs_xdr_replymsg106,2700

../../rozofs/rpc/rozofs_rpc_util.h,2478
#define FUSE_USE_VERSION FUSE_USE_VERSION19,646
#define ROZOFS_RPC_UTIL_HROZOFS_RPC_UTIL_H21,700
#define xdr_uint64_t xdr_uint64_t31,887
#undef HAVE_XDR_UINT64_THAVE_XDR_UINT64_T32,922
#define HAVE_XDR_UINT64_T HAVE_XDR_UINT64_T33,947
typedef struct rozofs_rpc_common_hdrrozofs_rpc_common_hdr47,1179
   uint32_t   xid;    /**< transaction identifier  */xid50,1299
   uint32_t   direction;  /**< 1: reply; 0: call   */direction51,1353
}  rozofs_rpc_common_hdr_t;rozofs_rpc_common_hdr_t52,1407
typedef struct rozofs_rpc_call_hdrrozofs_rpc_call_hdr57,1471
   rozofs_rpc_common_hdr_t  hdr;hdr59,1508
   uint32_t rpcvers;  /**< version number of rozofs RPC Must be 1 */rpcvers60,1541
   uint32_t prog;     /**< reference of the program to be called  */prog61,1610
   uint32_t vers;     /**< version of the program                 */vers62,1679
   uint32_t proc;     /**< reference of the procedure to call     */proc63,1748
} rozofs_rpc_call_hdr_t;rozofs_rpc_call_hdr_t64,1817
typedef struct rozofs_rpc_call_hdr_with_szrozofs_rpc_call_hdr_with_sz67,1844
   uint32_t   msg_sz;    /**< size of the RPC message including all header  */msg_sz69,1889
   rozofs_rpc_common_hdr_t  hdr;hdr70,1968
   uint32_t rpcvers;  /**< version number of rozofs RPC Must be 1 */rpcvers71,2001
   uint32_t prog;     /**< reference of the program to be called  */prog72,2070
   uint32_t vers;     /**< version of the program                 */vers73,2139
   uint32_t proc;     /**< reference of the procedure to call     */proc74,2208
} rozofs_rpc_call_hdr_with_sz_t;rozofs_rpc_call_hdr_with_sz_t75,2277
#define ROZOFS_GET_UINT32(ROZOFS_GET_UINT3280,2359
#define ROZOFS_GET_UINT16(ROZOFS_GET_UINT1681,2408
#define ROZOFS_SWAP_uint16(ROZOFS_SWAP_uint1683,2458
#define ROZOFS_SWAP_uint32(ROZOFS_SWAP_uint3287,2596
#define ROZOFS_SWAP_uint64(ROZOFS_SWAP_uint6493,2858
static inline void scv_call_hdr_ntoh(rozofs_rpc_call_hdr_t *hdr)scv_call_hdr_ntoh107,3440
static inline void scv_common_hdr_ntoh(rozofs_rpc_common_hdr_t *hdr)scv_common_hdr_ntoh119,3719
static inline int rozofs_rpc_get_min_rpc_reply_hdr_len()rozofs_rpc_get_min_rpc_reply_hdr_len133,4047
static inline  uint8_t *rozofs_rpc_set_ptr_on_first_byte_after_rpc_header(char *p,uint32_t *len_p)rozofs_rpc_set_ptr_on_first_byte_after_rpc_header162,4833
static inline bool_t rozofs_encode_rpc_reply(XDR *xdrs,xdrproc_t proc,caddr_t where, uint32_t xid)rozofs_encode_rpc_reply223,6781

../../rozofs/rpc/rpcclt.c,168
int rpcclt_initialize(rpcclt_t * client, const char *host, unsigned long prog,rpcclt_initialize31,869
void rpcclt_release(rpcclt_t *client) {rpcclt_release131,4138

../../rozofs/rpc/rpcclt.h,313
#define _RPCCLT_H_RPCCLT_H20,676
typedef struct rpcclt {rpcclt24,717
    int sock;sock25,741
    CLIENT *client;client26,755
    int lbg_id; /**< reference of the load balancing group */lbg_id27,775
} rpcclt_t;rpcclt_t28,837
static inline void init_rpcctl_ctx(rpcclt_t * clt) {init_rpcctl_ctx30,850

../../rozofs/rpc/sclient.c,492
int sclient_initialize(sclient_t * sclt, struct timeval timeout) {sclient_initialize29,823
void sclient_release(sclient_t * clt) {sclient_release54,1409
int sclient_read(sclient_t * clt, cid_t cid, sid_t sid, uint8_t layout, uint8_t spare,sclient_read105,2926
int sclient_read_rbs(sclient_t * clt, cid_t cid, sid_t sid, uint8_t layout, uint32_t bsize,sclient_read_rbs150,4310
int storageclt_truncate(sclient_t * clt, cid_t cid, sid_t sid, uint8_t layout,storageclt_truncate211,6253

../../rozofs/rpc/sclient.h,282
#define _SCLIENT_H_SCLIENT_H21,678
typedef struct sclient {sclient29,771
    char host[ROZOFS_HOSTNAME_MAX];host30,796
    uint32_t ipv4;ipv432,849
    uint32_t port;port33,868
    int status;status34,887
    rpcclt_t rpcclt;rpcclt35,903
} sclient_t;sclient_t36,924

../../rozofs/rpc/spclient.c,303
int sp_client_initialize(sp_client_t *clt) {sp_client_initialize28,794
void sp_client_release(sp_client_t *clt) {sp_client_release45,1152
int sp_client_get_profiler(sp_client_t *clt, spp_profiler_t *p) {sp_client_get_profiler51,1291
int sp_client_clear(sp_client_t *clt) {sp_client_clear77,2090

../../rozofs/rpc/spclient.h,268
#define _SMCLIENT_H_SMCLIENT_H21,678
typedef struct sp_client {sp_client30,793
    char host[ROZOFS_HOSTNAME_MAX];host31,820
    uint32_t port;port32,856
    uint16_t timeout;timeout33,875
    rpcclt_t rpcclt;rpcclt34,897
} sp_client_t;sp_client_t35,918

../../rozofs/rpc/spprotoclt.c,241
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,219
spp_null_1(void *argp, CLIENT *clnt)spp_null_114,270
spp_get_profiler_1(void *argp, CLIENT *clnt)spp_get_profiler_129,601
spp_clear_1(void *argp, CLIENT *clnt)spp_clear_144,966

../../rozofs/rpc/spproto.h,1637
#define _SPPROTO_H_RPCGEN_SPPROTO_H_RPCGEN7,101
enum spp_status_t {spp_status_t18,219
	SPP_SUCCESS = 0,SPP_SUCCESS19,239
	SPP_FAILURE = 1,SPP_FAILURE20,257
typedef enum spp_status_t spp_status_t;spp_status_t22,278
struct spp_status_ret_t {spp_status_ret_t24,319
	spp_status_t status;status25,345
		int error;error27,376
	} spp_status_ret_t_u;spp_status_ret_t_u28,389
typedef struct spp_status_ret_t spp_status_ret_t;spp_status_ret_t30,415
struct spp_profiler_t {spp_profiler_t32,466
	uint64_t uptime;uptime33,490
	uint64_t now;now34,508
	uint8_t vers[20];vers35,523
	uint64_t stat[2];stat36,542
	uint64_t ports[2];ports37,561
	uint64_t remove[2];remove38,581
	uint64_t list_bins_files[2];list_bins_files39,602
	uint16_t nb_io_processes;nb_io_processes40,632
	uint64_t read[3];read41,659
	uint64_t write[3];write42,678
	uint64_t truncate[3];truncate43,698
typedef struct spp_profiler_t spp_profiler_t;spp_profiler_t45,724
struct spp_profiler_ret_t {spp_profiler_ret_t47,771
	spp_status_t status;status48,799
		spp_profiler_t profiler;profiler50,830
		int error;error51,857
	} spp_profiler_ret_t_u;spp_profiler_ret_t_u52,870
typedef struct spp_profiler_ret_t spp_profiler_ret_t;spp_profiler_ret_t54,898
#define STORAGED_PROFILE_PROGRAM STORAGED_PROFILE_PROGRAM56,953
#define STORAGED_PROFILE_VERSION STORAGED_PROFILE_VERSION57,997
#define SPP_NULL SPP_NULL60,1079
#define SPP_GET_PROFILER SPP_GET_PROFILER63,1200
#define SPP_CLEAR SPP_CLEAR66,1373
#define SPP_NULL SPP_NULL72,1622
#define SPP_GET_PROFILER SPP_GET_PROFILER75,1703
#define SPP_CLEAR SPP_CLEAR78,1836

../../rozofs/rpc/spprotosvc.c,140
#define SIG_PF SIG_PF16,266
storaged_profile_program_1(struct svc_req *rqstp, register SVCXPRT *transp)storaged_profile_program_121,334

../../rozofs/rpc/spprotoxdr.c,329
xdr_spp_status_t (XDR *xdrs, spp_status_t *objp)xdr_spp_status_t10,131
xdr_spp_status_ret_t (XDR *xdrs, spp_status_ret_t *objp)xdr_spp_status_ret_t20,291
xdr_spp_profiler_t (XDR *xdrs, spp_profiler_t *objp)xdr_spp_profiler_t38,615
xdr_spp_profiler_ret_t (XDR *xdrs, spp_profiler_ret_t *objp)xdr_spp_profiler_ret_t77,1839

../../rozofs/rpc/sprotoclt.c,382
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,218
sp_null_1(void *argp, CLIENT *clnt)sp_null_114,269
sp_write_1(sp_write_arg_t *argp, CLIENT *clnt)sp_write_129,594
sp_read_1(sp_read_arg_t *argp, CLIENT *clnt)sp_read_144,952
sp_truncate_1(sp_truncate_arg_t *argp, CLIENT *clnt)sp_truncate_159,1306
sp_remove_1(sp_remove_arg_t *argp, CLIENT *clnt)sp_remove_174,1680

../../rozofs/rpc/sproto.h,4732
#define _SPROTO_H_RPCGEN_SPROTO_H_RPCGEN7,100
typedef uint32_t sp_uuid_t[ROZOFS_UUID_SIZE_RPC];sp_uuid_t18,217
enum sp_status_t {sp_status_t20,268
	SP_SUCCESS = 0,SP_SUCCESS21,287
	SP_FAILURE = 1,SP_FAILURE22,304
typedef enum sp_status_t sp_status_t;sp_status_t24,324
struct sp_status_ret_t {sp_status_ret_t26,363
	sp_status_t status;status27,388
		int error;error29,418
	} sp_status_ret_t_u;sp_status_ret_t_u30,431
typedef struct sp_status_ret_t sp_status_ret_t;sp_status_ret_t32,456
struct sp_write_arg_t {sp_write_arg_t34,505
	uint16_t cid;cid35,529
	uint8_t sid;sid36,544
	uint8_t layout;layout37,558
	uint8_t spare;spare38,575
	uint32_t dist_set[ROZOFS_SAFE_MAX_RPC];dist_set39,591
	sp_uuid_t fid;fid40,632
	uint8_t proj_id;proj_id41,648
	uint64_t bid;bid42,666
	uint32_t nb_proj;nb_proj43,681
	uint32_t bsize;bsize44,700
		u_int bins_len;bins_len46,727
		char *bins_val;bins_val47,745
	} bins;bins48,763
typedef struct sp_write_arg_t sp_write_arg_t;sp_write_arg_t50,775
struct sp_write_arg_no_bins_t {sp_write_arg_no_bins_t52,822
	uint16_t cid;cid53,854
	uint8_t sid;sid54,869
	uint8_t layout;layout55,883
	uint8_t spare;spare56,900
	uint32_t dist_set[ROZOFS_SAFE_MAX_RPC];dist_set57,916
	sp_uuid_t fid;fid58,957
	uint8_t proj_id;proj_id59,973
	uint64_t bid;bid60,991
	uint32_t nb_proj;nb_proj61,1006
	uint32_t bsize;bsize62,1025
	uint32_t len;len63,1042
typedef struct sp_write_arg_no_bins_t sp_write_arg_no_bins_t;sp_write_arg_no_bins_t65,1060
struct sp_read_arg_t {sp_read_arg_t67,1123
	uint16_t cid;cid68,1146
	uint8_t sid;sid69,1161
	uint8_t layout;layout70,1175
	uint8_t bsize;bsize71,1192
	uint8_t spare;spare72,1208
	uint32_t dist_set[ROZOFS_SAFE_MAX_RPC];dist_set73,1224
	sp_uuid_t fid;fid74,1265
	uint64_t bid;bid75,1281
	uint32_t nb_proj;nb_proj76,1296
typedef struct sp_read_arg_t sp_read_arg_t;sp_read_arg_t78,1318
struct sp_truncate_arg_no_bins_t {sp_truncate_arg_no_bins_t80,1363
	uint16_t cid;cid81,1398
	uint8_t sid;sid82,1413
	uint8_t layout;layout83,1427
	uint8_t bsize;bsize84,1444
	uint8_t spare;spare85,1460
	uint8_t padding;padding86,1476
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set87,1494
	sp_uuid_t fid;fid88,1530
	uint8_t proj_id;proj_id89,1546
	uint16_t last_seg;last_seg90,1564
	uint64_t last_timestamp;last_timestamp91,1584
	uint64_t bid;bid92,1610
	uint32_t len;len93,1625
typedef struct sp_truncate_arg_no_bins_t sp_truncate_arg_no_bins_t;sp_truncate_arg_no_bins_t95,1643
struct sp_truncate_arg_t {sp_truncate_arg_t97,1712
	uint16_t cid;cid98,1739
	uint8_t sid;sid99,1754
	uint8_t layout;layout100,1768
	uint8_t bsize;bsize101,1785
	uint8_t spare;spare102,1801
	uint8_t padding;padding103,1817
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set104,1835
	sp_uuid_t fid;fid105,1871
	uint8_t proj_id;proj_id106,1887
	uint32_t last_seg;last_seg107,1905
	uint64_t last_timestamp;last_timestamp108,1925
	uint64_t bid;bid109,1951
		u_int bins_len;bins_len111,1976
		char *bins_val;bins_val112,1994
	} bins;bins113,2012
typedef struct sp_truncate_arg_t sp_truncate_arg_t;sp_truncate_arg_t115,2024
struct sp_remove_arg_t {sp_remove_arg_t117,2077
	uint16_t cid;cid118,2102
	uint8_t sid;sid119,2117
	uint8_t layout;layout120,2131
	uint32_t dist_set[ROZOFS_SAFE_MAX];dist_set121,2148
	sp_uuid_t fid;fid122,2185
typedef struct sp_remove_arg_t sp_remove_arg_t;sp_remove_arg_t124,2204
struct sp_read_t {sp_read_t126,2253
	uint32_t filler;filler127,2272
		u_int bins_len;bins_len129,2300
		char *bins_val;bins_val130,2318
	} bins;bins131,2336
	uint64_t file_size;file_size132,2345
typedef struct sp_read_t sp_read_t;sp_read_t134,2369
struct sp_read_ret_t {sp_read_ret_t136,2406
	sp_status_t status;status137,2429
		sp_read_t rsp;rsp139,2459
		int error;error140,2476
	} sp_read_ret_t_u;sp_read_ret_t_u141,2489
typedef struct sp_read_ret_t sp_read_ret_t;sp_read_ret_t143,2512
struct sp_write_ret_t {sp_write_ret_t145,2557
	sp_status_t status;status146,2581
		uint64_t file_size;file_size148,2611
		int error;error149,2633
	} sp_write_ret_t_u;sp_write_ret_t_u150,2646
typedef struct sp_write_ret_t sp_write_ret_t;sp_write_ret_t152,2670
#define STORAGE_PROGRAM STORAGE_PROGRAM154,2717
#define STORAGE_VERSION STORAGE_VERSION155,2752
#define SP_NULL SP_NULL158,2825
#define SP_WRITE SP_WRITE161,2943
#define SP_READ SP_READ164,3104
#define SP_TRUNCATE SP_TRUNCATE167,3258
#define SP_REMOVE SP_REMOVE170,3436
#define SP_NULL SP_NULL176,3696
#define SP_WRITE SP_WRITE179,3774
#define SP_READ SP_READ182,3875
#define SP_TRUNCATE SP_TRUNCATE185,3971
#define SP_REMOVE SP_REMOVE188,4083

../../rozofs/rpc/sprotosvc.c,122
#define SIG_PF SIG_PF16,265
storage_program_1(struct svc_req *rqstp, register SVCXPRT *transp)storage_program_121,333

../../rozofs/rpc/sprotoxdr.c,989
xdr_sp_uuid_t (XDR *xdrs, sp_uuid_t objp)xdr_sp_uuid_t10,130
xdr_sp_status_t (XDR *xdrs, sp_status_t *objp)xdr_sp_status_t21,351
xdr_sp_status_ret_t (XDR *xdrs, sp_status_ret_t *objp)xdr_sp_status_ret_t31,509
xdr_sp_write_arg_t (XDR *xdrs, sp_write_arg_t *objp)xdr_sp_write_arg_t49,828
xdr_sp_write_arg_no_bins_t (XDR *xdrs, sp_write_arg_no_bins_t *objp)xdr_sp_write_arg_no_bins_t81,1712
xdr_sp_read_arg_t (XDR *xdrs, sp_read_arg_t *objp)xdr_sp_read_arg_t113,2560
xdr_sp_truncate_arg_no_bins_t (XDR *xdrs, sp_truncate_arg_no_bins_t *objp)xdr_sp_truncate_arg_no_bins_t141,3272
xdr_sp_truncate_arg_t (XDR *xdrs, sp_truncate_arg_t *objp)xdr_sp_truncate_arg_t177,4248
xdr_sp_remove_arg_t (XDR *xdrs, sp_remove_arg_t *objp)xdr_sp_remove_arg_t213,5260
xdr_sp_read_t (XDR *xdrs, sp_read_t *objp)xdr_sp_read_t233,5738
xdr_sp_read_ret_t (XDR *xdrs, sp_read_ret_t *objp)xdr_sp_read_ret_t247,6066
xdr_sp_write_ret_t (XDR *xdrs, sp_write_ret_t *objp)xdr_sp_write_ret_t269,6482

../../rozofs/rpc/stcpprotoclt.c,253
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,221
stcpp_null_1(void *argp, CLIENT *clnt)stcpp_null_114,272
stcpp_get_profiler_1(void *argp, CLIENT *clnt)stcpp_get_profiler_129,609
stcpp_clear_1(void *argp, CLIENT *clnt)stcpp_clear_144,984

../../rozofs/rpc/stcpproto.h,2703
#define _STCPPROTO_H_RPCGEN_STCPPROTO_H_RPCGEN7,103
enum stcpp_status_t {stcpp_status_t18,223
	STCPP_SUCCESS = 0,STCPP_SUCCESS19,245
	STCPP_FAILURE = 1,STCPP_FAILURE20,265
typedef enum stcpp_status_t stcpp_status_t;stcpp_status_t22,288
struct stcpp_status_ret_t {stcpp_status_ret_t24,333
	stcpp_status_t status;status25,361
		int error;error27,394
	} stcpp_status_ret_t_u;stcpp_status_ret_t_u28,407
typedef struct stcpp_status_ret_t stcpp_status_ret_t;stcpp_status_ret_t30,435
struct stcpp_profiler_t {stcpp_profiler_t32,490
	uint64_t uptime;uptime33,516
	uint64_t now;now34,534
	uint8_t vers[20];vers35,549
	uint64_t stat[2];stat36,568
	uint64_t ports[2];ports37,587
	uint64_t remove[2];remove38,607
	uint64_t read_req[3];read_req39,628
	uint64_t read[3];read40,651
	uint64_t trans_inv[3];trans_inv41,670
	uint64_t write[3];write42,694
	uint64_t write_req[3];write_req43,714
	uint64_t trans_forward[3];trans_forward44,738
	uint64_t truncate[3];truncate45,766
	uint64_t truncate_prj[3];truncate_prj46,789
	uint64_t truncate_prj_tmo[2];truncate_prj_tmo47,816
	uint64_t truncate_prj_err[2];truncate_prj_err48,847
	uint64_t delete_prj[3];delete_prj50,899
	uint64_t delete_prj_tmo[2];delete_prj_tmo51,924
	uint64_t delete_prj_err[2];delete_prj_err52,953
	uint64_t read_prj[3];read_prj53,982
	uint64_t write_prj[3];write_prj54,1005
	uint64_t read_prj_tmo[2];read_prj_tmo55,1029
	uint64_t read_prj_err[2];read_prj_err56,1056
	uint64_t read_prj_enoent[2];read_prj_enoent57,1083
	uint64_t read_blk_footer[2];read_blk_footer58,1113
	uint64_t write_prj_tmo[2];write_prj_tmo59,1143
	uint64_t write_prj_err[2];write_prj_err60,1171
	uint64_t read_sid_miss[2];read_sid_miss61,1199
	uint64_t write_sid_miss[2];write_sid_miss62,1227
	uint64_t truncate_sid_miss[2];truncate_sid_miss63,1256
	uint16_t io_process_ports[32];io_process_ports64,1288
typedef struct stcpp_profiler_t stcpp_profiler_t;stcpp_profiler_t66,1323
struct stcpp_profiler_ret_t {stcpp_profiler_ret_t68,1374
	stcpp_status_t status;status69,1404
		stcpp_profiler_t profiler;profiler71,1437
		int error;error72,1466
	} stcpp_profiler_ret_t_u;stcpp_profiler_ret_t_u73,1479
typedef struct stcpp_profiler_ret_t stcpp_profiler_ret_t;stcpp_profiler_ret_t75,1509
#define STORCLI_PROFILE_PROGRAM STORCLI_PROFILE_PROGRAM77,1568
#define STORCLI_PROFILE_VERSION STORCLI_PROFILE_VERSION78,1611
#define STCPP_NULL STCPP_NULL81,1692
#define STCPP_GET_PROFILER STCPP_GET_PROFILER84,1819
#define STCPP_CLEAR STCPP_CLEAR87,2002
#define STCPP_NULL STCPP_NULL93,2260
#define STCPP_GET_PROFILER STCPP_GET_PROFILER96,2347
#define STCPP_CLEAR STCPP_CLEAR99,2490

../../rozofs/rpc/stcpprotosvc.c,138
#define SIG_PF SIG_PF16,268
storcli_profile_program_1(struct svc_req *rqstp, register SVCXPRT *transp)storcli_profile_program_121,336

../../rozofs/rpc/stcpprotoxdr.c,354
xdr_stcpp_status_t (XDR *xdrs, stcpp_status_t *objp)xdr_stcpp_status_t10,133
xdr_stcpp_status_ret_t (XDR *xdrs, stcpp_status_ret_t *objp)xdr_stcpp_status_ret_t20,297
xdr_stcpp_profiler_t (XDR *xdrs, stcpp_profiler_t *objp)xdr_stcpp_profiler_t38,631
xdr_stcpp_profiler_ret_t (XDR *xdrs, stcpp_profiler_ret_t *objp)xdr_stcpp_profiler_ret_t141,4458

../../rozofs/rpc/storcli_lbg.c,640
int storcli_lbg_id[4] = {-1,-1,-1,-1};  /**< reference of the load balancing group to join storcli processes */storcli_lbg_id43,1233
int storcli_lbg_get_load_balancing_reference(int idx)storcli_lbg_get_load_balancing_reference53,1557
int storcli_lbg_get_lbg_from_fid(fid_t fid)storcli_lbg_get_lbg_from_fid58,1690
int storcli_get_storcli_idx_from_fid(fid_t fid)storcli_get_storcli_idx_from_fid64,1843
static af_unix_socket_conf_t  af_unix_storcli_conf =af_unix_storcli_conf72,2006
int storcli_lbg_initialize(exportclt_t *exportclt,uint16_t rozofsmount_instance ,int first_instance,int nb_instances) storcli_lbg_initialize98,4092

../../rozofs/rpc/storcli_lbg_prototypes.h,194
 #define STORCLI_LBG_PROTOTYPES_HSTORCLI_LBG_PROTOTYPES_H20,681
#define STORCLI_PER_FSMOUNT_POWER2 STORCLI_PER_FSMOUNT_POWER236,1053
#define STORCLI_PER_FSMOUNT STORCLI_PER_FSMOUNT37,1090

../../rozofs/rpc/storcli_protoclt.c,453
static struct timeval TIMEOUT = { 25, 0 };TIMEOUT11,225
storcli_null_1(void *argp, CLIENT *clnt)storcli_null_114,276
storcli_write_1(storcli_write_arg_t *argp, CLIENT *clnt)storcli_write_129,617
storcli_read_1(storcli_read_arg_t *argp, CLIENT *clnt)storcli_read_144,1012
storcli_truncate_1(storcli_truncate_arg_t *argp, CLIENT *clnt)storcli_truncate_159,1401
storcli_delete_1(storcli_delete_arg_t *argp, CLIENT *clnt)storcli_delete_174,1810

../../rozofs/rpc/storcli_proto.h,4662
#define _STORCLI_PROTO_H_RPCGEN_STORCLI_PROTO_H_RPCGEN7,107
typedef u_char storcli_uuid_t[ROZOFS_UUID_SIZE];storcli_uuid_t18,231
enum storcli_status_t {storcli_status_t20,281
	STORCLI_SUCCESS = 0,STORCLI_SUCCESS21,305
	STORCLI_FAILURE = 1,STORCLI_FAILURE22,327
typedef enum storcli_status_t storcli_status_t;storcli_status_t24,352
struct storcli_status_ret_t {storcli_status_ret_t26,401
	storcli_status_t status;status27,431
		int error;error29,466
	} storcli_status_ret_t_u;storcli_status_ret_t_u30,479
typedef struct storcli_status_ret_t storcli_status_ret_t;storcli_status_ret_t32,509
struct storcli_write_arg_t {storcli_write_arg_t34,568
	uint16_t cid;cid35,597
	uint8_t sid;sid36,612
	uint8_t empty_file;empty_file37,626
	uint8_t layout;layout38,647
	uint8_t bsize;bsize39,664
	uint32_t padding;padding40,680
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set41,699
	storcli_uuid_t fid;fid42,735
	uint64_t off;off43,756
		u_int data_len;data_len45,781
		char *data_val;data_val46,799
	} data;data47,817
typedef struct storcli_write_arg_t storcli_write_arg_t;storcli_write_arg_t49,829
struct storcli_write_arg_no_data_t {storcli_write_arg_no_data_t51,886
	uint16_t cid;cid52,923
	uint8_t sid;sid53,938
	uint8_t empty_file;empty_file54,952
	uint8_t layout;layout55,973
	uint8_t bsize;bsize56,990
	uint32_t padding;padding57,1006
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set58,1025
	storcli_uuid_t fid;fid59,1061
	uint64_t off;off60,1082
	uint32_t len;len61,1097
typedef struct storcli_write_arg_no_data_t storcli_write_arg_no_data_t;storcli_write_arg_no_data_t63,1115
struct storcli_read_arg_t {storcli_read_arg_t65,1188
	uint16_t cid;cid66,1216
	uint8_t sid;sid67,1231
	uint8_t layout;layout68,1245
	uint8_t spare;spare69,1262
	uint8_t bsize;bsize70,1278
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set71,1294
	storcli_uuid_t fid;fid72,1330
	uint8_t proj_id;proj_id73,1351
	uint64_t bid;bid74,1369
	uint32_t nb_proj;nb_proj75,1384
typedef struct storcli_read_arg_t storcli_read_arg_t;storcli_read_arg_t77,1406
struct storcli_truncate_arg_t {storcli_truncate_arg_t79,1461
	uint16_t cid;cid80,1493
	uint8_t sid;sid81,1508
	uint8_t layout;layout82,1522
	uint8_t spare;spare83,1539
	uint8_t bsize;bsize84,1555
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set85,1571
	storcli_uuid_t fid;fid86,1607
	uint16_t last_seg;last_seg87,1628
	uint64_t bid;bid88,1648
typedef struct storcli_truncate_arg_t storcli_truncate_arg_t;storcli_truncate_arg_t90,1666
struct storcli_delete_arg_t {storcli_delete_arg_t92,1729
	uint16_t cid;cid93,1759
	uint8_t sid;sid94,1774
	uint8_t layout;layout95,1788
	uint8_t dist_set[ROZOFS_SAFE_MAX];dist_set96,1805
	storcli_uuid_t fid;fid97,1841
typedef struct storcli_delete_arg_t storcli_delete_arg_t;storcli_delete_arg_t99,1865
struct storcli_read_no_data_ret_t {storcli_read_no_data_ret_t101,1924
	uint32_t alignment;alignment102,1960
	uint32_t len;len103,1981
typedef struct storcli_read_no_data_ret_t storcli_read_no_data_ret_t;storcli_read_no_data_ret_t105,1999
struct storcli_read_ret_no_data_t {storcli_read_ret_no_data_t107,2070
	storcli_status_t status;status108,2106
		storcli_read_no_data_ret_t len;len110,2141
		int error;error111,2175
	} storcli_read_ret_no_data_t_u;storcli_read_ret_no_data_t_u112,2188
typedef struct storcli_read_ret_no_data_t storcli_read_ret_no_data_t;storcli_read_ret_no_data_t114,2224
struct storcli_read_data_ret_t {storcli_read_data_ret_t116,2295
	uint32_t alignment;alignment117,2328
		u_int dara_len;dara_len119,2359
		char *dara_val;dara_val120,2377
	} dara;dara121,2395
typedef struct storcli_read_data_ret_t storcli_read_data_ret_t;storcli_read_data_ret_t123,2407
struct storcli_read_ret_t {storcli_read_ret_t125,2472
	storcli_status_t status;status126,2500
		struct storcli_read_data_ret_t data;data128,2535
		int error;error129,2574
	} storcli_read_ret_t_u;storcli_read_ret_t_u130,2587
typedef struct storcli_read_ret_t storcli_read_ret_t;storcli_read_ret_t132,2615
#define STORCLI_PROGRAM STORCLI_PROGRAM134,2670
#define STORCLI_VERSION STORCLI_VERSION135,2705
#define STORCLI_NULL STORCLI_NULL138,2778
#define STORCLI_WRITE STORCLI_WRITE141,2911
#define STORCLI_READ STORCLI_READ144,3109
#define STORCLI_TRUNCATE STORCLI_TRUNCATE147,3298
#define STORCLI_DELETE STORCLI_DELETE150,3511
#define STORCLI_NULL STORCLI_NULL156,3806
#define STORCLI_WRITE STORCLI_WRITE159,3899
#define STORCLI_READ STORCLI_READ162,4027
#define STORCLI_TRUNCATE STORCLI_TRUNCATE165,4148
#define STORCLI_DELETE STORCLI_DELETE168,4285

../../rozofs/rpc/storcli_protosvc.c,122
#define SIG_PF SIG_PF16,272
storcli_program_1(struct svc_req *rqstp, register SVCXPRT *transp)storcli_program_121,340

../../rozofs/rpc/storcli_protoxdr.c,1205
xdr_storcli_uuid_t (XDR *xdrs, storcli_uuid_t objp)xdr_storcli_uuid_t10,137
xdr_storcli_status_t (XDR *xdrs, storcli_status_t *objp)xdr_storcli_status_t21,360
xdr_storcli_status_ret_t (XDR *xdrs, storcli_status_ret_t *objp)xdr_storcli_status_ret_t31,528
xdr_storcli_write_arg_t (XDR *xdrs, storcli_write_arg_t *objp)xdr_storcli_write_arg_t49,872
xdr_storcli_write_arg_no_data_t (XDR *xdrs, storcli_write_arg_no_data_t *objp)xdr_storcli_write_arg_no_data_t79,1709
xdr_storcli_read_arg_t (XDR *xdrs, storcli_read_arg_t *objp)xdr_storcli_read_arg_t109,2510
xdr_storcli_truncate_arg_t (XDR *xdrs, storcli_truncate_arg_t *objp)xdr_storcli_truncate_arg_t139,3291
xdr_storcli_delete_arg_t (XDR *xdrs, storcli_delete_arg_t *objp)xdr_storcli_delete_arg_t167,4021
xdr_storcli_read_no_data_ret_t (XDR *xdrs, storcli_read_no_data_ret_t *objp)xdr_storcli_read_no_data_ret_t187,4512
xdr_storcli_read_ret_no_data_t (XDR *xdrs, storcli_read_ret_no_data_t *objp)xdr_storcli_read_ret_no_data_t199,4762
xdr_storcli_read_data_ret_t (XDR *xdrs, storcli_read_data_ret_t *objp)xdr_storcli_read_data_ret_t221,5262
xdr_storcli_read_ret_t (XDR *xdrs, storcli_read_ret_t *objp)xdr_storcli_read_ret_t233,5558
