@c *** Chapter [Installing RozoFS]
@node       Installing RozoFS, Setting up RozoFS, About RozoFS, Top
@chapter    Installing RozoFS
@ifnotdocbook
@cindex     Build
@cindex     Install
@cindex     Configuration
@end ifnotdocbook

@menu
* Installing RozoFS from Binary Packages::
* Building and Installing from Sources::
@end menu

@c *** Section [Installing RozoFS from Binary Packages]
@node       Installing RozoFS from Binary Packages, Building and Installing from Sources, Installing RozoFS, Installing RozoFS
@section    Installing RozoFS from Binary Packages
@ifnotdocbook
@cindex     Installation
@cindex     Build
@cindex     Binary packages
@end ifnotdocbook

@menu
* Advance Package Tool (APT)::
@end menu

Fizians @acronym{SAS} provides @strong{binary packages} for every component of
RozoFS and various @acronym{GNU}/Linux distributions based on Debian 
(@file{.deb}) and Redhat (@file{.rpm}) package format. Using binary packages
brings you benefits. First, you do not need a full development environment and
other hand binary packages come with init script, easy dependency management 
etc... that can simplify deployment and management process. See help of your
favorite @acronym{GNU}/Linux distribution's package manager for package
installation. According to their roles, nodes should have at least one these
packages installed :

@itemize
@item @file{rozofs-storaged_<version>_<arch>.<deb|rpm>}
@item @file{rozofs-exportd_<version>_<arch>.<deb|rpm>}
@item @file{rozofs-rozofsmount_<version>_<arch>.<deb|rpm>}
@end itemize

To help and automate management, the following optional packages should be
installed on each node involved in a RozoFS platform:

@itemize
@item @file{rozofs-manager-lib_<version>_<arch>.<deb|rpm>}
@item @file{rozofs-manager-cli_<version>_<arch>.<deb|rpm>}
@item @file{rozofs-manager-agent_<version>_<arch>.<deb|rpm>}
@item @file{rozofs-rprof_<version>_<arch>.<deb|rpm>}
@item @file{rozofs-rozodebug_<version>_<arch>.<deb|rpm>}
@end itemize

@node       Advance Package Tool (APT), Install Release Key, Installing RozoFS from Binary Packages, Installing RozoFS from Binary Packages
@subsection Advance Package Tool (APT)

@menu
* Install Release Key::
* Add Release Packages::
* Install Packages::
@end menu

@node       Install Release Key, Add Release Packages, Advance Package Tool (APT), Advance Package Tool (APT)
@subsubsection Install Release Key

@example
wget -O - http://54.225.196.202/debian/devel@@rozofs.com.gpg.key | apt-key add -
@end example

@node       Add Release Packages, Install Packages, Install Release Key, Advance Package Tool (APT)
@subsubsection Add Release Packages


For the lastest stable release :

@example
# echo deb http://54.225.196.202/debian/master $(lsb_release -sc) main | 
tee /etc/apt/sources.list.d/rozofs.list
@end example

For the lastest development release :

@example
# echo deb http://54.225.196.202/debian/develop $(lsb_release -sc) main | 
tee /etc/apt/sources.list.d/rozofs.list
@end example

@node       Install Packages, , Add Release Packages, Advance Package Tool (APT)
@subsubsection Install Packages

On each node involved in a RozoFS platform:

@example
# apt-get update
# apt-get install rozofs-storaged
# apt-get install rozofs-exportd
# apt-get install rozofs-rozofsmount
# apt-get install rozofs-rprof
# apt-get install rozofs-rozodebug
@end example

To help and automate management:

@example
# apt-get install rozofs-manager-lib
# apt-get install rozofs-manager-cli
# apt-get install rozofs-manager-agent
@end example

@c *** Section [Building and Installing from Sources]
@node       Building and Installing from Sources, , Installing RozoFS from Binary Packages, Installing RozoFS
@section    Building and Installing from Sources

@menu
* Prerequisites::
* Build the Source::
@end menu

@c *** Subsection [Prerequisites]
@node       Prerequisites, Build the Source, Building and Installing from Sources, Building and Installing from Sources
@subsection Prerequisites
@ifnotdocbook
@cindex     Prerequisites
@end ifnotdocbook

The latest stable release of RozoFS can be downloaded from
@url{http://github.com/rozofs/rozofs}.

To build the RozoFS source code, it is necessary to install several libraries
and tools. RozoFS uses the cross-platform build system @strong{cmake} to get you
started quickly. RozoFS @strong{dependencies} are the following:
@itemize
@item @command{cmake}
@item @command{libattr1-dev}
@item @command{uuid-dev}
@item @command{libconfig-dev}
@item @command{libfuse-dev}
@item @command{libreadline-dev}
@item @command{python2.6-dev}
@item @command{libpthread}
@item @command{libcrypt}
@item @command{swig}
@end itemize

@c *** Subsection [Build the Source]
@node       Build the Source, , Prerequisites, Building and Installing from Sources
@subsection Build the Source

Once the required packages are installed on your appropriate system, you can
generate the build configuration with the following commands (using default
values compiles RozoFS in Release mode and installs it on @file{/usr/local}) :
@example
# cmake -G "Unix Makefiles" ..

-- The C compiler identification is GNU
-- Check for working C compiler: /usr/bin/gcc
-- Check for working C caompiler: /usr/bin/gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Configuring done
-- Generating done
-- Build files have been written to: /root/rozofs/build
# make
# make install
@end example

If you use default values, make will place the executables in
@file{/usr/local/bin}, build options (@env{CMAKE_INSTALL_PREFIX},
@env{CMAKE_BUILD_TYPE}...) of generated build tree can be modified with the
following command :
@example
# make edit_cache
@end example
